{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "views",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initializeMarket",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nTokenActions",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "batchAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidateCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidatefCash",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cETH",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "calculationViews",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAccountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAction",
              "type": "address"
            }
          ],
          "internalType": "struct Router.DeployedContracts",
          "name": "contracts",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BATCH_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALCULATION_VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNANCE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIALIZE_MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_CURRENCY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_FCASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NTOKEN_ACTIONS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "getRouterImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseRouter_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseGuardian_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/external/Router.sol",
    "46": "contracts/global/Constants.sol",
    "49": "contracts/global/StorageLayoutV1.sol",
    "51": "contracts/global/Types.sol"
  },
  "ast": {
    "absolutePath": "contracts/external/Router.sol",
    "exportedSymbols": {
      "ABDKMath64x64": [
        46925
      ],
      "AaveHandler": [
        24429
      ],
      "AccountBalance": [
        58692
      ],
      "AccountContext": [
        58611
      ],
      "AccountContextHandler": [
        21641
      ],
      "AggregatorInterface": [
        64228
      ],
      "AggregatorV2V3Interface": [
        60969
      ],
      "AggregatorV3Interface": [
        64274
      ],
      "AssetHandler": [
        37497
      ],
      "AssetRate": [
        28113
      ],
      "AssetRateAdapter": [
        61013
      ],
      "AssetRateParameters": [
        58507
      ],
      "AssetRateStorage": [
        58575
      ],
      "AssetStorageState": [
        58368
      ],
      "BalanceAction": [
        58389
      ],
      "BalanceActionWithTrades": [
        58405
      ],
      "BalanceHandler": [
        23044
      ],
      "BalanceState": [
        58500
      ],
      "BalanceStorage": [
        58635
      ],
      "BatchLend": [
        58376
      ],
      "Bitmap": [
        47266
      ],
      "BitmapAssetsHandler": [
        34526
      ],
      "CErc20Interface": [
        61303
      ],
      "CEtherInterface": [
        62423
      ],
      "CTokenInterface": [
        62703
      ],
      "CashGroup": [
        29392
      ],
      "CashGroupParameters": [
        58516
      ],
      "CashGroupSettings": [
        58600
      ],
      "CompoundHandler": [
        63587
      ],
      "Constants": [
        57813
      ],
      "Context": [
        64297
      ],
      "DateTime": [
        30031
      ],
      "Deployments": [
        59940
      ],
      "DepositActionType": [
        58363
      ],
      "ERC20": [
        62178
      ],
      "ETHRate": [
        58481
      ],
      "ETHRateStorage": [
        58570
      ],
      "FloatingPoint56": [
        47342
      ],
      "GenericToken": [
        63743
      ],
      "IAToken": [
        62200
      ],
      "IATokenFull": [
        62235
      ],
      "IEIP20NonStandard": [
        64873
      ],
      "IERC20": [
        62395
      ],
      "ILendingPool": [
        62317
      ],
      "IRewarder": [
        61031
      ],
      "IScaledBalanceToken": [
        62225
      ],
      "IVaultAccountAction": [
        59407
      ],
      "IVaultAction": [
        59205
      ],
      "IVaultController": [
        59412
      ],
      "Incentives": [
        23233
      ],
      "LendingPoolStorage": [
        62241
      ],
      "LibStorage": [
        57540
      ],
      "LiquidationFactors": [
        58459
      ],
      "Market": [
        31945
      ],
      "MarketParameters": [
        58546
      ],
      "MarketStorage": [
        58655
      ],
      "MigrateIncentives": [
        1628
      ],
      "NotionalCalculations": [
        57001
      ],
      "NotionalGovernance": [
        59656
      ],
      "NotionalProxy": [
        58336
      ],
      "NotionalTreasury": [
        61387
      ],
      "NotionalViews": [
        60246
      ],
      "PortfolioAsset": [
        58529
      ],
      "PortfolioAssetStorage": [
        58667
      ],
      "PortfolioHandler": [
        35817
      ],
      "PortfolioState": [
        58470
      ],
      "Router": [
        2819
      ],
      "SafeInt256": [
        47694
      ],
      "SafeMath": [
        56464
      ],
      "SettleAmount": [
        58410
      ],
      "SettlementRateStorage": [
        58642
      ],
      "StorageLayoutV1": [
        56831
      ],
      "Token": [
        58421
      ],
      "TokenHandler": [
        24186
      ],
      "TokenStorage": [
        58557
      ],
      "TokenType": [
        58348
      ],
      "TradeActionType": [
        58355
      ],
      "TransferAssets": [
        36048
      ],
      "VaultAccount": [
        58822
      ],
      "VaultAccountSecondaryDebtShareStorage": [
        58809
      ],
      "VaultAccountStorage": [
        58802
      ],
      "VaultBorrowCapacityStorage": [
        58722
      ],
      "VaultConfig": [
        58760
      ],
      "VaultConfigStorage": [
        58717
      ],
      "VaultSecondaryBorrowStorage": [
        58731
      ],
      "VaultSettledAssetsStorage": [
        58778
      ],
      "VaultState": [
        58793
      ],
      "VaultStateStorage": [
        58773
      ],
      "ifCashStorage": [
        58658
      ],
      "nERC1155Interface": [
        59817
      ],
      "nTokenCalculations": [
        32509
      ],
      "nTokenContext": [
        58626
      ],
      "nTokenERC20": [
        59933
      ],
      "nTokenHandler": [
        33535
      ],
      "nTokenMintAction": [
        16808
      ],
      "nTokenPortfolio": [
        58436
      ],
      "nTokenSupply": [
        33837
      ],
      "nTokenTotalSupplyStorage": [
        58681
      ],
      "nTokenTotalSupplyStorage_deprecated": [
        58674
      ]
    },
    "id": 2820,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1911,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:16"
      },
      {
        "id": 1912,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:19:16"
      },
      {
        "absolutePath": "contracts/external/actions/nTokenMintAction.sol",
        "file": "./actions/nTokenMintAction.sol",
        "id": 1913,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 16809,
        "src": "86:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/StorageLayoutV1.sol",
        "file": "../global/StorageLayoutV1.sol",
        "id": 1914,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 56832,
        "src": "127:39:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/Types.sol",
        "file": "../global/Types.sol",
        "id": 1915,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 58823,
        "src": "167:29:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/nTokenERC20.sol",
        "file": "../../interfaces/notional/nTokenERC20.sol",
        "id": 1917,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 59934,
        "src": "197:70:16",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1916,
              "name": "nTokenERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "205:11:16",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalProxy.sol",
        "file": "../../interfaces/notional/NotionalProxy.sol",
        "id": 1918,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 58337,
        "src": "268:53:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/IVaultController.sol",
        "file": "../../interfaces/notional/IVaultController.sol",
        "id": 1921,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 59413,
        "src": "322:97:16",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1919,
              "name": "IVaultAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "330:12:16",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 1920,
              "name": "IVaultAccountAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "344:19:16",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/nERC1155Interface.sol",
        "file": "../../interfaces/notional/nERC1155Interface.sol",
        "id": 1923,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 59818,
        "src": "420:82:16",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1922,
              "name": "nERC1155Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "428:17:16",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalGovernance.sol",
        "file": "../../interfaces/notional/NotionalGovernance.sol",
        "id": 1925,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 59657,
        "src": "503:84:16",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1924,
              "name": "NotionalGovernance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "511:18:16",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalCalculations.sol",
        "file": "../../interfaces/notional/NotionalCalculations.sol",
        "id": 1927,
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 57002,
        "src": "588:88:16",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1926,
              "name": "NotionalCalculations",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "596:20:16",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1929,
              "name": "StorageLayoutV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 56831,
              "src": "1286:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageLayoutV1_$56831",
                "typeString": "contract StorageLayoutV1"
              }
            },
            "id": 1930,
            "nodeType": "InheritanceSpecifier",
            "src": "1286:15:16"
          }
        ],
        "contractDependencies": [
          56831
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1928,
          "nodeType": "StructuredDocumentation",
          "src": "678:588:16",
          "text": " @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n contracts.\n This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n new Router with the new hardcoded addresses will then be deployed and upgraded into place."
        },
        "fullyImplemented": true,
        "id": 2819,
        "linearizedBaseContracts": [
          2819,
          56831
        ],
        "name": "Router",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "14627834",
            "id": 1932,
            "mutability": "immutable",
            "name": "GOVERNANCE",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1386:35:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1931,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1386:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c4e7935",
            "id": 1934,
            "mutability": "immutable",
            "name": "VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1427:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1933,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1427:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dcc1a738",
            "id": 1936,
            "mutability": "immutable",
            "name": "INITIALIZE_MARKET",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1463:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1935,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1463:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "15beeb93",
            "id": 1938,
            "mutability": "immutable",
            "name": "NTOKEN_ACTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1511:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1937,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1511:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d7cdbbf",
            "id": 1940,
            "mutability": "immutable",
            "name": "BATCH_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1556:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1939,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1556:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6009b8e6",
            "id": 1942,
            "mutability": "immutable",
            "name": "ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1599:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d255471",
            "id": 1944,
            "mutability": "immutable",
            "name": "ERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1644:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1943,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1644:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2be75895",
            "id": 1946,
            "mutability": "immutable",
            "name": "LIQUIDATE_CURRENCY",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1682:43:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1945,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1682:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "206109b5",
            "id": 1948,
            "mutability": "immutable",
            "name": "LIQUIDATE_FCASH",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1731:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1947,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a1b4d011",
            "id": 1950,
            "mutability": "immutable",
            "name": "cETH",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1777:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1777:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d2c5565",
            "id": 1952,
            "mutability": "immutable",
            "name": "TREASURY",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1812:33:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1951,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1812:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72d27134",
            "id": 1954,
            "mutability": "immutable",
            "name": "CALCULATION_VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1851:42:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1953,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1851:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba6b7fc2",
            "id": 1956,
            "mutability": "immutable",
            "name": "VAULT_ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1899:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1955,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1899:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8e310a4",
            "id": 1958,
            "mutability": "immutable",
            "name": "VAULT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1950:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1957,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1950:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1960,
            "mutability": "immutable",
            "name": "DEPLOYER",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "1993:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1993:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Router.DeployedContracts",
            "id": 1989,
            "members": [
              {
                "constant": false,
                "id": 1962,
                "mutability": "mutable",
                "name": "governance",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2069:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1961,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2069:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1964,
                "mutability": "mutable",
                "name": "views",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2097:13:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1963,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2097:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1966,
                "mutability": "mutable",
                "name": "initializeMarket",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2120:24:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1965,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2120:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1968,
                "mutability": "mutable",
                "name": "nTokenActions",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2154:21:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1967,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2154:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1970,
                "mutability": "mutable",
                "name": "batchAction",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2185:19:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1969,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2185:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1972,
                "mutability": "mutable",
                "name": "accountAction",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2214:21:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1971,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2214:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1974,
                "mutability": "mutable",
                "name": "erc1155",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2245:15:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1973,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2245:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1976,
                "mutability": "mutable",
                "name": "liquidateCurrency",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2270:25:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1975,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2270:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1978,
                "mutability": "mutable",
                "name": "liquidatefCash",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2305:22:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1977,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2305:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1980,
                "mutability": "mutable",
                "name": "cETH",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2337:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1979,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2337:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1982,
                "mutability": "mutable",
                "name": "treasury",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2359:16:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1981,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2359:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1984,
                "mutability": "mutable",
                "name": "calculationViews",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2385:24:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1983,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2385:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1986,
                "mutability": "mutable",
                "name": "vaultAccountAction",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2419:26:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1985,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2419:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1988,
                "mutability": "mutable",
                "name": "vaultAction",
                "nodeType": "VariableDeclaration",
                "scope": 1989,
                "src": "2455:19:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1987,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2455:7:16",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeployedContracts",
            "nodeType": "StructDefinition",
            "scope": 2819,
            "src": "2034:447:16",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2073,
              "nodeType": "Block",
              "src": "2549:818:16",
              "statements": [
                {
                  "expression": {
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1994,
                      "name": "GOVERNANCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "2559:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1995,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2572:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "governance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1962,
                      "src": "2572:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2559:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:33:16"
                },
                {
                  "expression": {
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1999,
                      "name": "VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "2602:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2000,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2610:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2001,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "views",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1964,
                      "src": "2610:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2602:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:23:16"
                },
                {
                  "expression": {
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2004,
                      "name": "INITIALIZE_MARKET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "2635:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2005,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2655:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initializeMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1966,
                      "src": "2655:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2635:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:46:16"
                },
                {
                  "expression": {
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2009,
                      "name": "NTOKEN_ACTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "2691:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2010,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2708:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nTokenActions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1968,
                      "src": "2708:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2691:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:40:16"
                },
                {
                  "expression": {
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2014,
                      "name": "BATCH_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "2741:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2015,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2756:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1970,
                      "src": "2756:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2741:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2018,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:36:16"
                },
                {
                  "expression": {
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2019,
                      "name": "ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "2787:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2020,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2804:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1972,
                      "src": "2804:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2787:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:40:16"
                },
                {
                  "expression": {
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2024,
                      "name": "ERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1944,
                      "src": "2837:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2025,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2847:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1974,
                      "src": "2847:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2837:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:27:16"
                },
                {
                  "expression": {
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2029,
                      "name": "LIQUIDATE_CURRENCY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "2874:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2030,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2895:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2031,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidateCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1976,
                      "src": "2895:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2874:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2033,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:48:16"
                },
                {
                  "expression": {
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2034,
                      "name": "LIQUIDATE_FCASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1948,
                      "src": "2932:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2035,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2950:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidatefCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1978,
                      "src": "2950:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2932:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:42:16"
                },
                {
                  "expression": {
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2039,
                      "name": "cETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "2984:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2040,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2991:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1980,
                      "src": "2991:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2984:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "2984:21:16"
                },
                {
                  "expression": {
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2044,
                      "name": "TREASURY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "3015:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2045,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3026:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "treasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1982,
                      "src": "3026:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3015:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:29:16"
                },
                {
                  "expression": {
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2049,
                      "name": "CALCULATION_VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1954,
                      "src": "3054:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2050,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3074:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculationViews",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1984,
                      "src": "3074:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3054:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2053,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:46:16"
                },
                {
                  "expression": {
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2054,
                      "name": "VAULT_ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1956,
                      "src": "3110:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2055,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3133:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAccountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1986,
                      "src": "3133:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3110:51:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "3110:51:16"
                },
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2059,
                      "name": "VAULT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1958,
                      "src": "3171:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2060,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3186:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1988,
                      "src": "3186:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3171:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:36:16"
                },
                {
                  "expression": {
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2064,
                      "name": "DEPLOYER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "3218:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2065,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3229:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3229:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3218:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "3218:21:16"
                },
                {
                  "expression": {
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2069,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56788,
                      "src": "3339:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3356:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3339:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:21:16"
                }
              ]
            },
            "id": 2074,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "contracts",
                  "nodeType": "VariableDeclaration",
                  "scope": 2074,
                  "src": "2508:34:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployedContracts_$1989_memory_ptr",
                    "typeString": "struct Router.DeployedContracts"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "DeployedContracts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1989,
                    "src": "2508:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployedContracts_$1989_storage_ptr",
                      "typeString": "struct Router.DeployedContracts"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2498:50:16"
            },
            "returnParameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:0:16"
            },
            "scope": 2819,
            "src": "2487:880:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "3462:1337:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2084,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3535:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3535:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2086,
                            "name": "DEPLOYER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "3549:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3535:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 2089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3561:15:16",
                          "subExpression": {
                            "id": 2088,
                            "name": "hasInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56788,
                            "src": "3562:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3535:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3527:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3527:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "3527:50:16"
                },
                {
                  "expression": {
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2093,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56790,
                      "src": "3711:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2094,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3719:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3719:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3711:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:18:16"
                },
                {
                  "assignments": [
                    2099,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2099,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2162,
                      "src": "3902:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2098,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3902:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2141,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2107,
                                "name": "NotionalGovernance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59656,
                                "src": "4025:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                  "typeString": "type(contract NotionalGovernance)"
                                }
                              },
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "listCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59536,
                              "src": "4025:31:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$58557_calldata_ptr_$_t_struct$_TokenStorage_$58557_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$60969_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                              }
                            },
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4025:40:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2111,
                                "name": "cETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1950,
                                "src": "4100:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 2112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4106:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 2113,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58348,
                                  "src": "4113:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$58348_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 2114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "cETH",
                                "nodeType": "MemberAccess",
                                "src": "4113:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$58348",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2115,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57813,
                                  "src": "4129:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$57813_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 2116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "CETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 57546,
                                "src": "4129:29:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4160:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$58348",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2110,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58557,
                              "src": "4087:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$58557_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4087:75:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$58557_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2122,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4255:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4247:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2120,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4247:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4247:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 2124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4259:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 2125,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58348,
                                  "src": "4266:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$58348_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 2126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Ether",
                                "nodeType": "MemberAccess",
                                "src": "4266:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$58348",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2127,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57813,
                                  "src": "4283:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$57813_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 2128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 57558,
                                "src": "4283:28:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4313:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$58348",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2119,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58557,
                              "src": "4234:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$58557_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4234:81:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$58557_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4345:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4337:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2131,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4337:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4337:10:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 2135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4369:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "313333",
                            "id": 2136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4396:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            "value": "133"
                          },
                          {
                            "hexValue": "3735",
                            "id": 2137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4456:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            "value": "75"
                          },
                          {
                            "hexValue": "313038",
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4496:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            },
                            "value": "108"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$58557_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$58557_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            }
                          ],
                          "expression": {
                            "id": 2105,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3981:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3981:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3981:564:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2102,
                            "name": "GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "3939:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3931:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2100,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3931:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3931:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3931:32:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3931:628:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3901:658:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2143,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "4577:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4569:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:15:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "4569:15:16"
                },
                {
                  "expression": {
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2146,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56790,
                      "src": "4595:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2147,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2076,
                      "src": "4603:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4595:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:14:16"
                },
                {
                  "expression": {
                    "id": 2152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2150,
                      "name": "pauseRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56792,
                      "src": "4693:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2151,
                      "name": "pauseRouter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2078,
                      "src": "4707:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4693:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2153,
                  "nodeType": "ExpressionStatement",
                  "src": "4693:26:16"
                },
                {
                  "expression": {
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2154,
                      "name": "pauseGuardian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56794,
                      "src": "4729:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2155,
                      "name": "pauseGuardian_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "4745:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4729:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "4729:30:16"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2158,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56788,
                      "src": "4770:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4788:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4770:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2161,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:22:16"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "3393:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "pauseRouter_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "3409:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "pauseGuardian_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "3431:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3392:62:16"
            },
            "returnParameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:0:16"
            },
            "scope": 2819,
            "src": "3373:1426:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2798,
              "nodeType": "Block",
              "src": "5040:7721:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2171,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "5067:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2172,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58336,
                                "src": "5074:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58164,
                              "src": "5074:32:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceAction_$58389_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAction(address,struct BalanceAction calldata[] calldata) payable"
                              }
                            },
                            "id": 2174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5074:41:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5067:48:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2176,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "5131:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2177,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58336,
                                "src": "5138:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAndTradeAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58172,
                              "src": "5138:40:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$58405_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAndTradeAction(address,struct BalanceActionWithTrades calldata[] calldata) payable"
                              }
                            },
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5138:49:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5131:56:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5067:120:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2182,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2166,
                          "src": "5203:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2183,
                              "name": "NotionalProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58336,
                              "src": "5210:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                "typeString": "type(contract NotionalProxy)"
                              }
                            },
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "batchBalanceAndTradeActionWithCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58182,
                            "src": "5210:52:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$58405_calldata_ptr_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function NotionalProxy.batchBalanceAndTradeActionWithCallback(address,struct BalanceActionWithTrades calldata[] calldata,bytes calldata) payable"
                            }
                          },
                          "id": 2185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5210:61:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5203:68:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5067:204:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 2192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2188,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "5287:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 2189,
                            "name": "NotionalProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58336,
                            "src": "5294:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                              "typeString": "type(contract NotionalProxy)"
                            }
                          },
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "batchLend",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58190,
                          "src": "5294:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_BatchLend_$58376_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                            "typeString": "function NotionalProxy.batchLend(address,struct BatchLend calldata[] calldata)"
                          }
                        },
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5294:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5287:39:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5067:259:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2197,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "5404:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2198,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59407,
                                        "src": "5411:19:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 2199,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "enterVault",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 59307,
                                      "src": "5411:30:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                        "typeString": "function IVaultAccountAction.enterVault(address,address,uint256,uint256,uint256,uint32,bytes calldata) payable returns (uint256)"
                                      }
                                    },
                                    "id": 2200,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5411:39:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5404:46:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2202,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "5466:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2203,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59407,
                                        "src": "5473:19:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 2204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "rollVaultPosition",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 59329,
                                      "src": "5473:37:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                        "typeString": "function IVaultAccountAction.rollVaultPosition(address,address,uint256,uint256,uint256,uint32,uint32,bytes calldata) payable returns (uint256)"
                                      }
                                    },
                                    "id": 2205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5473:46:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5466:53:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5404:115:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2208,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2166,
                                  "src": "5535:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2209,
                                      "name": "IVaultAccountAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59407,
                                      "src": "5542:19:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                        "typeString": "type(contract IVaultAccountAction)"
                                      }
                                    },
                                    "id": 2210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "exitVault",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59349,
                                    "src": "5542:29:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                      "typeString": "function IVaultAccountAction.exitVault(address,address,address,uint256,uint256,uint32,bytes calldata) payable returns (uint256)"
                                    }
                                  },
                                  "id": 2211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5542:38:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "5535:45:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5404:176:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2214,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2166,
                                "src": "5596:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2215,
                                    "name": "IVaultAccountAction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59407,
                                    "src": "5603:19:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                      "typeString": "type(contract IVaultAccountAction)"
                                    }
                                  },
                                  "id": 2216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "deleverageAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59367,
                                  "src": "5603:37:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                    "typeString": "function IVaultAccountAction.deleverageAccount(address,address,address,uint256,bool,bytes calldata) returns (uint256)"
                                  }
                                },
                                "id": 2217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5603:46:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "5596:53:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5404:245:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2220,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2166,
                              "src": "5665:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2221,
                                  "name": "IVaultAccountAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59407,
                                  "src": "5672:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                    "typeString": "type(contract IVaultAccountAction)"
                                  }
                                },
                                "id": 2222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "getVaultAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59376,
                                "src": "5672:35:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_struct$_VaultAccount_$58822_memory_ptr_$",
                                  "typeString": "function IVaultAccountAction.getVaultAccount(address,address) view returns (struct VaultAccount memory)"
                                }
                              },
                              "id": 2223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "5672:44:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "5665:51:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5404:312:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2226,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "5732:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2227,
                                "name": "IVaultAccountAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59407,
                                "src": "5739:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                  "typeString": "type(contract IVaultAccountAction)"
                                }
                              },
                              "id": 2228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "getVaultAccountDebtShares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59391,
                              "src": "5739:45:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$",
                                "typeString": "function IVaultAccountAction.getVaultAccountDebtShares(address,address) view returns (uint256,uint256[2] memory,uint256)"
                              }
                            },
                            "id": 2229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5739:54:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5732:61:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5404:389:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2232,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2166,
                          "src": "5809:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2233,
                              "name": "IVaultAccountAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59407,
                              "src": "5816:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$59407_$",
                                "typeString": "type(contract IVaultAccountAction)"
                              }
                            },
                            "id": 2234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "getVaultAccountCollateralRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59406,
                            "src": "5816:50:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_int256_$_t_int256_$_t_int256_$_t_uint256_$",
                              "typeString": "function IVaultAccountAction.getVaultAccountCollateralRatio(address,address) view returns (int256,int256,int256,uint256)"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5816:59:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5809:66:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5404:471:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2241,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "5961:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2242,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 58336,
                                        "src": "5968:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2243,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositUnderlyingToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58133,
                                      "src": "5968:36:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositUnderlyingToken(address,uint16,uint256) payable returns (uint256)"
                                      }
                                    },
                                    "id": 2244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5968:45:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5961:52:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2246,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "6029:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2247,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 58336,
                                        "src": "6036:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2248,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositAssetToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58144,
                                      "src": "6036:31:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositAssetToken(address,uint16,uint256) returns (uint256)"
                                      }
                                    },
                                    "id": 2249,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6036:40:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6029:47:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5961:115:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2252,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2166,
                                  "src": "6092:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2253,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58336,
                                      "src": "6099:13:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 2254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "withdraw",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58155,
                                    "src": "6099:22:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint88_$_t_bool_$returns$_t_uint256_$",
                                      "typeString": "function NotionalProxy.withdraw(uint16,uint88,bool) returns (uint256)"
                                    }
                                  },
                                  "id": 2255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6099:31:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6092:38:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5961:169:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2258,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2166,
                                "src": "6146:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2259,
                                    "name": "NotionalProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58336,
                                    "src": "6153:13:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                      "typeString": "type(contract NotionalProxy)"
                                    }
                                  },
                                  "id": 2260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "settleAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58122,
                                  "src": "6153:27:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function NotionalProxy.settleAccount(address)"
                                  }
                                },
                                "id": 2261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6153:36:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6146:43:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5961:228:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2264,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2166,
                              "src": "6205:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2265,
                                  "name": "NotionalProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58336,
                                  "src": "6212:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                    "typeString": "type(contract NotionalProxy)"
                                  }
                                },
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "nTokenRedeem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58111,
                                "src": "6212:26:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$",
                                  "typeString": "function NotionalProxy.nTokenRedeem(address,uint16,uint96,bool,bool) returns (int256)"
                                }
                              },
                              "id": 2267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6212:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "6205:42:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5961:286:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2270,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "6263:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2271,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58336,
                                "src": "6270:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "enableBitmapCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58117,
                              "src": "6270:34:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                "typeString": "function NotionalProxy.enableBitmapCurrency(uint16)"
                              }
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6270:43:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6263:50:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5961:352:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2301,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2295,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2289,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2283,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2279,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "6393:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2280,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59817,
                                                    "src": "6400:17:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 2281,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "supportsInterface",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59707,
                                                  "src": "6400:35:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_pure$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function nERC1155Interface.supportsInterface(bytes4) pure returns (bool)"
                                                  }
                                                },
                                                "id": 2282,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6400:44:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6393:51:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2288,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2284,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "6460:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2285,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59817,
                                                    "src": "6467:17:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 2286,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "balanceOf",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59716,
                                                  "src": "6467:27:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function nERC1155Interface.balanceOf(address,uint256) view returns (uint256)"
                                                  }
                                                },
                                                "id": 2287,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6467:36:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6460:43:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "6393:110:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2294,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2290,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "6519:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2291,
                                                  "name": "nERC1155Interface",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 59817,
                                                  "src": "6526:17:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                                    "typeString": "type(contract nERC1155Interface)"
                                                  }
                                                },
                                                "id": 2292,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "balanceOfBatch",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 59728,
                                                "src": "6526:32:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                  "typeString": "function nERC1155Interface.balanceOfBatch(address[] calldata,uint256[] calldata) view returns (uint256[] memory)"
                                                }
                                              },
                                              "id": 2293,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "6526:41:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "6519:48:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "6393:174:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2300,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2296,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2166,
                                            "src": "6583:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2297,
                                                "name": "nERC1155Interface",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 59817,
                                                "src": "6590:17:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                                  "typeString": "type(contract nERC1155Interface)"
                                                }
                                              },
                                              "id": 2298,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "signedBalanceOf",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 59737,
                                              "src": "6590:33:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$",
                                                "typeString": "function nERC1155Interface.signedBalanceOf(address,uint256) view returns (int256)"
                                              }
                                            },
                                            "id": 2299,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "6590:42:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "6583:49:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "6393:239:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2306,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2302,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2166,
                                          "src": "6648:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2303,
                                              "name": "nERC1155Interface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 59817,
                                              "src": "6655:17:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                                "typeString": "type(contract nERC1155Interface)"
                                              }
                                            },
                                            "id": 2304,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "signedBalanceOfBatch",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 59749,
                                            "src": "6655:38:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                                              "typeString": "function nERC1155Interface.signedBalanceOfBatch(address[] calldata,uint256[] calldata) view returns (int256[] memory)"
                                            }
                                          },
                                          "id": 2305,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "6655:47:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "6648:54:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "6393:309:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2308,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "6718:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2309,
                                            "name": "nERC1155Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 59817,
                                            "src": "6725:17:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                              "typeString": "type(contract nERC1155Interface)"
                                            }
                                          },
                                          "id": 2310,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "safeTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 59778,
                                          "src": "6725:34:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                            "typeString": "function nERC1155Interface.safeTransferFrom(address,address,uint256,uint256,bytes calldata) payable"
                                          }
                                        },
                                        "id": 2311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "6725:43:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "6718:50:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6393:375:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2314,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "6784:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2315,
                                          "name": "nERC1155Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 59817,
                                          "src": "6791:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                            "typeString": "type(contract nERC1155Interface)"
                                          }
                                        },
                                        "id": 2316,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "safeBatchTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 59793,
                                        "src": "6791:39:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                                          "typeString": "function nERC1155Interface.safeBatchTransferFrom(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) payable"
                                        }
                                      },
                                      "id": 2317,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "6791:48:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "6784:55:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "6393:446:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2320,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "6855:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2321,
                                        "name": "nERC1155Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59817,
                                        "src": "6862:17:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                          "typeString": "type(contract nERC1155Interface)"
                                        }
                                      },
                                      "id": 2322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decodeToAssets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 59805,
                                      "src": "6862:32:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_view$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_PortfolioAsset_$58529_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function nERC1155Interface.decodeToAssets(uint256[] calldata,uint256[] calldata) view returns (struct PortfolioAsset memory[] memory)"
                                      }
                                    },
                                    "id": 2323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6862:41:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6855:48:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6393:510:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2326,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2166,
                                  "src": "6919:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2327,
                                      "name": "nERC1155Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59817,
                                      "src": "6926:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                        "typeString": "type(contract nERC1155Interface)"
                                      }
                                    },
                                    "id": 2328,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeToId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59816,
                                    "src": "6926:28:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_pure$_t_uint16_$_t_uint40_$_t_uint8_$returns$_t_uint256_$",
                                      "typeString": "function nERC1155Interface.encodeToId(uint16,uint40,uint8) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6926:37:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6919:44:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6393:570:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2332,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2166,
                                "src": "6979:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2333,
                                    "name": "nERC1155Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59817,
                                    "src": "6986:17:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                      "typeString": "type(contract nERC1155Interface)"
                                    }
                                  },
                                  "id": 2334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "setApprovalForAll",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59756,
                                  "src": "6986:35:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function nERC1155Interface.setApprovalForAll(address,bool)"
                                  }
                                },
                                "id": 2335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6986:44:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6979:51:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6393:637:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2338,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2166,
                              "src": "7046:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2339,
                                  "name": "nERC1155Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59817,
                                  "src": "7053:17:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$59817_$",
                                    "typeString": "type(contract nERC1155Interface)"
                                  }
                                },
                                "id": 2340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "isApprovedForAll",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59765,
                                "src": "7053:34:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function nERC1155Interface.isApprovedForAll(address,address) view returns (bool)"
                                }
                              },
                              "id": 2341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7053:43:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "7046:50:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6393:703:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2375,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2363,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2357,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2351,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2347,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "7169:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2348,
                                                    "name": "nTokenERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59933,
                                                    "src": "7176:11:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                                      "typeString": "type(contract nTokenERC20)"
                                                    }
                                                  },
                                                  "id": 2349,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "nTokenTotalSupply",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59843,
                                                  "src": "7176:29:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_uint256_$",
                                                    "typeString": "function nTokenERC20.nTokenTotalSupply(address) view returns (uint256)"
                                                  }
                                                },
                                                "id": 2350,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "7176:38:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "7169:45:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2356,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2352,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "7230:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2353,
                                                    "name": "nTokenERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59933,
                                                    "src": "7237:11:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                                      "typeString": "type(contract nTokenERC20)"
                                                    }
                                                  },
                                                  "id": 2354,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "nTokenTransferAllowance",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59854,
                                                  "src": "7237:35:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$_t_address_$returns$_t_uint256_$",
                                                    "typeString": "function nTokenERC20.nTokenTransferAllowance(uint16,address,address) view returns (uint256)"
                                                  }
                                                },
                                                "id": 2355,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "7237:44:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "7230:51:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "7169:112:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2362,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2358,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "7297:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2359,
                                                  "name": "nTokenERC20",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 59933,
                                                  "src": "7304:11:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                                    "typeString": "type(contract nTokenERC20)"
                                                  }
                                                },
                                                "id": 2360,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "nTokenBalanceOf",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 59863,
                                                "src": "7304:27:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$returns$_t_uint256_$",
                                                  "typeString": "function nTokenERC20.nTokenBalanceOf(uint16,address) view returns (uint256)"
                                                }
                                              },
                                              "id": 2361,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "7304:36:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "7297:43:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "7169:171:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2368,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2364,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2166,
                                            "src": "7356:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2365,
                                                "name": "nTokenERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 59933,
                                                "src": "7363:11:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                                  "typeString": "type(contract nTokenERC20)"
                                                }
                                              },
                                              "id": 2366,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "nTokenTransferApprove",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 59876,
                                              "src": "7363:33:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function nTokenERC20.nTokenTransferApprove(uint16,address,address,uint256) returns (bool)"
                                              }
                                            },
                                            "id": 2367,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "7363:42:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "7356:49:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "7169:236:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2374,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2370,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2166,
                                          "src": "7421:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2371,
                                              "name": "nTokenERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 59933,
                                              "src": "7428:11:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                                "typeString": "type(contract nTokenERC20)"
                                              }
                                            },
                                            "id": 2372,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "nTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 59889,
                                            "src": "7428:26:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function nTokenERC20.nTokenTransfer(uint16,address,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 2373,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "7428:35:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "7421:42:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "7169:294:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2376,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "7479:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2377,
                                            "name": "nTokenERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 59933,
                                            "src": "7486:11:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                              "typeString": "type(contract nTokenERC20)"
                                            }
                                          },
                                          "id": 2378,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "nTokenTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 59904,
                                          "src": "7486:30:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function nTokenERC20.nTokenTransferFrom(uint16,address,address,address,uint256) returns (bool)"
                                          }
                                        },
                                        "id": 2379,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "7486:39:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "7479:46:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "7169:356:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2382,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "7541:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2383,
                                          "name": "nTokenERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 59933,
                                          "src": "7548:11:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                            "typeString": "type(contract nTokenERC20)"
                                          }
                                        },
                                        "id": 2384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "nTokenTransferApproveAll",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 59913,
                                        "src": "7548:36:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function nTokenERC20.nTokenTransferApproveAll(address,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 2385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "7548:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "7541:52:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7169:424:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2388,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "7609:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2389,
                                        "name": "nTokenERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59933,
                                        "src": "7616:11:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                          "typeString": "type(contract nTokenERC20)"
                                        }
                                      },
                                      "id": 2390,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "nTokenClaimIncentives",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 59918,
                                      "src": "7616:33:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$__$returns$_t_uint256_$",
                                        "typeString": "function nTokenERC20.nTokenClaimIncentives() returns (uint256)"
                                      }
                                    },
                                    "id": 2391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "7616:42:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "7609:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7169:489:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2394,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2166,
                                  "src": "7674:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2395,
                                      "name": "nTokenERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59933,
                                      "src": "7681:11:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                        "typeString": "type(contract nTokenERC20)"
                                      }
                                    },
                                    "id": 2396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "nTokenPresentValueAssetDenominated",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59925,
                                    "src": "7681:46:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                      "typeString": "function nTokenERC20.nTokenPresentValueAssetDenominated(uint16) view returns (int256)"
                                    }
                                  },
                                  "id": 2397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "7681:55:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "7674:62:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7169:567:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2400,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2166,
                                "src": "7752:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2401,
                                    "name": "nTokenERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59933,
                                    "src": "7759:11:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_nTokenERC20_$59933_$",
                                      "typeString": "type(contract nTokenERC20)"
                                    }
                                  },
                                  "id": 2402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "nTokenPresentValueUnderlyingDenominated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 59932,
                                  "src": "7759:51:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                    "typeString": "function nTokenERC20.nTokenPresentValueUnderlyingDenominated(uint16) view returns (int256)"
                                  }
                                },
                                "id": 2403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "7759:60:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "7752:67:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7169:650:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2409,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "7899:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2410,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58336,
                                          "src": "7906:13:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2411,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateLocalCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 58217,
                                        "src": "7906:36:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateLocalCurrency(address,uint16,uint96) returns (int256,int256)"
                                        }
                                      },
                                      "id": 2412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "7906:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "7899:52:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2414,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "7967:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2415,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58336,
                                          "src": "7974:13:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateCollateralCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 58259,
                                        "src": "7974:41:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateCollateralCurrency(address,uint16,uint16,uint128,uint96,bool,bool) returns (int256,int256,int256)"
                                        }
                                      },
                                      "id": 2417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "7974:50:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "7967:57:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7899:125:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2420,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "8040:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2421,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 58336,
                                        "src": "8047:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2422,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculateLocalCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58204,
                                      "src": "8047:47:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculateLocalCurrencyLiquidation(address,uint16,uint96) returns (int256,int256)"
                                      }
                                    },
                                    "id": 2423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8047:56:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8040:63:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7899:204:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2426,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2166,
                                  "src": "8119:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2427,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58336,
                                      "src": "8126:13:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 2428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "calculateCollateralCurrencyLiquidation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58236,
                                    "src": "8126:52:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                      "typeString": "function NotionalProxy.calculateCollateralCurrencyLiquidation(address,uint16,uint16,uint128,uint96) returns (int256,int256,int256)"
                                    }
                                  },
                                  "id": 2429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8126:61:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "8119:68:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7899:288:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2439,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2435,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "8271:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2436,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58336,
                                            "src": "8278:13:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashLocal",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58295,
                                          "src": "8278:33:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashLocal(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 2438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8278:42:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8271:49:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2440,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "8336:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2441,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58336,
                                            "src": "8343:13:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2442,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashCrossCurrency",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58335,
                                          "src": "8343:41:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashCrossCurrency(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 2443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8343:50:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8336:57:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8271:122:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2446,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "8409:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2447,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58336,
                                          "src": "8416:13:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2448,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "calculatefCashLocalLiquidation",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 58277,
                                        "src": "8416:44:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                          "typeString": "function NotionalProxy.calculatefCashLocalLiquidation(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                        }
                                      },
                                      "id": 2449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8416:53:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8409:60:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8271:198:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2452,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "8485:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2453,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 58336,
                                        "src": "8492:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculatefCashCrossCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58315,
                                      "src": "8492:52:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculatefCashCrossCurrencyLiquidation(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                      }
                                    },
                                    "id": 2455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8492:61:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8485:68:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8271:282:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2555,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2549,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2543,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2537,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2531,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2525,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2519,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2513,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2507,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2501,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2495,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2489,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 2483,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              },
                                                              "id": 2477,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                },
                                                                "id": 2471,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  },
                                                                  "id": 2465,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 2461,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2166,
                                                                    "src": "8634:3:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "==",
                                                                  "rightExpression": {
                                                                    "expression": {
                                                                      "expression": {
                                                                        "id": 2462,
                                                                        "name": "IVaultAction",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 59205,
                                                                        "src": "8641:12:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                          "typeString": "type(contract IVaultAction)"
                                                                        }
                                                                      },
                                                                      "id": 2463,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "updateVault",
                                                                      "nodeType": "MemberAccess",
                                                                      "referencedDeclaration": 59020,
                                                                      "src": "8641:24:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_struct$_VaultConfigStorage_$58717_calldata_ptr_$_t_uint80_$returns$__$",
                                                                        "typeString": "function IVaultAction.updateVault(address,struct VaultConfigStorage calldata,uint80)"
                                                                      }
                                                                    },
                                                                    "id": 2464,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "selector",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "8641:33:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "src": "8634:40:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "||",
                                                                "rightExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  },
                                                                  "id": 2470,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 2466,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2166,
                                                                    "src": "8690:3:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "==",
                                                                  "rightExpression": {
                                                                    "expression": {
                                                                      "expression": {
                                                                        "id": 2467,
                                                                        "name": "IVaultAction",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 59205,
                                                                        "src": "8697:12:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                          "typeString": "type(contract IVaultAction)"
                                                                        }
                                                                      },
                                                                      "id": 2468,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "setVaultPauseStatus",
                                                                      "nodeType": "MemberAccess",
                                                                      "referencedDeclaration": 59028,
                                                                      "src": "8697:32:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                        "typeString": "function IVaultAction.setVaultPauseStatus(address,bool)"
                                                                      }
                                                                    },
                                                                    "id": 2469,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "selector",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "8697:41:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "src": "8690:48:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "src": "8634:104:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "||",
                                                              "rightExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                },
                                                                "id": 2476,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 2472,
                                                                  "name": "sig",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 2166,
                                                                  "src": "8754:3:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                  "expression": {
                                                                    "expression": {
                                                                      "id": 2473,
                                                                      "name": "IVaultAction",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 59205,
                                                                      "src": "8761:12:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                        "typeString": "type(contract IVaultAction)"
                                                                      }
                                                                    },
                                                                    "id": 2474,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "setVaultDeleverageStatus",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 59035,
                                                                    "src": "8761:37:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                      "typeString": "function IVaultAction.setVaultDeleverageStatus(address,bool)"
                                                                    }
                                                                  },
                                                                  "id": 2475,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "selector",
                                                                  "nodeType": "MemberAccess",
                                                                  "src": "8761:46:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "src": "8754:53:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "src": "8634:173:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2482,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2478,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2166,
                                                                "src": "8823:3:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2479,
                                                                    "name": "IVaultAction",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 59205,
                                                                    "src": "8830:12:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                      "typeString": "type(contract IVaultAction)"
                                                                    }
                                                                  },
                                                                  "id": 2480,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "setMaxBorrowCapacity",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 59043,
                                                                  "src": "8830:33:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint80_$returns$__$",
                                                                    "typeString": "function IVaultAction.setMaxBorrowCapacity(address,uint80)"
                                                                  }
                                                                },
                                                                "id": 2481,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "8830:42:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "8823:49:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "8634:238:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2488,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2484,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2166,
                                                              "src": "8888:3:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2485,
                                                                  "name": "IVaultAction",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 59205,
                                                                  "src": "8895:12:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                    "typeString": "type(contract IVaultAction)"
                                                                  }
                                                                },
                                                                "id": 2486,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "reduceMaxBorrowCapacity",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 59057,
                                                                "src": "8895:36:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint80_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                                  "typeString": "function IVaultAction.reduceMaxBorrowCapacity(address,uint80,uint256,uint256,bytes calldata)"
                                                                }
                                                              },
                                                              "id": 2487,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "8895:45:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "8888:52:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "8634:306:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2494,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2490,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2166,
                                                            "src": "8956:3:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2491,
                                                                "name": "IVaultAction",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 59205,
                                                                "src": "8963:12:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                  "typeString": "type(contract IVaultAction)"
                                                                }
                                                              },
                                                              "id": 2492,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "updateSecondaryBorrowCapacity",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 59067,
                                                              "src": "8963:42:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint80_$returns$__$",
                                                                "typeString": "function IVaultAction.updateSecondaryBorrowCapacity(address,uint16,uint80)"
                                                              }
                                                            },
                                                            "id": 2493,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "8963:51:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "8956:58:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "8634:380:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2500,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2496,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2166,
                                                          "src": "9030:3:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2497,
                                                              "name": "IVaultAction",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 59205,
                                                              "src": "9037:12:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                                "typeString": "type(contract IVaultAction)"
                                                              }
                                                            },
                                                            "id": 2498,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "depositVaultCashToStrategyTokens",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 59077,
                                                            "src": "9037:45:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                              "typeString": "function IVaultAction.depositVaultCashToStrategyTokens(uint256,uint256,bytes calldata)"
                                                            }
                                                          },
                                                          "id": 2499,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "9037:54:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "9030:61:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "8634:457:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2506,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2502,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2166,
                                                        "src": "9107:3:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2503,
                                                            "name": "IVaultAction",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 59205,
                                                            "src": "9114:12:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                              "typeString": "type(contract IVaultAction)"
                                                            }
                                                          },
                                                          "id": 2504,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "redeemStrategyTokensToCash",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 59091,
                                                          "src": "9114:39:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_int256_$_t_int256_$",
                                                            "typeString": "function IVaultAction.redeemStrategyTokensToCash(uint256,uint256,bytes calldata) returns (int256,int256)"
                                                          }
                                                        },
                                                        "id": 2505,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "9114:48:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "9107:55:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "8634:528:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2512,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2508,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2166,
                                                      "src": "9178:3:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2509,
                                                          "name": "IVaultAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 59205,
                                                          "src": "9185:12:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                            "typeString": "type(contract IVaultAction)"
                                                          }
                                                        },
                                                        "id": 2510,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "borrowSecondaryCurrencyToVault",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 59114,
                                                        "src": "9185:43:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint32_$2_calldata_ptr_$_t_array$_t_uint32_$2_calldata_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                                          "typeString": "function IVaultAction.borrowSecondaryCurrencyToVault(address,uint256,uint256[2] calldata,uint32[2] calldata,uint32[2] calldata) returns (uint256[2] memory)"
                                                        }
                                                      },
                                                      "id": 2511,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "9185:52:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "9178:59:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "8634:603:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2518,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2514,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2166,
                                                    "src": "9253:3:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2515,
                                                        "name": "IVaultAction",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 59205,
                                                        "src": "9260:12:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                          "typeString": "type(contract IVaultAction)"
                                                        }
                                                      },
                                                      "id": 2516,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "repaySecondaryCurrencyFromVault",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 59131,
                                                      "src": "9260:44:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function IVaultAction.repaySecondaryCurrencyFromVault(address,uint16,uint256,uint256,uint32,bytes calldata) returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 2517,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "9260:53:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "9253:60:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "8634:679:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2524,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2520,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2166,
                                                  "src": "9329:3:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2521,
                                                      "name": "IVaultAction",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 59205,
                                                      "src": "9336:12:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                        "typeString": "type(contract IVaultAction)"
                                                      }
                                                    },
                                                    "id": 2522,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "initiateSecondaryBorrowSettlement",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 59140,
                                                    "src": "9336:46:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                                      "typeString": "function IVaultAction.initiateSecondaryBorrowSettlement(uint256) returns (uint256[2] memory)"
                                                    }
                                                  },
                                                  "id": 2523,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "9336:55:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "9329:62:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "8634:757:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2530,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2526,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "9407:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2527,
                                                    "name": "IVaultAction",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59205,
                                                    "src": "9414:12:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                      "typeString": "type(contract IVaultAction)"
                                                    }
                                                  },
                                                  "id": 2528,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "settleVault",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59148,
                                                  "src": "9414:24:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                    "typeString": "function IVaultAction.settleVault(address,uint256)"
                                                  }
                                                },
                                                "id": 2529,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "9414:33:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "9407:40:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "8634:813:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2536,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2532,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "9463:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2533,
                                                  "name": "IVaultAction",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 59205,
                                                  "src": "9470:12:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                    "typeString": "type(contract IVaultAction)"
                                                  }
                                                },
                                                "id": 2534,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "getVaultConfig",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 59156,
                                                "src": "9470:27:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_struct$_VaultConfig_$58760_memory_ptr_$",
                                                  "typeString": "function IVaultAction.getVaultConfig(address) view returns (struct VaultConfig memory)"
                                                }
                                              },
                                              "id": 2535,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "9470:36:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "9463:43:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "8634:872:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2542,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2538,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2166,
                                            "src": "9522:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2539,
                                                "name": "IVaultAction",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 59205,
                                                "src": "9529:12:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                  "typeString": "type(contract IVaultAction)"
                                                }
                                              },
                                              "id": 2540,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "getBorrowCapacity",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 59167,
                                              "src": "9529:30:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$returns$_t_uint256_$_t_uint256_$",
                                                "typeString": "function IVaultAction.getBorrowCapacity(address,uint16) view returns (uint256,uint256)"
                                              }
                                            },
                                            "id": 2541,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "9529:39:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "9522:46:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "8634:934:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2548,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2544,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2166,
                                          "src": "9584:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2545,
                                              "name": "IVaultAction",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 59205,
                                              "src": "9591:12:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                                "typeString": "type(contract IVaultAction)"
                                              }
                                            },
                                            "id": 2546,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "getSecondaryBorrow",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 59182,
                                            "src": "9591:31:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                              "typeString": "function IVaultAction.getSecondaryBorrow(address,uint16,uint256) view returns (uint256,uint256,uint256)"
                                            }
                                          },
                                          "id": 2547,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "9591:40:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "9584:47:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "8634:997:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2550,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "9647:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2551,
                                            "name": "IVaultAction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 59205,
                                            "src": "9654:12:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                              "typeString": "type(contract IVaultAction)"
                                            }
                                          },
                                          "id": 2552,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "getVaultState",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 59192,
                                          "src": "9654:26:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_struct$_VaultState_$58793_memory_ptr_$",
                                            "typeString": "function IVaultAction.getVaultState(address,uint256) view returns (struct VaultState memory)"
                                          }
                                        },
                                        "id": 2553,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9654:35:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9647:42:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8634:1055:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2556,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "9705:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2557,
                                          "name": "IVaultAction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 59205,
                                          "src": "9712:12:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$59205_$",
                                            "typeString": "type(contract IVaultAction)"
                                          }
                                        },
                                        "id": 2558,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "getCashRequiredToSettle",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 59204,
                                        "src": "9712:36:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function IVaultAction.getCashRequiredToSettle(address,uint256) view returns (int256,int256)"
                                        }
                                      },
                                      "id": 2559,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "9712:45:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "9705:52:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8634:1123:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2565,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "9835:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2566,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58336,
                                            "src": "9842:13:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2567,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "initializeMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58090,
                                          "src": "9842:31:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                                            "typeString": "function NotionalProxy.initializeMarkets(uint16,bool)"
                                          }
                                        },
                                        "id": 2568,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9842:40:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9835:47:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2574,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2570,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2166,
                                        "src": "9898:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2571,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58336,
                                            "src": "9905:13:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2572,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "sweepCashIntoMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 58095,
                                          "src": "9905:34:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                            "typeString": "function NotionalProxy.sweepCashIntoMarkets(uint16)"
                                          }
                                        },
                                        "id": 2573,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9905:43:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9898:50:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "9835:113:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2673,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2661,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2655,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2649,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2643,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2637,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2631,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2625,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2619,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 2613,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              },
                                                              "id": 2607,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                },
                                                                "id": 2601,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  },
                                                                  "id": 2595,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    },
                                                                    "id": 2589,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      },
                                                                      "id": 2583,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 2579,
                                                                        "name": "sig",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2166,
                                                                        "src": "10031:3:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "==",
                                                                      "rightExpression": {
                                                                        "expression": {
                                                                          "expression": {
                                                                            "id": 2580,
                                                                            "name": "NotionalGovernance",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 59656,
                                                                            "src": "10038:18:16",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                              "typeString": "type(contract NotionalGovernance)"
                                                                            }
                                                                          },
                                                                          "id": 2581,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "listCurrency",
                                                                          "nodeType": "MemberAccess",
                                                                          "referencedDeclaration": 59536,
                                                                          "src": "10038:31:16",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$58557_calldata_ptr_$_t_struct$_TokenStorage_$58557_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$60969_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                                                            "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                                                                          }
                                                                        },
                                                                        "id": 2582,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "selector",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "10038:40:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "src": "10031:47:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "||",
                                                                    "rightExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      },
                                                                      "id": 2588,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 2584,
                                                                        "name": "sig",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2166,
                                                                        "src": "10094:3:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "==",
                                                                      "rightExpression": {
                                                                        "expression": {
                                                                          "expression": {
                                                                            "id": 2585,
                                                                            "name": "NotionalGovernance",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 59656,
                                                                            "src": "10101:18:16",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                              "typeString": "type(contract NotionalGovernance)"
                                                                            }
                                                                          },
                                                                          "id": 2586,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "enableCashGroup",
                                                                          "nodeType": "MemberAccess",
                                                                          "referencedDeclaration": 59556,
                                                                          "src": "10101:34:16",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$61013_$_t_struct$_CashGroupSettings_$58600_calldata_ptr_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$__$",
                                                                            "typeString": "function NotionalGovernance.enableCashGroup(uint16,contract AssetRateAdapter,struct CashGroupSettings calldata,string calldata,string calldata)"
                                                                          }
                                                                        },
                                                                        "id": 2587,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "selector",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "10101:43:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "src": "10094:50:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "src": "10031:113:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "||",
                                                                  "rightExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    },
                                                                    "id": 2594,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "id": 2590,
                                                                      "name": "sig",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 2166,
                                                                      "src": "10160:3:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                      "expression": {
                                                                        "expression": {
                                                                          "id": 2591,
                                                                          "name": "NotionalGovernance",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 59656,
                                                                          "src": "10167:18:16",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                            "typeString": "type(contract NotionalGovernance)"
                                                                          }
                                                                        },
                                                                        "id": 2592,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "updateCashGroup",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 59607,
                                                                        "src": "10167:34:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_struct$_CashGroupSettings_$58600_calldata_ptr_$returns$__$",
                                                                          "typeString": "function NotionalGovernance.updateCashGroup(uint16,struct CashGroupSettings calldata)"
                                                                        }
                                                                      },
                                                                      "id": 2593,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "selector",
                                                                      "nodeType": "MemberAccess",
                                                                      "src": "10167:43:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "src": "10160:50:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "src": "10031:179:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "||",
                                                                "rightExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  },
                                                                  "id": 2600,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 2596,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2166,
                                                                    "src": "10226:3:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "==",
                                                                  "rightExpression": {
                                                                    "expression": {
                                                                      "expression": {
                                                                        "id": 2597,
                                                                        "name": "NotionalGovernance",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 59656,
                                                                        "src": "10233:18:16",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                          "typeString": "type(contract NotionalGovernance)"
                                                                        }
                                                                      },
                                                                      "id": 2598,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "updateAssetRate",
                                                                      "nodeType": "MemberAccess",
                                                                      "referencedDeclaration": 59614,
                                                                      "src": "10233:34:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$61013_$returns$__$",
                                                                        "typeString": "function NotionalGovernance.updateAssetRate(uint16,contract AssetRateAdapter)"
                                                                      }
                                                                    },
                                                                    "id": 2599,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "selector",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10233:43:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "src": "10226:50:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "src": "10031:245:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "||",
                                                              "rightExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                },
                                                                "id": 2606,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 2602,
                                                                  "name": "sig",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 2166,
                                                                  "src": "10292:3:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                  "expression": {
                                                                    "expression": {
                                                                      "id": 2603,
                                                                      "name": "NotionalGovernance",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 59656,
                                                                      "src": "10299:18:16",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                        "typeString": "type(contract NotionalGovernance)"
                                                                      }
                                                                    },
                                                                    "id": 2604,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "updateETHRate",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 59629,
                                                                    "src": "10299:32:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AggregatorV2V3Interface_$60969_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                                      "typeString": "function NotionalGovernance.updateETHRate(uint16,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8)"
                                                                    }
                                                                  },
                                                                  "id": 2605,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "selector",
                                                                  "nodeType": "MemberAccess",
                                                                  "src": "10299:41:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "src": "10292:48:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "src": "10031:309:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2612,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2608,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2166,
                                                                "src": "10356:3:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2609,
                                                                    "name": "NotionalGovernance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 59656,
                                                                    "src": "10363:18:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                      "typeString": "type(contract NotionalGovernance)"
                                                                    }
                                                                  },
                                                                  "id": 2610,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "transferOwnership",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 59507,
                                                                  "src": "10363:36:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                    "typeString": "function NotionalGovernance.transferOwnership(address,bool)"
                                                                  }
                                                                },
                                                                "id": 2611,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "10363:45:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "10356:52:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "10031:377:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2618,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2614,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2166,
                                                              "src": "10424:3:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2615,
                                                                  "name": "NotionalGovernance",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 59656,
                                                                  "src": "10431:18:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                    "typeString": "type(contract NotionalGovernance)"
                                                                  }
                                                                },
                                                                "id": 2616,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "claimOwnership",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 59510,
                                                                "src": "10431:33:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                                                  "typeString": "function NotionalGovernance.claimOwnership()"
                                                                }
                                                              },
                                                              "id": 2617,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "10431:42:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "10424:49:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "10031:442:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2624,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2620,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2166,
                                                            "src": "10489:3:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2621,
                                                                "name": "NotionalGovernance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 59656,
                                                                "src": "10496:18:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                  "typeString": "type(contract NotionalGovernance)"
                                                                }
                                                              },
                                                              "id": 2622,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "updateIncentiveEmissionRate",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 59585,
                                                              "src": "10496:46:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint32_$returns$__$",
                                                                "typeString": "function NotionalGovernance.updateIncentiveEmissionRate(uint16,uint32)"
                                                              }
                                                            },
                                                            "id": 2623,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "10496:55:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "10489:62:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "10031:520:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2630,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2626,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2166,
                                                          "src": "10567:3:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2627,
                                                              "name": "NotionalGovernance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 59656,
                                                              "src": "10574:18:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                                "typeString": "type(contract NotionalGovernance)"
                                                              }
                                                            },
                                                            "id": 2628,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "updateMaxCollateralBalance",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 59543,
                                                            "src": "10574:45:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint72_$returns$__$",
                                                              "typeString": "function NotionalGovernance.updateMaxCollateralBalance(uint16,uint72)"
                                                            }
                                                          },
                                                          "id": 2629,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "10574:54:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "10567:61:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "10031:597:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2636,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2632,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2166,
                                                        "src": "10644:3:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2633,
                                                            "name": "NotionalGovernance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 59656,
                                                            "src": "10651:18:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                              "typeString": "type(contract NotionalGovernance)"
                                                            }
                                                          },
                                                          "id": 2634,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "updateDepositParameters",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 59567,
                                                          "src": "10651:42:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                            "typeString": "function NotionalGovernance.updateDepositParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                          }
                                                        },
                                                        "id": 2635,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "10651:51:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "10644:58:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "10031:671:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2642,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2638,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2166,
                                                      "src": "10718:3:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2639,
                                                          "name": "NotionalGovernance",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 59656,
                                                          "src": "10725:18:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                            "typeString": "type(contract NotionalGovernance)"
                                                          }
                                                        },
                                                        "id": 2640,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "updateInitializationParameters",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 59578,
                                                        "src": "10725:49:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                          "typeString": "function NotionalGovernance.updateInitializationParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                        }
                                                      },
                                                      "id": 2641,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "10725:58:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "10718:65:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "10031:752:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2648,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2644,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2166,
                                                    "src": "10799:3:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2645,
                                                        "name": "NotionalGovernance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 59656,
                                                        "src": "10806:18:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                          "typeString": "type(contract NotionalGovernance)"
                                                        }
                                                      },
                                                      "id": 2646,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "updateTokenCollateralParameters",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 59600,
                                                      "src": "10806:50:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                        "typeString": "function NotionalGovernance.updateTokenCollateralParameters(uint16,uint8,uint8,uint8,uint8,uint8)"
                                                      }
                                                    },
                                                    "id": 2647,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "10806:59:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "10799:66:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "10031:834:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2654,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2650,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2166,
                                                  "src": "10881:3:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2651,
                                                      "name": "NotionalGovernance",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 59656,
                                                      "src": "10888:18:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                        "typeString": "type(contract NotionalGovernance)"
                                                      }
                                                    },
                                                    "id": 2652,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "updateGlobalTransferOperator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 59636,
                                                    "src": "10888:47:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                      "typeString": "function NotionalGovernance.updateGlobalTransferOperator(address,bool)"
                                                    }
                                                  },
                                                  "id": 2653,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "10888:56:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "10881:63:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "10031:913:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2660,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2656,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "10960:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2657,
                                                    "name": "NotionalGovernance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 59656,
                                                    "src": "10967:18:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                      "typeString": "type(contract NotionalGovernance)"
                                                    }
                                                  },
                                                  "id": 2658,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "updateAuthorizedCallbackContract",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 59643,
                                                  "src": "10967:51:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                    "typeString": "function NotionalGovernance.updateAuthorizedCallbackContract(address,bool)"
                                                  }
                                                },
                                                "id": 2659,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "10967:60:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "10960:67:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "10031:996:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2666,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2662,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "11043:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2663,
                                                  "name": "NotionalGovernance",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 59656,
                                                  "src": "11050:18:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$59656_$",
                                                    "typeString": "type(contract NotionalGovernance)"
                                                  }
                                                },
                                                "id": 2664,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "setLendingPool",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 59648,
                                                "src": "11050:33:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILendingPool_$62317_$returns$__$",
                                                  "typeString": "function NotionalGovernance.setLendingPool(contract ILendingPool)"
                                                }
                                              },
                                              "id": 2665,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11050:42:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11043:49:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "10031:1061:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2672,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2668,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2166,
                                            "src": "11108:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2669,
                                                "name": "NotionalProxy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 58336,
                                                "src": "11115:13:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                                  "typeString": "type(contract NotionalProxy)"
                                                }
                                              },
                                              "id": 2670,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "upgradeTo",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 58055,
                                              "src": "11115:23:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function NotionalProxy.upgradeTo(address)"
                                              }
                                            },
                                            "id": 2671,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11115:32:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11108:39:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "10031:1116:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2674,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2166,
                                          "src": "11163:3:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2675,
                                              "name": "NotionalProxy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 58336,
                                              "src": "11170:13:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$58336_$",
                                                "typeString": "type(contract NotionalProxy)"
                                              }
                                            },
                                            "id": 2676,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "upgradeToAndCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 58062,
                                            "src": "11170:30:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                              "typeString": "function NotionalProxy.upgradeToAndCall(address,bytes memory) payable"
                                            }
                                          },
                                          "id": 2677,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "11170:39:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "11163:46:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "10031:1178:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2705,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2699,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2693,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2687,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2683,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2166,
                                                  "src": "11285:3:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2684,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 61387,
                                                      "src": "11292:16:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$61387_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 2685,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "claimCOMPAndTransfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 61358,
                                                    "src": "11292:37:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$_t_uint256_$",
                                                      "typeString": "function NotionalTreasury.claimCOMPAndTransfer(address[] calldata) returns (uint256)"
                                                    }
                                                  },
                                                  "id": 2686,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11292:46:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11285:53:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2692,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2688,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2166,
                                                  "src": "11354:3:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2689,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 61387,
                                                      "src": "11361:16:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$61387_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 2690,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "transferReserveToTreasury",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 61367,
                                                    "src": "11361:42:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_uint16_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                      "typeString": "function NotionalTreasury.transferReserveToTreasury(uint16[] calldata) returns (uint256[] memory)"
                                                    }
                                                  },
                                                  "id": 2691,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11361:51:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11354:58:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11285:127:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2698,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2694,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "11428:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2695,
                                                    "name": "NotionalTreasury",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 61387,
                                                    "src": "11435:16:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$61387_$",
                                                      "typeString": "type(contract NotionalTreasury)"
                                                    }
                                                  },
                                                  "id": 2696,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "setTreasuryManager",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 61372,
                                                  "src": "11435:35:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                    "typeString": "function NotionalTreasury.setTreasuryManager(address)"
                                                  }
                                                },
                                                "id": 2697,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "11435:44:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "11428:51:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11285:194:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2704,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2700,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "11495:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2701,
                                                  "name": "NotionalTreasury",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 61387,
                                                  "src": "11502:16:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$61387_$",
                                                    "typeString": "type(contract NotionalTreasury)"
                                                  }
                                                },
                                                "id": 2702,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "setReserveBuffer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 61379,
                                                "src": "11502:33:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$returns$__$",
                                                  "typeString": "function NotionalTreasury.setReserveBuffer(uint16,uint256)"
                                                }
                                              },
                                              "id": 2703,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11502:42:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11495:49:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11285:259:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2710,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2706,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2166,
                                            "src": "11560:3:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2707,
                                                "name": "NotionalTreasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 61387,
                                                "src": "11567:16:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$61387_$",
                                                  "typeString": "type(contract NotionalTreasury)"
                                                }
                                              },
                                              "id": 2708,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "setReserveCashBalance",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 61386,
                                              "src": "11567:38:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_int256_$returns$__$",
                                                "typeString": "function NotionalTreasury.setReserveCashBalance(uint16,int256)"
                                              }
                                            },
                                            "id": 2709,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11567:47:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11560:54:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "11285:329:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2779,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2773,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2767,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2761,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2755,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2749,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2743,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2737,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2731,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 2725,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2719,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2715,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2166,
                                                                "src": "11688:3:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2716,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 57001,
                                                                    "src": "11695:20:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 2717,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "calculateNTokensToMint",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 56844,
                                                                  "src": "11695:43:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint88_$returns$_t_uint256_$",
                                                                    "typeString": "function NotionalCalculations.calculateNTokensToMint(uint16,uint88) view returns (uint256)"
                                                                  }
                                                                },
                                                                "id": 2718,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11695:52:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11688:59:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2724,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2720,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2166,
                                                                "src": "11763:3:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2721,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 57001,
                                                                    "src": "11770:20:16",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 2722,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "getfCashAmountGivenCashAmount",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 56857,
                                                                  "src": "11770:50:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$",
                                                                    "typeString": "function NotionalCalculations.getfCashAmountGivenCashAmount(uint16,int88,uint256,uint256) view returns (int256)"
                                                                  }
                                                                },
                                                                "id": 2723,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11770:59:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11763:66:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "11688:141:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2730,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2726,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2166,
                                                              "src": "11845:3:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2727,
                                                                  "name": "NotionalCalculations",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 57001,
                                                                  "src": "11852:20:16",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                                    "typeString": "type(contract NotionalCalculations)"
                                                                  }
                                                                },
                                                                "id": 2728,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "getCashAmountGivenfCashAmount",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 56872,
                                                                "src": "11852:50:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                                                  "typeString": "function NotionalCalculations.getCashAmountGivenfCashAmount(uint16,int88,uint256,uint256) view returns (int256,int256)"
                                                                }
                                                              },
                                                              "id": 2729,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "11852:59:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "11845:66:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "11688:223:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2736,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2732,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2166,
                                                            "src": "11927:3:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2733,
                                                                "name": "NotionalCalculations",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 57001,
                                                                "src": "11934:20:16",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                                  "typeString": "type(contract NotionalCalculations)"
                                                                }
                                                              },
                                                              "id": 2734,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "nTokenGetClaimableIncentives",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 56881,
                                                              "src": "11934:49:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function NotionalCalculations.nTokenGetClaimableIncentives(address,uint256) view returns (uint256)"
                                                              }
                                                            },
                                                            "id": 2735,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "11934:58:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "11927:65:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "11688:304:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2742,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2738,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2166,
                                                          "src": "12008:3:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2739,
                                                              "name": "NotionalCalculations",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 57001,
                                                              "src": "12015:20:16",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                                "typeString": "type(contract NotionalCalculations)"
                                                              }
                                                            },
                                                            "id": 2740,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "getPresentfCashValue",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 56896,
                                                            "src": "12015:41:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_int256_$_t_uint256_$_t_bool_$returns$_t_int256_$",
                                                              "typeString": "function NotionalCalculations.getPresentfCashValue(uint16,uint256,int256,uint256,bool) view returns (int256)"
                                                            }
                                                          },
                                                          "id": 2741,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "12015:50:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "12008:57:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "11688:377:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2748,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2744,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2166,
                                                        "src": "12081:3:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2745,
                                                            "name": "NotionalCalculations",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 57001,
                                                            "src": "12088:20:16",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                              "typeString": "type(contract NotionalCalculations)"
                                                            }
                                                          },
                                                          "id": 2746,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "getMarketIndex",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 56905,
                                                          "src": "12088:35:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_pure$_t_uint256_$_t_uint256_$returns$_t_uint8_$",
                                                            "typeString": "function NotionalCalculations.getMarketIndex(uint256,uint256) pure returns (uint8)"
                                                          }
                                                        },
                                                        "id": 2747,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "12088:44:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "12081:51:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "11688:444:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2754,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2750,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2166,
                                                      "src": "12148:3:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2751,
                                                          "name": "NotionalCalculations",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 57001,
                                                          "src": "12155:20:16",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                            "typeString": "type(contract NotionalCalculations)"
                                                          }
                                                        },
                                                        "id": 2752,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "getfCashLendFromDeposit",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 56926,
                                                        "src": "12155:44:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                          "typeString": "function NotionalCalculations.getfCashLendFromDeposit(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                        }
                                                      },
                                                      "id": 2753,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "12155:53:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "12148:60:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "11688:520:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2760,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2756,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2166,
                                                    "src": "12224:3:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2757,
                                                        "name": "NotionalCalculations",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 57001,
                                                        "src": "12231:20:16",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                          "typeString": "type(contract NotionalCalculations)"
                                                        }
                                                      },
                                                      "id": 2758,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "getfCashBorrowFromPrincipal",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 56947,
                                                      "src": "12231:48:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                        "typeString": "function NotionalCalculations.getfCashBorrowFromPrincipal(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                      }
                                                    },
                                                    "id": 2759,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "12231:57:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "12224:64:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "11688:600:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2766,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2762,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2166,
                                                  "src": "12304:3:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2763,
                                                      "name": "NotionalCalculations",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 57001,
                                                      "src": "12311:20:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                        "typeString": "type(contract NotionalCalculations)"
                                                      }
                                                    },
                                                    "id": 2764,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "getDepositFromfCashLend",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 56968,
                                                    "src": "12311:44:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                      "typeString": "function NotionalCalculations.getDepositFromfCashLend(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                    }
                                                  },
                                                  "id": 2765,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "12311:53:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "12304:60:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11688:676:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2772,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2768,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2166,
                                                "src": "12380:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2769,
                                                    "name": "NotionalCalculations",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 57001,
                                                    "src": "12387:20:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                      "typeString": "type(contract NotionalCalculations)"
                                                    }
                                                  },
                                                  "id": 2770,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "getPrincipalFromfCashBorrow",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 56989,
                                                  "src": "12387:48:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                    "typeString": "function NotionalCalculations.getPrincipalFromfCashBorrow(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                  }
                                                },
                                                "id": 2771,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "12387:57:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "12380:64:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11688:756:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2778,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2774,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2166,
                                              "src": "12460:3:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2775,
                                                  "name": "NotionalCalculations",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 57001,
                                                  "src": "12467:20:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$57001_$",
                                                    "typeString": "type(contract NotionalCalculations)"
                                                  }
                                                },
                                                "id": 2776,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "convertCashBalanceToExternal",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 57000,
                                                "src": "12467:49:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int256_$_t_bool_$returns$_t_int256_$",
                                                  "typeString": "function NotionalCalculations.convertCashBalanceToExternal(uint16,int256,bool) view returns (int256)"
                                                }
                                              },
                                              "id": 2777,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "12467:58:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "12460:65:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11688:837:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "id": 2785,
                                          "nodeType": "Block",
                                          "src": "12591:164:16",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2783,
                                                "name": "VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1934,
                                                "src": "12739:5:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 2170,
                                              "id": 2784,
                                              "nodeType": "Return",
                                              "src": "12732:12:16"
                                            }
                                          ]
                                        },
                                        "id": 2786,
                                        "nodeType": "IfStatement",
                                        "src": "11671:1084:16",
                                        "trueBody": {
                                          "id": 2782,
                                          "nodeType": "Block",
                                          "src": "12536:49:16",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2780,
                                                "name": "CALCULATION_VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1954,
                                                "src": "12557:17:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 2170,
                                              "id": 2781,
                                              "nodeType": "Return",
                                              "src": "12550:24:16"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 2787,
                                      "nodeType": "IfStatement",
                                      "src": "11268:1487:16",
                                      "trueBody": {
                                        "id": 2714,
                                        "nodeType": "Block",
                                        "src": "11625:40:16",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 2712,
                                              "name": "TREASURY",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1952,
                                              "src": "11646:8:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "functionReturnParameters": 2170,
                                            "id": 2713,
                                            "nodeType": "Return",
                                            "src": "11639:15:16"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 2788,
                                    "nodeType": "IfStatement",
                                    "src": "10014:2741:16",
                                    "trueBody": {
                                      "id": 2682,
                                      "nodeType": "Block",
                                      "src": "11220:42:16",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2680,
                                            "name": "GOVERNANCE",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1932,
                                            "src": "11241:10:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "functionReturnParameters": 2170,
                                          "id": 2681,
                                          "nodeType": "Return",
                                          "src": "11234:17:16"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 2789,
                                  "nodeType": "IfStatement",
                                  "src": "9818:2937:16",
                                  "trueBody": {
                                    "id": 2578,
                                    "nodeType": "Block",
                                    "src": "9959:49:16",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 2576,
                                          "name": "INITIALIZE_MARKET",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1936,
                                          "src": "9980:17:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "functionReturnParameters": 2170,
                                        "id": 2577,
                                        "nodeType": "Return",
                                        "src": "9973:24:16"
                                      }
                                    ]
                                  }
                                },
                                "id": 2790,
                                "nodeType": "IfStatement",
                                "src": "8617:4138:16",
                                "trueBody": {
                                  "id": 2564,
                                  "nodeType": "Block",
                                  "src": "9768:44:16",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2562,
                                        "name": "VAULT_ACTION",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1958,
                                        "src": "9789:12:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "functionReturnParameters": 2170,
                                      "id": 2563,
                                      "nodeType": "Return",
                                      "src": "9782:19:16"
                                    }
                                  ]
                                }
                              },
                              "id": 2791,
                              "nodeType": "IfStatement",
                              "src": "8254:4501:16",
                              "trueBody": {
                                "id": 2460,
                                "nodeType": "Block",
                                "src": "8564:47:16",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2458,
                                      "name": "LIQUIDATE_FCASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1948,
                                      "src": "8585:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "functionReturnParameters": 2170,
                                    "id": 2459,
                                    "nodeType": "Return",
                                    "src": "8578:22:16"
                                  }
                                ]
                              }
                            },
                            "id": 2792,
                            "nodeType": "IfStatement",
                            "src": "7882:4873:16",
                            "trueBody": {
                              "id": 2434,
                              "nodeType": "Block",
                              "src": "8198:50:16",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2432,
                                    "name": "LIQUIDATE_CURRENCY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1946,
                                    "src": "8219:18:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "functionReturnParameters": 2170,
                                  "id": 2433,
                                  "nodeType": "Return",
                                  "src": "8212:25:16"
                                }
                              ]
                            }
                          },
                          "id": 2793,
                          "nodeType": "IfStatement",
                          "src": "7152:5603:16",
                          "trueBody": {
                            "id": 2408,
                            "nodeType": "Block",
                            "src": "7830:46:16",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2406,
                                  "name": "NTOKEN_ACTIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1938,
                                  "src": "7851:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 2170,
                                "id": 2407,
                                "nodeType": "Return",
                                "src": "7844:21:16"
                              }
                            ]
                          }
                        },
                        "id": 2794,
                        "nodeType": "IfStatement",
                        "src": "6376:6379:16",
                        "trueBody": {
                          "id": 2346,
                          "nodeType": "Block",
                          "src": "7107:39:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 2344,
                                "name": "ERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "7128:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 2170,
                              "id": 2345,
                              "nodeType": "Return",
                              "src": "7121:14:16"
                            }
                          ]
                        }
                      },
                      "id": 2795,
                      "nodeType": "IfStatement",
                      "src": "5944:6811:16",
                      "trueBody": {
                        "id": 2278,
                        "nodeType": "Block",
                        "src": "6324:46:16",
                        "statements": [
                          {
                            "expression": {
                              "id": 2276,
                              "name": "ACCOUNT_ACTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1942,
                              "src": "6345:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 2170,
                            "id": 2277,
                            "nodeType": "Return",
                            "src": "6338:21:16"
                          }
                        ]
                      }
                    },
                    "id": 2796,
                    "nodeType": "IfStatement",
                    "src": "5387:7368:16",
                    "trueBody": {
                      "id": 2240,
                      "nodeType": "Block",
                      "src": "5886:52:16",
                      "statements": [
                        {
                          "expression": {
                            "id": 2238,
                            "name": "VAULT_ACCOUNT_ACTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1956,
                            "src": "5907:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "functionReturnParameters": 2170,
                          "id": 2239,
                          "nodeType": "Return",
                          "src": "5900:27:16"
                        }
                      ]
                    }
                  },
                  "id": 2797,
                  "nodeType": "IfStatement",
                  "src": "5050:7705:16",
                  "trueBody": {
                    "id": 2196,
                    "nodeType": "Block",
                    "src": "5337:44:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2194,
                          "name": "BATCH_ACTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1940,
                          "src": "5358:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2170,
                        "id": 2195,
                        "nodeType": "Return",
                        "src": "5351:19:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2164,
              "nodeType": "StructuredDocumentation",
              "src": "4805:155:16",
              "text": "@notice Returns the implementation contract for the method signature\n @param sig method signature to call\n @return implementation address"
            },
            "functionSelector": "76e1df48",
            "id": 2799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRouterImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2166,
                  "mutability": "mutable",
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 2799,
                  "src": "4998:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4997:12:16"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2799,
                  "src": "5031:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5030:9:16"
            },
            "scope": 2819,
            "src": "4965:7796:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2806,
              "nodeType": "Block",
              "src": "12992:919:16",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13067:838:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13320:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13323:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13326:12:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13326:14:16"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13307:12:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13307:34:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13307:34:16"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13468:74:16",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "13495:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13495:5:16"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "13502:14:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13518:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13521:12:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13521:14:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13537:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13540:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "13482:12:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13482:60:16"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "13472:6:16",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13610:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13613:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13616:14:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13616:16:16"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13595:14:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13595:38:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13595:38:16"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13736:67:16",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13765:1:16",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13768:14:16"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13768:16:16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "13758:6:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13758:27:16"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13758:27:16"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13729:74:16",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13734:1:16",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13828:67:16",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13857:1:16",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13860:14:16"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13860:16:16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "13850:6:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13850:27:16"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13850:27:16"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13820:75:16",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "13654:6:16"
                        },
                        "nodeType": "YulSwitch",
                        "src": "13647:248:16"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2802,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13502:14:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 2805,
                  "nodeType": "InlineAssembly",
                  "src": "13058:847:16"
                }
              ]
            },
            "documentation": {
              "id": 2800,
              "nodeType": "StructuredDocumentation",
              "src": "12767:169:16",
              "text": "@dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
            },
            "id": 2807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "12960:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12960:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12959:24:16"
            },
            "returnParameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12992:0:16"
            },
            "scope": 2819,
            "src": "12941:970:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2817,
              "nodeType": "Block",
              "src": "13945:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2812,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13989:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sig",
                            "nodeType": "MemberAccess",
                            "src": "13989:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 2811,
                          "name": "getRouterImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2799,
                          "src": "13965:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_address_$",
                            "typeString": "function (bytes4) view returns (address)"
                          }
                        },
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13965:32:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2810,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2807,
                      "src": "13955:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13955:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "13955:43:16"
                }
              ]
            },
            "id": 2818,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13925:2:16"
            },
            "returnParameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13945:0:16"
            },
            "scope": 2819,
            "src": "13917:88:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2820,
        "src": "1267:12828:16"
      }
    ],
    "src": "41:14055:16"
  },
  "bytecode": "6102606040523480156200001257600080fd5b50604051620018e0380380620018e0833981016040819052620000359162000136565b80516001600160601b0319606091821b811660809081526020840151831b821660a09081526040850151841b831660c090815284860151851b841660e090815292860151851b841661010090815291860151851b841661012090815290860151851b841661014090815292860151851b841661016090815291860151851b841661018090815290860151851b84166101a090815292860151851b84166101c05290850151841b83166101e052840151831b82166102005290920151811b9091166102205233901b610240526000805463ff000000191663010000001790556200028c565b80516001600160a01b03811681146200013157600080fd5b919050565b60006101c08083850312156200014a578182fd5b620001558162000268565b9050620001628362000119565b8152620001726020840162000119565b6020820152620001856040840162000119565b6040820152620001986060840162000119565b6060820152620001ab6080840162000119565b6080820152620001be60a0840162000119565b60a0820152620001d160c0840162000119565b60c0820152620001e460e0840162000119565b60e0820152610100620001f981850162000119565b908201526101206200020d84820162000119565b908201526101406200022184820162000119565b908201526101606200023584820162000119565b908201526101806200024984820162000119565b908201526101a06200025d84820162000119565b908201529392505050565b6040518181016001600160401b03811182821017156200028457fe5b604052919050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6101405160601c6101605160601c6101805160601c6101a05160601c6101c05160601c6101e05160601c6102005160601c6102205160601c6102405160601c611538620003a86000398061113b525080610a96528061133e52508061043f528061110e525080610edb52806110a0525080610d8d52806110345250806110ea52806111ac5250806108a75280610fb95250806108165280610fec5250806106525280611010525080610505528061105852508061035d528061107c5250806107855280610f95525080610af15280611362525080610f025280610f4d525080610ce15280610f7152806111d852506115386000f3fe6080604052600436106101145760003560e01c80636d7cdbbf116100a0578063a1b4d01111610064578063a1b4d0111461027a578063ba6b7fc21461028f578063c0c53b8b146102a4578063d8e310a4146102c4578063dcc1a738146102d957610114565b80636d7cdbbf1461020657806372d271341461021b57806376e1df481461023057806382463367146102505780638da5cb5b1461026557610114565b806324a3d622116100e757806324a3d6221461019d5780632be75895146101b25780632d255471146101c75780632d2c5565146101dc5780636009b8e6146101f157610114565b80630c4e793514610133578063146278341461015e57806315beeb9314610173578063206109b514610188575b61013161012c6000356001600160e01b0319166102ee565b610f27565b005b34801561013f57600080fd5b50610148610f4b565b6040516101559190611495565b60405180910390f35b34801561016a57600080fd5b50610148610f6f565b34801561017f57600080fd5b50610148610f93565b34801561019457600080fd5b50610148610fb7565b3480156101a957600080fd5b50610148610fdb565b3480156101be57600080fd5b50610148610fea565b3480156101d357600080fd5b5061014861100e565b3480156101e857600080fd5b50610148611032565b3480156101fd57600080fd5b50610148611056565b34801561021257600080fd5b5061014861107a565b34801561022757600080fd5b5061014861109e565b34801561023c57600080fd5b5061014861024b3660046113dd565b6102ee565b34801561025c57600080fd5b506101486110c2565b34801561027157600080fd5b506101486110d1565b34801561028657600080fd5b506101486110e8565b34801561029b57600080fd5b5061014861110c565b3480156102b057600080fd5b506101316102bf36600461139b565b611130565b3480156102d057600080fd5b5061014861133c565b3480156102e557600080fd5b50610148611360565b60006001600160e01b03198216633735195360e11b148061031f57506001600160e01b03198216630276b64b60e01b145b8061033a57506001600160e01b03198216635950d8e960e01b145b8061035557506001600160e01b03198216630541f52760e41b145b1561038157507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216634ae0d10160e11b14806103b057506001600160e01b0319821663194ed84160e21b145b806103cb57506001600160e01b03198216636ce48f0160e01b145b806103e657506001600160e01b03198216634ca418af60e11b145b8061040157506001600160e01b0319821663c025d1a560e01b145b8061041c57506001600160e01b0319821663803c25fb60e01b145b8061043757506001600160e01b0319821663323e60cb60e11b145b1561046357507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216632890fb6560e01b148061049257506001600160e01b0319821663b8a6945560e01b145b806104ac57506001600160e01b03198216625e665d60e31b145b806104c757506001600160e01b0319821663f667f89760e01b145b806104e257506001600160e01b03198216636689064360e01b145b806104fd57506001600160e01b031982166309c9794560e41b145b1561052957507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b031982166301ffc9a760e01b148061055757506001600160e01b03198216627eeac760e11b145b8061057257506001600160e01b031982166313849cfd60e21b145b8061058d57506001600160e01b03198216630fac8f0960e01b145b806105a857506001600160e01b031982166381a8685560e01b145b806105c357506001600160e01b03198216637921219560e11b145b806105de57506001600160e01b03198216631759616b60e11b145b806105f957506001600160e01b031982166307f4d70160e31b145b8061061457506001600160e01b03198216630e6b43b960e31b145b8061062f57506001600160e01b0319821663a22cb46560e01b145b8061064a57506001600160e01b0319821663e985e9c560e01b145b1561067657507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216636a96e86f60e01b14806106a557506001600160e01b03198216637db31ab960e01b145b806106c057506001600160e01b0319821663a78dbfff60e01b145b806106db57506001600160e01b0319821663184e005360e11b145b806106f657506001600160e01b031982166318ae40d760e01b145b8061071157506001600160e01b03198216634425384960e11b145b8061072c57506001600160e01b031982166305c1d97560e31b145b8061074757506001600160e01b03198216636d6503d360e11b145b8061076257506001600160e01b03198216631a05bce160e01b145b8061077d57506001600160e01b03198216633b2987b360e01b145b156107a957507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216632d10e6eb60e01b14806107d857506001600160e01b03198216636633af3960e01b145b806107f357506001600160e01b0319821663e3e7cb4f60e01b145b8061080e57506001600160e01b03198216639a600eeb60e01b145b1561083a57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216631ff7aefd60e21b148061086957506001600160e01b0319821663e816469d60e01b145b8061088457506001600160e01b03198216630fb281d960e01b145b8061089f57506001600160e01b0319821663fa37e39560e01b145b156108cb57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216638c9e446560e01b14806108fa57506001600160e01b031982166315bd0a3160e21b145b8061091557506001600160e01b031982166354cceaf760e01b145b8061093057506001600160e01b03198216635b389c5560e11b145b8061094b57506001600160e01b03198216636b6ef5cd60e11b145b8061096657506001600160e01b0319821663291afdf360e01b145b8061098157506001600160e01b0319821663341305ab60e21b145b8061099c57506001600160e01b0319821663ee01436b60e01b145b806109b757506001600160e01b031982166302f0233760e21b145b806109d257506001600160e01b031982166350e4f22360e01b145b806109ec57506001600160e01b0319821662d6442960e11b145b80610a0757506001600160e01b0319821663295e6b7f60e01b145b80610a2257506001600160e01b0319821663de1eb9a360e01b145b80610a3d57506001600160e01b031982166333a8abbb60e11b145b80610a5857506001600160e01b031982166328536d5f60e21b145b80610a7357506001600160e01b03198216633157228160e01b145b80610a8e57506001600160e01b03198216636c346c0960e01b145b15610aba57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216630343819360e61b1480610ae957506001600160e01b03198216635db6eac760e11b145b15610b1557507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216637abaf27160e11b1480610b4457506001600160e01b0319821663e31051a160e01b145b80610b5f57506001600160e01b0319821663a11a429360e01b145b80610b7a57506001600160e01b03198216630528476560e51b145b80610b9557506001600160e01b0319821663315cb2b960e21b145b80610bb057506001600160e01b03198216632c90b94d60e21b145b80610bcb57506001600160e01b031982166309ce3c1960e31b145b80610be657506001600160e01b031982166354ebde2960e11b145b80610c0157506001600160e01b031982166398dcbc2360e01b145b80610c1c57506001600160e01b031982166333eabd1d60e21b145b80610c3757506001600160e01b0319821663413f2c5f60e01b145b80610c5257506001600160e01b03198216630d0da86760e21b145b80610c6d57506001600160e01b0319821663353abc5d60e01b145b80610c8857506001600160e01b0319821663fa17b5f160e01b145b80610ca357506001600160e01b0319821663113aa8b160e01b145b80610cbe57506001600160e01b03198216631b2ce7f360e11b145b80610cd957506001600160e01b0319821663278f794360e11b145b15610d0557507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216637d6dbff760e11b1480610d3457506001600160e01b03198216636d7a00eb60e01b145b80610d4f57506001600160e01b03198216637f23d4f960e11b145b80610d6a57506001600160e01b0319821663239cec8f60e21b145b80610d8557506001600160e01b031982166312adc47b60e01b145b15610db157507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216636a09a2a360e01b1480610de057506001600160e01b03198216638355e89560e01b145b80610dfb57506001600160e01b0319821663094614df60e01b145b80610e1657506001600160e01b03198216634beb6d9760e11b145b80610e3157506001600160e01b0319821663c52c43e160e01b145b80610e4c57506001600160e01b03198216635953c77b60e01b145b80610e6757506001600160e01b03198216631f0750c160e31b145b80610e8257506001600160e01b0319821663bac9e8b160e01b145b80610e9d57506001600160e01b0319821663aaae47b560e01b145b80610eb857506001600160e01b0319821663416a158760e01b145b80610ed357506001600160e01b03198216631baefc5d60e21b145b15610eff57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b507f00000000000000000000000000000000000000000000000000000000000000005b919050565b3660008037600080366000845af43d6000803e808015610f46573d6000f35b3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b60005464010000000090046001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561117257506000546301000000900460ff16155b61117b57600080fd5b60008054640100000000600160c01b03191633640100000000021781556040805160a0810182526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168252602082018490527f00000000000000000000000000000000000000000000000000000000000000001691637abaf27160e11b9190810160028152600860208083019190915260006040928301819052825160a081018452818152918201529081016003815260126020820152600060409182018190529051611261939291908190608590604b90606c906024016114a9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161129f919061145c565b600060405180830381855af49150503d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50509050806112ed57600080fd5b50600080546001600160a01b0394851664010000000002640100000000600160c01b0319909116179055600180549284166001600160a01b031993841617905560028054919093169116179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b0381168114610f2257600080fd5b6000806000606084860312156113af578283fd5b6113b884611384565b92506113c660208501611384565b91506113d460408501611384565b90509250925092565b6000602082840312156113ee578081fd5b81356001600160e01b031981168114611405578182fd5b9392505050565b80516001600160a01b0316825260208082015115159083015260408101516006811061143457fe5b604083015260608181015160ff169083015260809081015168ffffffffffffffffff16910152565b60008251815b8181101561147c5760208186018101518583015201611462565b8181111561148a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6101e081016114b8828a61140c565b6114c560a083018961140c565b6001600160a01b039690961661014082015293151561016085015260ff9283166101808501529082166101a0840152166101c0909101529291505056fea26469706673582212204411441135addeb7454106eea263af6744edf3a72f74af785d1a16e3f88e829d64736f6c63430007060033",
  "bytecodeSha1": "d1d621b6f4a96771084b16871860a982adf4128c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "Router",
  "coverageMap": {
    "branches": {
      "16": {
        "Router.getRouterImplementation": {
          "20": [
            5067,
            5115,
            true
          ],
          "21": [
            5131,
            5187,
            true
          ],
          "22": [
            5203,
            5271,
            true
          ],
          "23": [
            5287,
            5326,
            false
          ],
          "24": [
            5404,
            5450,
            true
          ],
          "25": [
            5466,
            5519,
            true
          ],
          "26": [
            5535,
            5580,
            true
          ],
          "27": [
            5596,
            5649,
            true
          ],
          "28": [
            5665,
            5716,
            true
          ],
          "29": [
            5732,
            5793,
            true
          ],
          "30": [
            5809,
            5875,
            false
          ],
          "31": [
            5961,
            6013,
            true
          ],
          "32": [
            6029,
            6076,
            true
          ],
          "33": [
            6092,
            6130,
            true
          ],
          "34": [
            6146,
            6189,
            true
          ],
          "35": [
            6205,
            6247,
            true
          ],
          "36": [
            6263,
            6313,
            false
          ],
          "37": [
            6393,
            6444,
            true
          ],
          "38": [
            6460,
            6503,
            true
          ],
          "39": [
            6519,
            6567,
            true
          ],
          "40": [
            6583,
            6632,
            true
          ],
          "41": [
            6648,
            6702,
            true
          ],
          "42": [
            6718,
            6768,
            true
          ],
          "43": [
            6784,
            6839,
            true
          ],
          "44": [
            6855,
            6903,
            true
          ],
          "45": [
            6919,
            6963,
            true
          ],
          "46": [
            6979,
            7030,
            true
          ],
          "47": [
            7046,
            7096,
            false
          ],
          "48": [
            7169,
            7214,
            true
          ],
          "49": [
            7230,
            7281,
            true
          ],
          "50": [
            7297,
            7340,
            true
          ],
          "51": [
            7356,
            7405,
            true
          ],
          "52": [
            7421,
            7463,
            true
          ],
          "53": [
            7479,
            7525,
            true
          ],
          "54": [
            7541,
            7593,
            true
          ],
          "55": [
            7609,
            7658,
            true
          ],
          "56": [
            7674,
            7736,
            true
          ],
          "57": [
            7752,
            7819,
            false
          ],
          "58": [
            7899,
            7951,
            true
          ],
          "59": [
            7967,
            8024,
            true
          ],
          "60": [
            8040,
            8103,
            true
          ],
          "61": [
            8119,
            8187,
            false
          ],
          "62": [
            8271,
            8320,
            true
          ],
          "63": [
            8336,
            8393,
            true
          ],
          "64": [
            8409,
            8469,
            true
          ],
          "65": [
            8485,
            8553,
            false
          ],
          "66": [
            8634,
            8674,
            true
          ],
          "67": [
            8690,
            8738,
            true
          ],
          "68": [
            8754,
            8807,
            true
          ],
          "69": [
            8823,
            8872,
            true
          ],
          "70": [
            8888,
            8940,
            true
          ],
          "71": [
            8956,
            9014,
            true
          ],
          "72": [
            9030,
            9091,
            true
          ],
          "73": [
            9107,
            9162,
            true
          ],
          "74": [
            9178,
            9237,
            true
          ],
          "75": [
            9253,
            9313,
            true
          ],
          "76": [
            9329,
            9391,
            true
          ],
          "77": [
            9407,
            9447,
            true
          ],
          "78": [
            9463,
            9506,
            true
          ],
          "79": [
            9522,
            9568,
            true
          ],
          "80": [
            9584,
            9631,
            true
          ],
          "81": [
            9647,
            9689,
            true
          ],
          "82": [
            9705,
            9757,
            false
          ],
          "83": [
            9835,
            9882,
            true
          ],
          "84": [
            9898,
            9948,
            false
          ],
          "85": [
            10031,
            10078,
            true
          ],
          "86": [
            10094,
            10144,
            true
          ],
          "87": [
            10160,
            10210,
            true
          ],
          "88": [
            10226,
            10276,
            true
          ],
          "89": [
            10292,
            10340,
            true
          ],
          "90": [
            10356,
            10408,
            true
          ],
          "91": [
            10424,
            10473,
            true
          ],
          "92": [
            10489,
            10551,
            true
          ],
          "93": [
            10567,
            10628,
            true
          ],
          "94": [
            10644,
            10702,
            true
          ],
          "95": [
            10718,
            10783,
            true
          ],
          "96": [
            10799,
            10865,
            true
          ],
          "97": [
            10881,
            10944,
            true
          ],
          "98": [
            10960,
            11027,
            true
          ],
          "99": [
            11043,
            11092,
            true
          ],
          "100": [
            11108,
            11147,
            true
          ],
          "101": [
            11163,
            11209,
            false
          ],
          "102": [
            11285,
            11338,
            true
          ],
          "103": [
            11354,
            11412,
            true
          ],
          "104": [
            11428,
            11479,
            true
          ],
          "105": [
            11495,
            11544,
            true
          ],
          "106": [
            11560,
            11614,
            false
          ],
          "107": [
            11688,
            11747,
            true
          ],
          "108": [
            11763,
            11829,
            true
          ],
          "109": [
            11845,
            11911,
            true
          ],
          "110": [
            11927,
            11992,
            true
          ],
          "111": [
            12008,
            12065,
            true
          ],
          "112": [
            12081,
            12132,
            true
          ],
          "113": [
            12148,
            12208,
            true
          ],
          "114": [
            12224,
            12288,
            true
          ],
          "115": [
            12304,
            12364,
            true
          ],
          "116": [
            12380,
            12444,
            true
          ],
          "117": [
            12460,
            12525,
            false
          ]
        },
        "Router.initialize": {
          "118": [
            3535,
            3557,
            false
          ],
          "119": [
            3562,
            3576,
            true
          ],
          "120": [
            4577,
            4583,
            true
          ]
        }
      },
      "46": {},
      "49": {},
      "51": {}
    },
    "statements": {
      "16": {
        "Router.<fallback>": {
          "0": [
            13955,
            13998
          ]
        },
        "Router.getRouterImplementation": {
          "1": [
            5351,
            5370
          ],
          "2": [
            5900,
            5927
          ],
          "3": [
            6338,
            6359
          ],
          "4": [
            7121,
            7135
          ],
          "5": [
            7844,
            7865
          ],
          "6": [
            8212,
            8237
          ],
          "7": [
            8578,
            8600
          ],
          "8": [
            9782,
            9801
          ],
          "9": [
            9973,
            9997
          ],
          "10": [
            11234,
            11251
          ],
          "11": [
            11639,
            11654
          ],
          "12": [
            12550,
            12574
          ],
          "13": [
            12732,
            12744
          ]
        },
        "Router.initialize": {
          "14": [
            3527,
            3577
          ],
          "15": [
            3711,
            3729
          ],
          "16": [
            4569,
            4584
          ],
          "17": [
            4595,
            4609
          ],
          "18": [
            4693,
            4719
          ],
          "19": [
            4729,
            4759
          ]
        }
      },
      "46": {},
      "49": {},
      "51": {}
    }
  },
  "dependencies": [
    "Constants",
    "StorageLayoutV1"
  ],
  "deployedBytecode": "6080604052600436106101145760003560e01c80636d7cdbbf116100a0578063a1b4d01111610064578063a1b4d0111461027a578063ba6b7fc21461028f578063c0c53b8b146102a4578063d8e310a4146102c4578063dcc1a738146102d957610114565b80636d7cdbbf1461020657806372d271341461021b57806376e1df481461023057806382463367146102505780638da5cb5b1461026557610114565b806324a3d622116100e757806324a3d6221461019d5780632be75895146101b25780632d255471146101c75780632d2c5565146101dc5780636009b8e6146101f157610114565b80630c4e793514610133578063146278341461015e57806315beeb9314610173578063206109b514610188575b61013161012c6000356001600160e01b0319166102ee565b610f27565b005b34801561013f57600080fd5b50610148610f4b565b6040516101559190611495565b60405180910390f35b34801561016a57600080fd5b50610148610f6f565b34801561017f57600080fd5b50610148610f93565b34801561019457600080fd5b50610148610fb7565b3480156101a957600080fd5b50610148610fdb565b3480156101be57600080fd5b50610148610fea565b3480156101d357600080fd5b5061014861100e565b3480156101e857600080fd5b50610148611032565b3480156101fd57600080fd5b50610148611056565b34801561021257600080fd5b5061014861107a565b34801561022757600080fd5b5061014861109e565b34801561023c57600080fd5b5061014861024b3660046113dd565b6102ee565b34801561025c57600080fd5b506101486110c2565b34801561027157600080fd5b506101486110d1565b34801561028657600080fd5b506101486110e8565b34801561029b57600080fd5b5061014861110c565b3480156102b057600080fd5b506101316102bf36600461139b565b611130565b3480156102d057600080fd5b5061014861133c565b3480156102e557600080fd5b50610148611360565b60006001600160e01b03198216633735195360e11b148061031f57506001600160e01b03198216630276b64b60e01b145b8061033a57506001600160e01b03198216635950d8e960e01b145b8061035557506001600160e01b03198216630541f52760e41b145b1561038157507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216634ae0d10160e11b14806103b057506001600160e01b0319821663194ed84160e21b145b806103cb57506001600160e01b03198216636ce48f0160e01b145b806103e657506001600160e01b03198216634ca418af60e11b145b8061040157506001600160e01b0319821663c025d1a560e01b145b8061041c57506001600160e01b0319821663803c25fb60e01b145b8061043757506001600160e01b0319821663323e60cb60e11b145b1561046357507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216632890fb6560e01b148061049257506001600160e01b0319821663b8a6945560e01b145b806104ac57506001600160e01b03198216625e665d60e31b145b806104c757506001600160e01b0319821663f667f89760e01b145b806104e257506001600160e01b03198216636689064360e01b145b806104fd57506001600160e01b031982166309c9794560e41b145b1561052957507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b031982166301ffc9a760e01b148061055757506001600160e01b03198216627eeac760e11b145b8061057257506001600160e01b031982166313849cfd60e21b145b8061058d57506001600160e01b03198216630fac8f0960e01b145b806105a857506001600160e01b031982166381a8685560e01b145b806105c357506001600160e01b03198216637921219560e11b145b806105de57506001600160e01b03198216631759616b60e11b145b806105f957506001600160e01b031982166307f4d70160e31b145b8061061457506001600160e01b03198216630e6b43b960e31b145b8061062f57506001600160e01b0319821663a22cb46560e01b145b8061064a57506001600160e01b0319821663e985e9c560e01b145b1561067657507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216636a96e86f60e01b14806106a557506001600160e01b03198216637db31ab960e01b145b806106c057506001600160e01b0319821663a78dbfff60e01b145b806106db57506001600160e01b0319821663184e005360e11b145b806106f657506001600160e01b031982166318ae40d760e01b145b8061071157506001600160e01b03198216634425384960e11b145b8061072c57506001600160e01b031982166305c1d97560e31b145b8061074757506001600160e01b03198216636d6503d360e11b145b8061076257506001600160e01b03198216631a05bce160e01b145b8061077d57506001600160e01b03198216633b2987b360e01b145b156107a957507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216632d10e6eb60e01b14806107d857506001600160e01b03198216636633af3960e01b145b806107f357506001600160e01b0319821663e3e7cb4f60e01b145b8061080e57506001600160e01b03198216639a600eeb60e01b145b1561083a57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216631ff7aefd60e21b148061086957506001600160e01b0319821663e816469d60e01b145b8061088457506001600160e01b03198216630fb281d960e01b145b8061089f57506001600160e01b0319821663fa37e39560e01b145b156108cb57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216638c9e446560e01b14806108fa57506001600160e01b031982166315bd0a3160e21b145b8061091557506001600160e01b031982166354cceaf760e01b145b8061093057506001600160e01b03198216635b389c5560e11b145b8061094b57506001600160e01b03198216636b6ef5cd60e11b145b8061096657506001600160e01b0319821663291afdf360e01b145b8061098157506001600160e01b0319821663341305ab60e21b145b8061099c57506001600160e01b0319821663ee01436b60e01b145b806109b757506001600160e01b031982166302f0233760e21b145b806109d257506001600160e01b031982166350e4f22360e01b145b806109ec57506001600160e01b0319821662d6442960e11b145b80610a0757506001600160e01b0319821663295e6b7f60e01b145b80610a2257506001600160e01b0319821663de1eb9a360e01b145b80610a3d57506001600160e01b031982166333a8abbb60e11b145b80610a5857506001600160e01b031982166328536d5f60e21b145b80610a7357506001600160e01b03198216633157228160e01b145b80610a8e57506001600160e01b03198216636c346c0960e01b145b15610aba57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216630343819360e61b1480610ae957506001600160e01b03198216635db6eac760e11b145b15610b1557507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216637abaf27160e11b1480610b4457506001600160e01b0319821663e31051a160e01b145b80610b5f57506001600160e01b0319821663a11a429360e01b145b80610b7a57506001600160e01b03198216630528476560e51b145b80610b9557506001600160e01b0319821663315cb2b960e21b145b80610bb057506001600160e01b03198216632c90b94d60e21b145b80610bcb57506001600160e01b031982166309ce3c1960e31b145b80610be657506001600160e01b031982166354ebde2960e11b145b80610c0157506001600160e01b031982166398dcbc2360e01b145b80610c1c57506001600160e01b031982166333eabd1d60e21b145b80610c3757506001600160e01b0319821663413f2c5f60e01b145b80610c5257506001600160e01b03198216630d0da86760e21b145b80610c6d57506001600160e01b0319821663353abc5d60e01b145b80610c8857506001600160e01b0319821663fa17b5f160e01b145b80610ca357506001600160e01b0319821663113aa8b160e01b145b80610cbe57506001600160e01b03198216631b2ce7f360e11b145b80610cd957506001600160e01b0319821663278f794360e11b145b15610d0557507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216637d6dbff760e11b1480610d3457506001600160e01b03198216636d7a00eb60e01b145b80610d4f57506001600160e01b03198216637f23d4f960e11b145b80610d6a57506001600160e01b0319821663239cec8f60e21b145b80610d8557506001600160e01b031982166312adc47b60e01b145b15610db157507f0000000000000000000000000000000000000000000000000000000000000000610f22565b6001600160e01b03198216636a09a2a360e01b1480610de057506001600160e01b03198216638355e89560e01b145b80610dfb57506001600160e01b0319821663094614df60e01b145b80610e1657506001600160e01b03198216634beb6d9760e11b145b80610e3157506001600160e01b0319821663c52c43e160e01b145b80610e4c57506001600160e01b03198216635953c77b60e01b145b80610e6757506001600160e01b03198216631f0750c160e31b145b80610e8257506001600160e01b0319821663bac9e8b160e01b145b80610e9d57506001600160e01b0319821663aaae47b560e01b145b80610eb857506001600160e01b0319821663416a158760e01b145b80610ed357506001600160e01b03198216631baefc5d60e21b145b15610eff57507f0000000000000000000000000000000000000000000000000000000000000000610f22565b507f00000000000000000000000000000000000000000000000000000000000000005b919050565b3660008037600080366000845af43d6000803e808015610f46573d6000f35b3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b60005464010000000090046001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561117257506000546301000000900460ff16155b61117b57600080fd5b60008054640100000000600160c01b03191633640100000000021781556040805160a0810182526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168252602082018490527f00000000000000000000000000000000000000000000000000000000000000001691637abaf27160e11b9190810160028152600860208083019190915260006040928301819052825160a081018452818152918201529081016003815260126020820152600060409182018190529051611261939291908190608590604b90606c906024016114a9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161129f919061145c565b600060405180830381855af49150503d80600081146112da576040519150601f19603f3d011682016040523d82523d6000602084013e6112df565b606091505b50509050806112ed57600080fd5b50600080546001600160a01b0394851664010000000002640100000000600160c01b0319909116179055600180549284166001600160a01b031993841617905560028054919093169116179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b0381168114610f2257600080fd5b6000806000606084860312156113af578283fd5b6113b884611384565b92506113c660208501611384565b91506113d460408501611384565b90509250925092565b6000602082840312156113ee578081fd5b81356001600160e01b031981168114611405578182fd5b9392505050565b80516001600160a01b0316825260208082015115159083015260408101516006811061143457fe5b604083015260608181015160ff169083015260809081015168ffffffffffffffffff16910152565b60008251815b8181101561147c5760208186018101518583015201611462565b8181111561148a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6101e081016114b8828a61140c565b6114c560a083018961140c565b6001600160a01b039690961661014082015293151561016085015260ff9283166101808501529082166101a0840152166101c0909101529291505056fea26469706673582212204411441135addeb7454106eea263af6744edf3a72f74af785d1a16e3f88e829d64736f6c63430007060033",
  "deployedSourceMap": "1267:12828:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13955:43;13965:32;13989:7;;-1:-1:-1;;;;;;13989:7:16;13965:23;:32::i;:::-;13955:9;:43::i;:::-;1267:12828;1427:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:35;;;;;;;;;;;;;:::i;1511:39::-;;;;;;;;;;;;;:::i;1731:40::-;;;;;;;;;;;;;:::i;1060:28:49:-;;;;;;;;;;;;;:::i;1682:43:16:-;;;;;;;;;;;;;:::i;1644:32::-;;;;;;;;;;;;;:::i;1812:33::-;;;;;;;;;;;;;:::i;1599:39::-;;;;;;;;;;;;;:::i;1556:37::-;;;;;;;;;;;;;:::i;1851:42::-;;;;;;;;;;;;;:::i;4965:7796::-;;;;;;;;;;-1:-1:-1;4965:7796:16;;;;;:::i;:::-;;:::i;943:26:49:-;;;;;;;;;;;;;:::i;832:20::-;;;;;;;;;;;;;:::i;1777:29:16:-;;;;;;;;;;;;;:::i;1899:45::-;;;;;;;;;;;;;:::i;3373:1426::-;;;;;;;;;;-1:-1:-1;3373:1426:16;;;;;:::i;:::-;;:::i;1950:37::-;;;;;;;;;;;;;:::i;1463:42::-;;;;;;;;;;;;;:::i;4965:7796::-;5031:7;-1:-1:-1;;;;;;5067:48:16;;-1:-1:-1;;;5067:48:16;;:120;;-1:-1:-1;;;;;;;5131:56:16;;-1:-1:-1;;;5131:56:16;5067:120;:204;;;-1:-1:-1;;;;;;;5203:68:16;;-1:-1:-1;;;5203:68:16;5067:204;:259;;;-1:-1:-1;;;;;;;5287:39:16;;-1:-1:-1;;;5287:39:16;5067:259;5050:7705;;;-1:-1:-1;5358:12:16;5351:19;;5050:7705;-1:-1:-1;;;;;;5404:46:16;;-1:-1:-1;;;5404:46:16;;:115;;-1:-1:-1;;;;;;;5466:53:16;;-1:-1:-1;;;5466:53:16;5404:115;:176;;;-1:-1:-1;;;;;;;5535:45:16;;-1:-1:-1;;;5535:45:16;5404:176;:245;;;-1:-1:-1;;;;;;;5596:53:16;;-1:-1:-1;;;5596:53:16;5404:245;:312;;;-1:-1:-1;;;;;;;5665:51:16;;-1:-1:-1;;;5665:51:16;5404:312;:389;;;-1:-1:-1;;;;;;;5732:61:16;;-1:-1:-1;;;5732:61:16;5404:389;:471;;;-1:-1:-1;;;;;;;5809:66:16;;-1:-1:-1;;;5809:66:16;5404:471;5387:7368;;;-1:-1:-1;5907:20:16;5900:27;;5387:7368;-1:-1:-1;;;;;;5961:52:16;;-1:-1:-1;;;5961:52:16;;:115;;-1:-1:-1;;;;;;;6029:47:16;;-1:-1:-1;;;6029:47:16;5961:115;:169;;;-1:-1:-1;;;;;;;6092:38:16;;-1:-1:-1;;;6092:38:16;5961:169;:228;;;-1:-1:-1;;;;;;;6146:43:16;;-1:-1:-1;;;6146:43:16;5961:228;:286;;;-1:-1:-1;;;;;;;6205:42:16;;-1:-1:-1;;;6205:42:16;5961:286;:352;;;-1:-1:-1;;;;;;;6263:50:16;;-1:-1:-1;;;6263:50:16;5961:352;5944:6811;;;-1:-1:-1;6345:14:16;6338:21;;5944:6811;-1:-1:-1;;;;;;6393:51:16;;-1:-1:-1;;;6393:51:16;;:110;;-1:-1:-1;;;;;;;6460:43:16;;-1:-1:-1;;;6460:43:16;6393:110;:174;;;-1:-1:-1;;;;;;;6519:48:16;;-1:-1:-1;;;6519:48:16;6393:174;:239;;;-1:-1:-1;;;;;;;6583:49:16;;-1:-1:-1;;;6583:49:16;6393:239;:309;;;-1:-1:-1;;;;;;;6648:54:16;;-1:-1:-1;;;6648:54:16;6393:309;:375;;;-1:-1:-1;;;;;;;6718:50:16;;-1:-1:-1;;;6718:50:16;6393:375;:446;;;-1:-1:-1;;;;;;;6784:55:16;;-1:-1:-1;;;6784:55:16;6393:446;:510;;;-1:-1:-1;;;;;;;6855:48:16;;-1:-1:-1;;;6855:48:16;6393:510;:570;;;-1:-1:-1;;;;;;;6919:44:16;;-1:-1:-1;;;6919:44:16;6393:570;:637;;;-1:-1:-1;;;;;;;6979:51:16;;-1:-1:-1;;;6979:51:16;6393:637;:703;;;-1:-1:-1;;;;;;;7046:50:16;;-1:-1:-1;;;7046:50:16;6393:703;6376:6379;;;-1:-1:-1;7128:7:16;7121:14;;6376:6379;-1:-1:-1;;;;;;7169:45:16;;-1:-1:-1;;;7169:45:16;;:112;;-1:-1:-1;;;;;;;7230:51:16;;-1:-1:-1;;;7230:51:16;7169:112;:171;;;-1:-1:-1;;;;;;;7297:43:16;;-1:-1:-1;;;7297:43:16;7169:171;:236;;;-1:-1:-1;;;;;;;7356:49:16;;-1:-1:-1;;;7356:49:16;7169:236;:294;;;-1:-1:-1;;;;;;;7421:42:16;;-1:-1:-1;;;7421:42:16;7169:294;:356;;;-1:-1:-1;;;;;;;7479:46:16;;-1:-1:-1;;;7479:46:16;7169:356;:424;;;-1:-1:-1;;;;;;;7541:52:16;;-1:-1:-1;;;7541:52:16;7169:424;:489;;;-1:-1:-1;;;;;;;7609:49:16;;-1:-1:-1;;;7609:49:16;7169:489;:567;;;-1:-1:-1;;;;;;;7674:62:16;;-1:-1:-1;;;7674:62:16;7169:567;:650;;;-1:-1:-1;;;;;;;7752:67:16;;-1:-1:-1;;;7752:67:16;7169:650;7152:5603;;;-1:-1:-1;7851:14:16;7844:21;;7152:5603;-1:-1:-1;;;;;;7899:52:16;;-1:-1:-1;;;7899:52:16;;:125;;-1:-1:-1;;;;;;;7967:57:16;;-1:-1:-1;;;7967:57:16;7899:125;:204;;;-1:-1:-1;;;;;;;8040:63:16;;-1:-1:-1;;;8040:63:16;7899:204;:288;;;-1:-1:-1;;;;;;;8119:68:16;;-1:-1:-1;;;8119:68:16;7899:288;7882:4873;;;-1:-1:-1;8219:18:16;8212:25;;7882:4873;-1:-1:-1;;;;;;8271:49:16;;-1:-1:-1;;;8271:49:16;;:122;;-1:-1:-1;;;;;;;8336:57:16;;-1:-1:-1;;;8336:57:16;8271:122;:198;;;-1:-1:-1;;;;;;;8409:60:16;;-1:-1:-1;;;8409:60:16;8271:198;:282;;;-1:-1:-1;;;;;;;8485:68:16;;-1:-1:-1;;;8485:68:16;8271:282;8254:4501;;;-1:-1:-1;8585:15:16;8578:22;;8254:4501;-1:-1:-1;;;;;;8634:40:16;;-1:-1:-1;;;8634:40:16;;:104;;-1:-1:-1;;;;;;;8690:48:16;;-1:-1:-1;;;8690:48:16;8634:104;:173;;;-1:-1:-1;;;;;;;8754:53:16;;-1:-1:-1;;;8754:53:16;8634:173;:238;;;-1:-1:-1;;;;;;;8823:49:16;;-1:-1:-1;;;8823:49:16;8634:238;:306;;;-1:-1:-1;;;;;;;8888:52:16;;-1:-1:-1;;;8888:52:16;8634:306;:380;;;-1:-1:-1;;;;;;;8956:58:16;;-1:-1:-1;;;8956:58:16;8634:380;:457;;;-1:-1:-1;;;;;;;9030:61:16;;-1:-1:-1;;;9030:61:16;8634:457;:528;;;-1:-1:-1;;;;;;;9107:55:16;;-1:-1:-1;;;9107:55:16;8634:528;:603;;;-1:-1:-1;;;;;;;9178:59:16;;-1:-1:-1;;;9178:59:16;8634:603;:679;;;-1:-1:-1;;;;;;;9253:60:16;;-1:-1:-1;;;9253:60:16;8634:679;:757;;;-1:-1:-1;;;;;;;9329:62:16;;-1:-1:-1;;;9329:62:16;8634:757;:813;;;-1:-1:-1;;;;;;;9407:40:16;;-1:-1:-1;;;9407:40:16;8634:813;:872;;;-1:-1:-1;;;;;;;9463:43:16;;-1:-1:-1;;;9463:43:16;8634:872;:934;;;-1:-1:-1;;;;;;;9522:46:16;;-1:-1:-1;;;9522:46:16;8634:934;:997;;;-1:-1:-1;;;;;;;9584:47:16;;-1:-1:-1;;;9584:47:16;8634:997;:1055;;;-1:-1:-1;;;;;;;9647:42:16;;-1:-1:-1;;;9647:42:16;8634:1055;:1123;;;-1:-1:-1;;;;;;;9705:52:16;;-1:-1:-1;;;9705:52:16;8634:1123;8617:4138;;;-1:-1:-1;9789:12:16;9782:19;;8617:4138;-1:-1:-1;;;;;;9835:47:16;;-1:-1:-1;;;9835:47:16;;:113;;-1:-1:-1;;;;;;;9898:50:16;;-1:-1:-1;;;9898:50:16;9835:113;9818:2937;;;-1:-1:-1;9980:17:16;9973:24;;9818:2937;-1:-1:-1;;;;;;10031:47:16;;-1:-1:-1;;;10031:47:16;;:113;;-1:-1:-1;;;;;;;10094:50:16;;-1:-1:-1;;;10094:50:16;10031:113;:179;;;-1:-1:-1;;;;;;;10160:50:16;;-1:-1:-1;;;10160:50:16;10031:179;:245;;;-1:-1:-1;;;;;;;10226:50:16;;-1:-1:-1;;;10226:50:16;10031:245;:309;;;-1:-1:-1;;;;;;;10292:48:16;;-1:-1:-1;;;10292:48:16;10031:309;:377;;;-1:-1:-1;;;;;;;10356:52:16;;-1:-1:-1;;;10356:52:16;10031:377;:442;;;-1:-1:-1;;;;;;;10424:49:16;;-1:-1:-1;;;10424:49:16;10031:442;:520;;;-1:-1:-1;;;;;;;10489:62:16;;-1:-1:-1;;;10489:62:16;10031:520;:597;;;-1:-1:-1;;;;;;;10567:61:16;;-1:-1:-1;;;10567:61:16;10031:597;:671;;;-1:-1:-1;;;;;;;10644:58:16;;-1:-1:-1;;;10644:58:16;10031:671;:752;;;-1:-1:-1;;;;;;;10718:65:16;;-1:-1:-1;;;10718:65:16;10031:752;:834;;;-1:-1:-1;;;;;;;10799:66:16;;-1:-1:-1;;;10799:66:16;10031:834;:913;;;-1:-1:-1;;;;;;;10881:63:16;;-1:-1:-1;;;10881:63:16;10031:913;:996;;;-1:-1:-1;;;;;;;10960:67:16;;-1:-1:-1;;;10960:67:16;10031:996;:1061;;;-1:-1:-1;;;;;;;11043:49:16;;-1:-1:-1;;;11043:49:16;10031:1061;:1116;;;-1:-1:-1;;;;;;;11108:39:16;;-1:-1:-1;;;11108:39:16;10031:1116;:1178;;;-1:-1:-1;;;;;;;11163:46:16;;-1:-1:-1;;;11163:46:16;10031:1178;10014:2741;;;-1:-1:-1;11241:10:16;11234:17;;10014:2741;-1:-1:-1;;;;;;11285:53:16;;-1:-1:-1;;;11285:53:16;;:127;;-1:-1:-1;;;;;;;11354:58:16;;-1:-1:-1;;;11354:58:16;11285:127;:194;;;-1:-1:-1;;;;;;;11428:51:16;;-1:-1:-1;;;11428:51:16;11285:194;:259;;;-1:-1:-1;;;;;;;11495:49:16;;-1:-1:-1;;;11495:49:16;11285:259;:329;;;-1:-1:-1;;;;;;;11560:54:16;;-1:-1:-1;;;11560:54:16;11285:329;11268:1487;;;-1:-1:-1;11646:8:16;11639:15;;11268:1487;-1:-1:-1;;;;;;11688:59:16;;-1:-1:-1;;;11688:59:16;;:141;;-1:-1:-1;;;;;;;11763:66:16;;-1:-1:-1;;;11763:66:16;11688:141;:223;;;-1:-1:-1;;;;;;;11845:66:16;;-1:-1:-1;;;11845:66:16;11688:223;:304;;;-1:-1:-1;;;;;;;11927:65:16;;-1:-1:-1;;;11927:65:16;11688:304;:377;;;-1:-1:-1;;;;;;;12008:57:16;;-1:-1:-1;;;12008:57:16;11688:377;:444;;;-1:-1:-1;;;;;;;12081:51:16;;-1:-1:-1;;;12081:51:16;11688:444;:520;;;-1:-1:-1;;;;;;;12148:60:16;;-1:-1:-1;;;12148:60:16;11688:520;:600;;;-1:-1:-1;;;;;;;12224:64:16;;-1:-1:-1;;;12224:64:16;11688:600;:676;;;-1:-1:-1;;;;;;;12304:60:16;;-1:-1:-1;;;12304:60:16;11688:676;:756;;;-1:-1:-1;;;;;;;12380:64:16;;-1:-1:-1;;;12380:64:16;11688:756;:837;;;-1:-1:-1;;;;;;;12460:65:16;;-1:-1:-1;;;12460:65:16;11688:837;11671:1084;;;-1:-1:-1;12557:17:16;12550:24;;11671:1084;-1:-1:-1;12739:5:16;11671:1084;4965:7796;;;:::o;12941:970::-;13326:14;13323:1;13320;13307:34;13540:1;13537;13521:14;13518:1;13502:14;13495:5;13482:60;13616:16;13613:1;13610;13595:38;13654:6;13729:74;;;;13860:16;13857:1;13850:27;13729:74;13768:16;13765:1;13758:27;1427:30;;;:::o;1386:35::-;;;:::o;1511:39::-;;;:::o;1731:40::-;;;:::o;1060:28:49:-;;;-1:-1:-1;;;;;1060:28:49;;:::o;1682:43:16:-;;;:::o;1644:32::-;;;:::o;1812:33::-;;;:::o;1599:39::-;;;:::o;1556:37::-;;;:::o;1851:42::-;;;:::o;943:26:49:-;;;-1:-1:-1;;;;;943:26:49;;:::o;832:20::-;;;;;;-1:-1:-1;;;;;832:20:49;;:::o;1777:29:16:-;;;:::o;1899:45::-;;;:::o;3373:1426::-;3535:10;-1:-1:-1;;;;;3549:8:16;3535:22;;:41;;;;-1:-1:-1;3562:14:16;;;;;;;3561:15;3535:41;3527:50;;;;;;3711:5;:18;;-1:-1:-1;;;;;;3711:18:16;3719:10;3711:18;;;;;4087:75;;;;;;;;-1:-1:-1;;;;;4100:4:16;4087:75;;;;;;;;;;3939:10;3931:32;;-1:-1:-1;;;4025:40:16;4087:75;;;4113:14;4087:75;;223:1:46;4087:75:16;;;;;;;;-1:-1:-1;4087:75:16;;;;;;;4234:81;;;;;;;;;;;;;;;;;4266:15;4234:81;;674:2:46;4234:81:16;;;;-1:-1:-1;4234:81:16;;;;;;;3981:564;;;;;;-1:-1:-1;;;4396:3:16;;4456:2;;4496:3;;3981:564;;;:::i;:::-;;;;-1:-1:-1;;3981:564:16;;;;;;;;;;;;;;-1:-1:-1;;;;;3981:564:16;-1:-1:-1;;;;;;3981:564:16;;;;;;;;;;3931:628;;;;3981:564;3931:628;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3901:658;;;4577:6;4569:15;;;;;;-1:-1:-1;4595:5:16;:14;;-1:-1:-1;;;;;4595:14:16;;;;;-1:-1:-1;;;;;;4595:14:16;;;;;;-1:-1:-1;4693:26:16;;;;;-1:-1:-1;;;;;;4693:26:16;;;;;;4729:13;:30;;;;;;;;;;;3373:1426::o;1950:37::-;;;:::o;1463:42::-;;;:::o;14:175:137:-;84:20;;-1:-1:-1;;;;;133:31:137;;123:42;;113:2;;179:1;176;169:12;194:350;;;;340:2;328:9;319:7;315:23;311:32;308:2;;;361:6;353;346:22;308:2;389:31;410:9;389:31;:::i;:::-;379:41;;439:40;475:2;464:9;460:18;439:40;:::i;:::-;429:50;;498:40;534:2;523:9;519:18;498:40;:::i;:::-;488:50;;298:246;;;;;:::o;549:306::-;;660:2;648:9;639:7;635:23;631:32;628:2;;;681:6;673;666:22;628:2;712:23;;-1:-1:-1;;;;;;764:32:137;;754:43;;744:2;;816:6;808;801:22;744:2;844:5;618:237;-1:-1:-1;;;618:237:137:o;860:498::-;945:12;;-1:-1:-1;;;;;941:38:137;929:51;;1043:4;1032:16;;;1026:23;1019:31;1012:39;996:14;;;989:63;1098:4;1087:16;;1081:23;1140:1;1123:19;;1113:2;;1146:9;1113:2;1182:4;1173:14;;1166:36;1255:4;1244:16;;;1238:23;1263:4;1234:34;1218:14;;;1211:58;1322:4;1311:16;;;1305:23;1330:20;1301:50;1285:14;;1278:74;919:439::o;1363:430::-;;1530:6;1524:13;1555:3;1567:129;1581:6;1578:1;1575:13;1567:129;;;1679:4;1663:14;;;1659:25;;1653:32;1640:11;;;1633:53;1596:12;1567:129;;;1714:6;1711:1;1708:13;1705:2;;;1749:3;1740:6;1735:3;1731:16;1724:29;1705:2;-1:-1:-1;1771:16:137;;;;;1500:293;-1:-1:-1;;1500:293:137:o;1798:203::-;-1:-1:-1;;;;;1962:32:137;;;;1944:51;;1932:2;1917:18;;1899:102::o;2006:896::-;2465:3;2450:19;;2478:52;2454:9;2512:6;2478:52;:::i;:::-;2539:62;2596:3;2585:9;2581:19;2573:6;2539:62;:::i;:::-;-1:-1:-1;;;;;2638:32:137;;;;2632:3;2617:19;;2610:61;2715:14;;2708:22;2702:3;2687:19;;2680:51;2780:4;2768:17;;;2762:3;2747:19;;2740:46;2823:17;;;2817:3;2802:19;;2795:46;2878:17;2872:3;2857:19;;;2850:46;2432:470;;-1:-1:-1;;2432:470:137:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRouterImplementation(bytes4)": {
        "notice": "Returns the implementation contract for the method signature",
        "params": {
          "sig": "method signature to call"
        },
        "returns": {
          "_0": "implementation address"
        }
      }
    },
    "notice": "Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing contracts. This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a new Router with the new hardcoded addresses will then be deployed and upgraded into place.",
    "version": 1
  },
  "offset": [
    1267,
    14095
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D7CDBBF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA1B4D011 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA1B4D011 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xBA6B7FC2 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD8E310A4 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xDCC1A738 EQ PUSH2 0x2D9 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6D7CDBBF EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x72D27134 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x76E1DF48 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x82463367 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x24A3D622 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x24A3D622 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x2BE75895 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x2D255471 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6009B8E6 EQ PUSH2 0x1F1 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xC4E7935 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x14627834 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x15BEEB93 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x206109B5 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH2 0x131 PUSH2 0x12C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x2EE JUMP JUMPDEST PUSH2 0xF27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x100E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1032 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1056 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x107A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x109E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x110C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x133C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x37351953 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x31F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x276B64B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x33A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5950D8E9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x355 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x541F527 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x381 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4AE0D101 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3B0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x194ED841 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3CB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CE48F01 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4CA418AF PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x401 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC025D1A5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x803C25FB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x437 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x323E60CB PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0x463 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2890FB65 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x492 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB8A69455 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x5E665D PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF667F897 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x66890643 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9C97945 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x529 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x557 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x7EEAC7 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x572 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x13849CFD PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x58D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFAC8F09 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x81A86855 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5C3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x79212195 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1759616B PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F4D701 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x614 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE6B43B9 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x62F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA22CB465 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x64A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE985E9C5 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x676 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A96E86F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7DB31AB9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6C0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA78DBFFF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x184E0053 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x6F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18AE40D7 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x711 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x44253849 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x72C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5C1D975 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x747 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D6503D3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x762 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1A05BCE1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x77D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3B2987B3 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x7A9 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2D10E6EB PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6633AF39 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE3E7CB4F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x80E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9A600EEB PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x83A JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FF7AEFD PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x869 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE816469D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x884 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFB281D9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x89F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA37E395 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x8CB JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8C9E4465 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x15BD0A31 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x915 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x54CCEAF7 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x930 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B389C55 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x94B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6B6EF5CD PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x966 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x291AFDF3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x981 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x341305AB PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x99C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xEE01436B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9B7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2F02337 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x9D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x50E4F223 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0xD64429 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x295E6B7F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA22 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xDE1EB9A3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA3D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33A8ABBB PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x28536D5F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xA73 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x31572281 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA8E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6C346C09 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xABA JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3438193 PUSH1 0xE6 SHL EQ DUP1 PUSH2 0xAE9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5DB6EAC7 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xB15 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7ABAF271 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xB44 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE31051A1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB5F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA11A4293 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB7A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5284765 PUSH1 0xE5 SHL EQ JUMPDEST DUP1 PUSH2 0xB95 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x315CB2B9 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBB0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2C90B94D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9CE3C19 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xBE6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x54EBDE29 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xC01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x98DCBC23 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC1C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33EABD1D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x413F2C5F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC52 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xD0DA867 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC6D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x353ABC5D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC88 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA17B5F1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCA3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x113AA8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCBE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xCD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xD05 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7D6DBFF7 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xD34 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D7A00EB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xD4F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F23D4F9 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xD6A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x239CEC8F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xD85 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x12ADC47B PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xDB1 JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A09A2A3 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xDE0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8355E895 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xDFB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x94614DF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE16 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4BEB6D97 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC52C43E1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE4C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5953C77B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1F0750C1 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xE82 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xBAC9E8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xAAAE47B5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x416A1587 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xED3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1BAEFC5D PUSH1 0xE2 SHL EQ JUMPDEST ISZERO PUSH2 0xEFF JUMPI POP PUSH32 0x0 PUSH2 0xF22 JUMP JUMPDEST POP PUSH32 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF46 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1172 JUMPI POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x117B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND CALLER PUSH5 0x100000000 MUL OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP2 PUSH4 0x7ABAF271 PUSH1 0xE1 SHL SWAP2 SWAP1 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x1261 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x85 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x6C SWAP1 PUSH1 0x24 ADD PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x129F SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13B8 DUP5 PUSH2 0x1384 JUMP JUMPDEST SWAP3 POP PUSH2 0x13C6 PUSH1 0x20 DUP6 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D4 PUSH1 0x40 DUP6 ADD PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1405 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1434 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1462 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x148A JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD PUSH2 0x14B8 DUP3 DUP11 PUSH2 0x140C JUMP JUMPDEST PUSH2 0x14C5 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH2 0x140 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP3 AND PUSH2 0x1A0 DUP5 ADD MSTORE AND PUSH2 0x1C0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY GT DIFFICULTY GT CALLDATALOAD 0xAD 0xDE 0xB7 GASLIMIT COINBASE MOD 0xEE LOG2 PUSH4 0xAF6744ED RETURN 0xA7 0x2F PUSH21 0xAF785D1A16E3F88E829D64736F6C63430007060033 ",
  "pcMap": {
    "0": {
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6D7CDBBF"
    },
    "25": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA1B4D011"
    },
    "36": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA1B4D011"
    },
    "47": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27A"
    },
    "51": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBA6B7FC2"
    },
    "58": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28F"
    },
    "62": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC0C53B8B"
    },
    "69": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A4"
    },
    "73": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD8E310A4"
    },
    "80": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C4"
    },
    "84": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDCC1A738"
    },
    "91": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D9"
    },
    "95": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114"
    },
    "99": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMP",
      "path": "16"
    },
    "100": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6D7CDBBF"
    },
    "107": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "108": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x206"
    },
    "111": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x72D27134"
    },
    "118": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21B"
    },
    "122": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x76E1DF48"
    },
    "129": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x230"
    },
    "133": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x82463367"
    },
    "140": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x250"
    },
    "144": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x265"
    },
    "155": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114"
    },
    "159": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMP",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x24A3D622"
    },
    "167": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x24A3D622"
    },
    "178": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19D"
    },
    "182": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2BE75895"
    },
    "189": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B2"
    },
    "193": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2D255471"
    },
    "200": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C7"
    },
    "204": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2D2C5565"
    },
    "211": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "215": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "217": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6009B8E6"
    },
    "222": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F1"
    },
    "226": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "227": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114"
    },
    "230": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMP",
      "path": "16"
    },
    "231": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC4E7935"
    },
    "238": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x133"
    },
    "242": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x14627834"
    },
    "249": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15E"
    },
    "253": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x15BEEB93"
    },
    "260": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "261": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x173"
    },
    "264": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "265": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x206109B5"
    },
    "271": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "EQ",
      "path": "16"
    },
    "272": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188"
    },
    "275": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "276": {
      "fn": null,
      "offset": [
        1267,
        14095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "277": {
      "fn": "Router.<fallback>",
      "offset": [
        13955,
        13998
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 0,
      "value": "0x131"
    },
    "280": {
      "fn": "Router.<fallback>",
      "offset": [
        13965,
        13997
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12C"
    },
    "283": {
      "fn": "Router.<fallback>",
      "offset": [
        13989,
        13996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "285": {
      "fn": "Router.<fallback>",
      "offset": [
        13989,
        13996
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "op": "NOT"
    },
    "295": {
      "fn": "Router.<fallback>",
      "offset": [
        13989,
        13996
      ],
      "op": "AND",
      "path": "16"
    },
    "296": {
      "fn": "Router.<fallback>",
      "offset": [
        13965,
        13988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2EE"
    },
    "299": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        13965,
        13997
      ],
      "op": "JUMP",
      "path": "16"
    },
    "300": {
      "fn": "Router.<fallback>",
      "offset": [
        13965,
        13997
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "301": {
      "fn": "Router.<fallback>",
      "offset": [
        13955,
        13964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF27"
    },
    "304": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        13955,
        13998
      ],
      "op": "JUMP",
      "path": "16"
    },
    "305": {
      "fn": "Router.<fallback>",
      "offset": [
        13955,
        13998
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "306": {
      "offset": [
        1267,
        14095
      ],
      "op": "STOP",
      "path": "16"
    },
    "307": {
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "308": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "309": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "DUP1",
      "path": "16"
    },
    "310": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "311": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F"
    },
    "314": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "315": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "317": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "DUP1",
      "path": "16"
    },
    "318": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "REVERT",
      "path": "16"
    },
    "319": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "320": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "POP",
      "path": "16"
    },
    "321": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "324": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF4B"
    },
    "327": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "328": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "329": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "331": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "332": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155"
    },
    "335": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "336": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "337": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1495"
    },
    "340": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "341": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "342": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "344": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "345": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "DUP1",
      "path": "16"
    },
    "346": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "347": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "SUB",
      "path": "16"
    },
    "348": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "349": {
      "fn": "Router.<fallback>",
      "offset": [
        1427,
        1457
      ],
      "op": "RETURN",
      "path": "16"
    },
    "350": {
      "offset": [
        1386,
        1421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "351": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "352": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "354": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16A"
    },
    "357": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "358": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "360": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "DUP1",
      "path": "16"
    },
    "361": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "REVERT",
      "path": "16"
    },
    "362": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "363": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "POP",
      "path": "16"
    },
    "364": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "367": {
      "fn": "Router.<fallback>",
      "offset": [
        1386,
        1421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF6F"
    },
    "370": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1386,
        1421
      ],
      "op": "JUMP",
      "path": "16"
    },
    "371": {
      "offset": [
        1511,
        1550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "372": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "373": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "DUP1",
      "path": "16"
    },
    "374": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "375": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17F"
    },
    "378": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "381": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "DUP1",
      "path": "16"
    },
    "382": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "REVERT",
      "path": "16"
    },
    "383": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "384": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "POP",
      "path": "16"
    },
    "385": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "388": {
      "fn": "Router.<fallback>",
      "offset": [
        1511,
        1550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF93"
    },
    "391": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1511,
        1550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "392": {
      "offset": [
        1731,
        1771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "393": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "394": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "DUP1",
      "path": "16"
    },
    "395": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "396": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x194"
    },
    "399": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "400": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "402": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "DUP1",
      "path": "16"
    },
    "403": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "REVERT",
      "path": "16"
    },
    "404": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "405": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "POP",
      "path": "16"
    },
    "406": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "409": {
      "fn": "Router.<fallback>",
      "offset": [
        1731,
        1771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFB7"
    },
    "412": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1731,
        1771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "413": {
      "offset": [
        1060,
        1088
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "414": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "415": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP1",
      "path": "49"
    },
    "416": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "417": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1A9"
    },
    "420": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "421": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "423": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP1",
      "path": "49"
    },
    "424": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "REVERT",
      "path": "49"
    },
    "425": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "426": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "POP",
      "path": "49"
    },
    "427": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x148"
    },
    "430": {
      "fn": "Router.<fallback>",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xFDB"
    },
    "433": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1060,
        1088
      ],
      "op": "JUMP",
      "path": "49"
    },
    "434": {
      "offset": [
        1682,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "435": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "436": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "437": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "438": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "442": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "444": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "445": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "REVERT",
      "path": "16"
    },
    "446": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "447": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "POP",
      "path": "16"
    },
    "448": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "451": {
      "fn": "Router.<fallback>",
      "offset": [
        1682,
        1725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFEA"
    },
    "454": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1682,
        1725
      ],
      "op": "JUMP",
      "path": "16"
    },
    "455": {
      "offset": [
        1644,
        1676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "456": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "457": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "DUP1",
      "path": "16"
    },
    "458": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "459": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "463": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "465": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "DUP1",
      "path": "16"
    },
    "466": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "REVERT",
      "path": "16"
    },
    "467": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "468": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "POP",
      "path": "16"
    },
    "469": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "472": {
      "fn": "Router.<fallback>",
      "offset": [
        1644,
        1676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100E"
    },
    "475": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1644,
        1676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "476": {
      "offset": [
        1812,
        1845
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "477": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "478": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "479": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "480": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E8"
    },
    "483": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "484": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "486": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "487": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "REVERT",
      "path": "16"
    },
    "488": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "489": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "490": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "493": {
      "fn": "Router.<fallback>",
      "offset": [
        1812,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1032"
    },
    "496": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1812,
        1845
      ],
      "op": "JUMP",
      "path": "16"
    },
    "497": {
      "offset": [
        1599,
        1638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "498": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "499": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "501": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FD"
    },
    "504": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "505": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "507": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "DUP1",
      "path": "16"
    },
    "508": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "REVERT",
      "path": "16"
    },
    "509": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "510": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "POP",
      "path": "16"
    },
    "511": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "514": {
      "fn": "Router.<fallback>",
      "offset": [
        1599,
        1638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1056"
    },
    "517": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1599,
        1638
      ],
      "op": "JUMP",
      "path": "16"
    },
    "518": {
      "offset": [
        1556,
        1593
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "519": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "520": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP1",
      "path": "16"
    },
    "521": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "522": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x212"
    },
    "525": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "526": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "528": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP1",
      "path": "16"
    },
    "529": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "REVERT",
      "path": "16"
    },
    "530": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "531": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "16"
    },
    "532": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "535": {
      "fn": "Router.<fallback>",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x107A"
    },
    "538": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1556,
        1593
      ],
      "op": "JUMP",
      "path": "16"
    },
    "539": {
      "offset": [
        1851,
        1893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "540": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "541": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "542": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "543": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x227"
    },
    "546": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "547": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "549": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "550": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "REVERT",
      "path": "16"
    },
    "551": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "552": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "POP",
      "path": "16"
    },
    "553": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "556": {
      "fn": "Router.<fallback>",
      "offset": [
        1851,
        1893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x109E"
    },
    "559": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1851,
        1893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "560": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "561": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "562": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "DUP1",
      "path": "16"
    },
    "563": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "564": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23C"
    },
    "567": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "570": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "REVERT",
      "path": "16"
    },
    "572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "573": {
      "op": "POP"
    },
    "574": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "577": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24B"
    },
    "580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "581": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13DD"
    },
    "586": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "587": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "588": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2EE"
    },
    "591": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "592": {
      "offset": [
        943,
        969
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "593": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "DUP1",
      "path": "49"
    },
    "595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x25C"
    },
    "599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "602": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "DUP1",
      "path": "49"
    },
    "603": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "REVERT",
      "path": "49"
    },
    "604": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "605": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "POP",
      "path": "49"
    },
    "606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x148"
    },
    "609": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        943,
        969
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10C2"
    },
    "612": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        943,
        969
      ],
      "op": "JUMP",
      "path": "49"
    },
    "613": {
      "offset": [
        832,
        852
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "614": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "615": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "DUP1",
      "path": "49"
    },
    "616": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x271"
    },
    "620": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "DUP1",
      "path": "49"
    },
    "624": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "REVERT",
      "path": "49"
    },
    "625": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "626": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "POP",
      "path": "49"
    },
    "627": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x148"
    },
    "630": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        832,
        852
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x10D1"
    },
    "633": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        832,
        852
      ],
      "op": "JUMP",
      "path": "49"
    },
    "634": {
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "635": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "636": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP1",
      "path": "16"
    },
    "637": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x286"
    },
    "641": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "642": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "644": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP1",
      "path": "16"
    },
    "645": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "REVERT",
      "path": "16"
    },
    "646": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "647": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "POP",
      "path": "16"
    },
    "648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "651": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10E8"
    },
    "654": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "655": {
      "offset": [
        1899,
        1944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "656": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "657": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "659": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "662": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "663": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "REVERT",
      "path": "16"
    },
    "667": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "668": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "POP",
      "path": "16"
    },
    "669": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "672": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1899,
        1944
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110C"
    },
    "675": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1899,
        1944
      ],
      "op": "JUMP",
      "path": "16"
    },
    "676": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "677": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "678": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "DUP1",
      "path": "16"
    },
    "679": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "680": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B0"
    },
    "683": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "684": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "686": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "DUP1",
      "path": "16"
    },
    "687": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "REVERT",
      "path": "16"
    },
    "688": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x131"
    },
    "693": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BF"
    },
    "696": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "697": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "699": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x139B"
    },
    "702": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMP",
      "path": "16"
    },
    "703": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "704": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1130"
    },
    "707": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMP",
      "path": "16"
    },
    "708": {
      "offset": [
        1950,
        1987
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "709": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "710": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "DUP1",
      "path": "16"
    },
    "711": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "712": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D0"
    },
    "715": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "716": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "718": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "DUP1",
      "path": "16"
    },
    "719": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "REVERT",
      "path": "16"
    },
    "720": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "721": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "POP",
      "path": "16"
    },
    "722": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "725": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x133C"
    },
    "728": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1950,
        1987
      ],
      "op": "JUMP",
      "path": "16"
    },
    "729": {
      "offset": [
        1463,
        1505
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "730": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "731": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "DUP1",
      "path": "16"
    },
    "732": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "733": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E5"
    },
    "736": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "737": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "739": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "REVERT",
      "path": "16"
    },
    "741": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "742": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "POP",
      "path": "16"
    },
    "743": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "746": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1360"
    },
    "749": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1463,
        1505
      ],
      "op": "JUMP",
      "path": "16"
    },
    "750": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "751": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5031,
        5038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "op": "NOT"
    },
    "762": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5115
      ],
      "op": "DUP3",
      "path": "16"
    },
    "763": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5115
      ],
      "op": "AND",
      "path": "16"
    },
    "764": {
      "op": "PUSH4",
      "value": "0x37351953"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5115
      ],
      "op": "EQ",
      "path": "16"
    },
    "773": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "774": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5187
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31F"
    },
    "777": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5187
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "op": "NOT"
    },
    "788": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5131,
        5187
      ],
      "op": "DUP3",
      "path": "16"
    },
    "789": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5131,
        5187
      ],
      "op": "AND",
      "path": "16"
    },
    "790": {
      "op": "PUSH4",
      "value": "0x276B64B"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5131,
        5187
      ],
      "op": "EQ",
      "path": "16"
    },
    "799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5187
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "800": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5271
      ],
      "op": "DUP1",
      "path": "16"
    },
    "801": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5271
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A"
    },
    "804": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5271
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "805": {
      "op": "POP"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "op": "NOT"
    },
    "815": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5203,
        5271
      ],
      "op": "DUP3",
      "path": "16"
    },
    "816": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5203,
        5271
      ],
      "op": "AND",
      "path": "16"
    },
    "817": {
      "op": "PUSH4",
      "value": "0x5950D8E9"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5203,
        5271
      ],
      "op": "EQ",
      "path": "16"
    },
    "826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5271
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "827": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5326
      ],
      "op": "DUP1",
      "path": "16"
    },
    "828": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5326
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x355"
    },
    "831": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5326
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "op": "NOT"
    },
    "842": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5287,
        5326
      ],
      "op": "DUP3",
      "path": "16"
    },
    "843": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5287,
        5326
      ],
      "op": "AND",
      "path": "16"
    },
    "844": {
      "op": "PUSH4",
      "value": "0x541F527"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5287,
        5326
      ],
      "op": "EQ",
      "path": "16"
    },
    "853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5067,
        5326
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "854": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5050,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "855": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5050,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x381"
    },
    "858": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5050,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5358,
        5370
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 1,
      "value": "0x0"
    },
    "893": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5351,
        5370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "896": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5351,
        5370
      ],
      "op": "JUMP",
      "path": "16"
    },
    "897": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5050,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "op": "NOT"
    },
    "907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5450
      ],
      "op": "DUP3",
      "path": "16"
    },
    "908": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5450
      ],
      "op": "AND",
      "path": "16"
    },
    "909": {
      "op": "PUSH4",
      "value": "0x4AE0D101"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5450
      ],
      "op": "EQ",
      "path": "16"
    },
    "918": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5450
      ],
      "op": "DUP1",
      "path": "16"
    },
    "919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5519
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B0"
    },
    "922": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5519
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "op": "NOT"
    },
    "933": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5466,
        5519
      ],
      "op": "DUP3",
      "path": "16"
    },
    "934": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5466,
        5519
      ],
      "op": "AND",
      "path": "16"
    },
    "935": {
      "op": "PUSH4",
      "value": "0x194ED841"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5466,
        5519
      ],
      "op": "EQ",
      "path": "16"
    },
    "944": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5519
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "945": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "946": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CB"
    },
    "949": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "op": "NOT"
    },
    "960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5535,
        5580
      ],
      "op": "DUP3",
      "path": "16"
    },
    "961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5535,
        5580
      ],
      "op": "AND",
      "path": "16"
    },
    "962": {
      "op": "PUSH4",
      "value": "0x6CE48F01"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5535,
        5580
      ],
      "op": "EQ",
      "path": "16"
    },
    "971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5649
      ],
      "op": "DUP1",
      "path": "16"
    },
    "973": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5649
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "976": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5649
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5596,
        5649
      ],
      "op": "DUP3",
      "path": "16"
    },
    "988": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5596,
        5649
      ],
      "op": "AND",
      "path": "16"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x4CA418AF"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5596,
        5649
      ],
      "op": "EQ",
      "path": "16"
    },
    "998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "999": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5716
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1000": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5716
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x401"
    },
    "1003": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5716
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "op": "NOT"
    },
    "1014": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5665,
        5716
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1015": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5665,
        5716
      ],
      "op": "AND",
      "path": "16"
    },
    "1016": {
      "op": "PUSH4",
      "value": "0xC025D1A5"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5665,
        5716
      ],
      "op": "EQ",
      "path": "16"
    },
    "1025": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5716
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1026": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5793
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1027": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41C"
    },
    "1030": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5793
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "op": "NOT"
    },
    "1041": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5732,
        5793
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1042": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5732,
        5793
      ],
      "op": "AND",
      "path": "16"
    },
    "1043": {
      "op": "PUSH4",
      "value": "0x803C25FB"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5732,
        5793
      ],
      "op": "EQ",
      "path": "16"
    },
    "1052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5793
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1053": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5875
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1054": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5875
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x437"
    },
    "1057": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5875
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "op": "NOT"
    },
    "1068": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5809,
        5875
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1069": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5809,
        5875
      ],
      "op": "AND",
      "path": "16"
    },
    "1070": {
      "op": "PUSH4",
      "value": "0x323E60CB"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5809,
        5875
      ],
      "op": "EQ",
      "path": "16"
    },
    "1079": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5404,
        5875
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1080": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5387,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1081": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5387,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x463"
    },
    "1084": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5387,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5907,
        5927
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 2,
      "value": "0x0"
    },
    "1119": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5900,
        5927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "1122": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5900,
        5927
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1123": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5387,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "op": "NOT"
    },
    "1133": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6013
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1134": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6013
      ],
      "op": "AND",
      "path": "16"
    },
    "1135": {
      "op": "PUSH4",
      "value": "0x2890FB65"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6013
      ],
      "op": "EQ",
      "path": "16"
    },
    "1144": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6013
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x492"
    },
    "1148": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6076
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "op": "NOT"
    },
    "1159": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6029,
        6076
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1160": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6029,
        6076
      ],
      "op": "AND",
      "path": "16"
    },
    "1161": {
      "op": "PUSH4",
      "value": "0xB8A69455"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6029,
        6076
      ],
      "op": "EQ",
      "path": "16"
    },
    "1170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6130
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1172": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6130
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AC"
    },
    "1175": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6130
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "op": "NOT"
    },
    "1186": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6092,
        6130
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1187": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6092,
        6130
      ],
      "op": "AND",
      "path": "16"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x5E665D"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6092,
        6130
      ],
      "op": "EQ",
      "path": "16"
    },
    "1196": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6130
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6189
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C7"
    },
    "1201": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6189
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "op": "NOT"
    },
    "1212": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6146,
        6189
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1213": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6146,
        6189
      ],
      "op": "AND",
      "path": "16"
    },
    "1214": {
      "op": "PUSH4",
      "value": "0xF667F897"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6146,
        6189
      ],
      "op": "EQ",
      "path": "16"
    },
    "1223": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6189
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6247
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6247
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E2"
    },
    "1228": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6247
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "NOT"
    },
    "1239": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6205,
        6247
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1240": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6205,
        6247
      ],
      "op": "AND",
      "path": "16"
    },
    "1241": {
      "op": "PUSH4",
      "value": "0x66890643"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6205,
        6247
      ],
      "op": "EQ",
      "path": "16"
    },
    "1250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6247
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FD"
    },
    "1255": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6313
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "op": "SUB"
    },
    "1265": {
      "op": "NOT"
    },
    "1266": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6263,
        6313
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1267": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6263,
        6313
      ],
      "op": "AND",
      "path": "16"
    },
    "1268": {
      "op": "PUSH4",
      "value": "0x9C97945"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6263,
        6313
      ],
      "op": "EQ",
      "path": "16"
    },
    "1277": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5961,
        6313
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5944,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5944,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x529"
    },
    "1282": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5944,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6345,
        6359
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 3,
      "value": "0x0"
    },
    "1317": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6338,
        6359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "1320": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6338,
        6359
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1321": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5944,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "op": "NOT"
    },
    "1331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6444
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6444
      ],
      "op": "AND",
      "path": "16"
    },
    "1333": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6444
      ],
      "op": "EQ",
      "path": "16"
    },
    "1342": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6444
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6503
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x557"
    },
    "1346": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6503
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "op": "NOT"
    },
    "1357": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6460,
        6503
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1358": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6460,
        6503
      ],
      "op": "AND",
      "path": "16"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6460,
        6503
      ],
      "op": "EQ",
      "path": "16"
    },
    "1367": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6503
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6567
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6567
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x572"
    },
    "1372": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6567
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "op": "NOT"
    },
    "1383": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6519,
        6567
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1384": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6519,
        6567
      ],
      "op": "AND",
      "path": "16"
    },
    "1385": {
      "op": "PUSH4",
      "value": "0x13849CFD"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6519,
        6567
      ],
      "op": "EQ",
      "path": "16"
    },
    "1394": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6567
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58D"
    },
    "1399": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6632
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "NOT"
    },
    "1410": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6583,
        6632
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1411": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6583,
        6632
      ],
      "op": "AND",
      "path": "16"
    },
    "1412": {
      "op": "PUSH4",
      "value": "0xFAC8F09"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6583,
        6632
      ],
      "op": "EQ",
      "path": "16"
    },
    "1421": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A8"
    },
    "1426": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6702
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "NOT"
    },
    "1437": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6648,
        6702
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1438": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6648,
        6702
      ],
      "op": "AND",
      "path": "16"
    },
    "1439": {
      "op": "PUSH4",
      "value": "0x81A86855"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6648,
        6702
      ],
      "op": "EQ",
      "path": "16"
    },
    "1448": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6768
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C3"
    },
    "1453": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6768
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "op": "NOT"
    },
    "1464": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6718,
        6768
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1465": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6718,
        6768
      ],
      "op": "AND",
      "path": "16"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6718,
        6768
      ],
      "op": "EQ",
      "path": "16"
    },
    "1475": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6839
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DE"
    },
    "1480": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6839
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "op": "NOT"
    },
    "1491": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6784,
        6839
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1492": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6784,
        6839
      ],
      "op": "AND",
      "path": "16"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0x1759616B"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6784,
        6839
      ],
      "op": "EQ",
      "path": "16"
    },
    "1502": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6903
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F9"
    },
    "1507": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6903
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "op": "NOT"
    },
    "1518": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6855,
        6903
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1519": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6855,
        6903
      ],
      "op": "AND",
      "path": "16"
    },
    "1520": {
      "op": "PUSH4",
      "value": "0x7F4D701"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6855,
        6903
      ],
      "op": "EQ",
      "path": "16"
    },
    "1529": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6903
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6963
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6963
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x614"
    },
    "1534": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6963
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "op": "NOT"
    },
    "1545": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6919,
        6963
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1546": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6919,
        6963
      ],
      "op": "AND",
      "path": "16"
    },
    "1547": {
      "op": "PUSH4",
      "value": "0xE6B43B9"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6919,
        6963
      ],
      "op": "EQ",
      "path": "16"
    },
    "1556": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        6963
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7030
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62F"
    },
    "1561": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7030
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "NOT"
    },
    "1572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6979,
        7030
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1573": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6979,
        7030
      ],
      "op": "AND",
      "path": "16"
    },
    "1574": {
      "op": "PUSH4",
      "value": "0xA22CB465"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6979,
        7030
      ],
      "op": "EQ",
      "path": "16"
    },
    "1583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7096
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1585": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7096
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64A"
    },
    "1588": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7096
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "op": "NOT"
    },
    "1599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7046,
        7096
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7046,
        7096
      ],
      "op": "AND",
      "path": "16"
    },
    "1601": {
      "op": "PUSH4",
      "value": "0xE985E9C5"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7046,
        7096
      ],
      "op": "EQ",
      "path": "16"
    },
    "1610": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6393,
        7096
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6376,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1612": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6376,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x676"
    },
    "1615": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6376,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1616": {
      "op": "POP"
    },
    "1617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7128,
        7135
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 4,
      "value": "0x0"
    },
    "1650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7121,
        7135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "1653": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7121,
        7135
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1654": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6376,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "SUB"
    },
    "1663": {
      "op": "NOT"
    },
    "1664": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7214
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7214
      ],
      "op": "AND",
      "path": "16"
    },
    "1666": {
      "op": "PUSH4",
      "value": "0x6A96E86F"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7214
      ],
      "op": "EQ",
      "path": "16"
    },
    "1675": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7214
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7281
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A5"
    },
    "1679": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7281
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7230,
        7281
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1691": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7230,
        7281
      ],
      "op": "AND",
      "path": "16"
    },
    "1692": {
      "op": "PUSH4",
      "value": "0x7DB31AB9"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7230,
        7281
      ],
      "op": "EQ",
      "path": "16"
    },
    "1701": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7281
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7340
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7340
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C0"
    },
    "1706": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7340
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "op": "NOT"
    },
    "1717": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7297,
        7340
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1718": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7297,
        7340
      ],
      "op": "AND",
      "path": "16"
    },
    "1719": {
      "op": "PUSH4",
      "value": "0xA78DBFFF"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7297,
        7340
      ],
      "op": "EQ",
      "path": "16"
    },
    "1728": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7340
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1729": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DB"
    },
    "1733": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "op": "NOT"
    },
    "1744": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7356,
        7405
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1745": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7356,
        7405
      ],
      "op": "AND",
      "path": "16"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x184E0053"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7356,
        7405
      ],
      "op": "EQ",
      "path": "16"
    },
    "1755": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1756": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7463
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F6"
    },
    "1760": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7463
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "op": "NOT"
    },
    "1771": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7421,
        7463
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7421,
        7463
      ],
      "op": "AND",
      "path": "16"
    },
    "1773": {
      "op": "PUSH4",
      "value": "0x18AE40D7"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1780": {
      "op": "SHL"
    },
    "1781": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7421,
        7463
      ],
      "op": "EQ",
      "path": "16"
    },
    "1782": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7525
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7525
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x711"
    },
    "1787": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7525
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "op": "NOT"
    },
    "1798": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7479,
        7525
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7479,
        7525
      ],
      "op": "AND",
      "path": "16"
    },
    "1800": {
      "op": "PUSH4",
      "value": "0x44253849"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7479,
        7525
      ],
      "op": "EQ",
      "path": "16"
    },
    "1809": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7525
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1810": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7593
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1811": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7593
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72C"
    },
    "1814": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7593
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "op": "NOT"
    },
    "1825": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7541,
        7593
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7541,
        7593
      ],
      "op": "AND",
      "path": "16"
    },
    "1827": {
      "op": "PUSH4",
      "value": "0x5C1D975"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7541,
        7593
      ],
      "op": "EQ",
      "path": "16"
    },
    "1836": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7593
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7658
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7658
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x747"
    },
    "1841": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7658
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "op": "NOT"
    },
    "1852": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7609,
        7658
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7609,
        7658
      ],
      "op": "AND",
      "path": "16"
    },
    "1854": {
      "op": "PUSH4",
      "value": "0x6D6503D3"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7609,
        7658
      ],
      "op": "EQ",
      "path": "16"
    },
    "1863": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7658
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1864": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7736
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1865": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7736
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x762"
    },
    "1868": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7736
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "NOT"
    },
    "1879": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7674,
        7736
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1880": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7674,
        7736
      ],
      "op": "AND",
      "path": "16"
    },
    "1881": {
      "op": "PUSH4",
      "value": "0x1A05BCE1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7674,
        7736
      ],
      "op": "EQ",
      "path": "16"
    },
    "1890": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7736
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1891": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7819
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1892": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7819
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77D"
    },
    "1895": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7819
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "SUB"
    },
    "1905": {
      "op": "NOT"
    },
    "1906": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7752,
        7819
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7752,
        7819
      ],
      "op": "AND",
      "path": "16"
    },
    "1908": {
      "op": "PUSH4",
      "value": "0x3B2987B3"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7752,
        7819
      ],
      "op": "EQ",
      "path": "16"
    },
    "1917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7169,
        7819
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1918": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7152,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7152,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A9"
    },
    "1922": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7152,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7851,
        7865
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 5,
      "value": "0x0"
    },
    "1957": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7844,
        7865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "1960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7844,
        7865
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7152,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1968": {
      "op": "SHL"
    },
    "1969": {
      "op": "SUB"
    },
    "1970": {
      "op": "NOT"
    },
    "1971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        7951
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        7951
      ],
      "op": "AND",
      "path": "16"
    },
    "1973": {
      "op": "PUSH4",
      "value": "0x2D10E6EB"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        7951
      ],
      "op": "EQ",
      "path": "16"
    },
    "1982": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        7951
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1983": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "1986": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8024
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "op": "SUB"
    },
    "1996": {
      "op": "NOT"
    },
    "1997": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7967,
        8024
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7967,
        8024
      ],
      "op": "AND",
      "path": "16"
    },
    "1999": {
      "op": "PUSH4",
      "value": "0x6633AF39"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7967,
        8024
      ],
      "op": "EQ",
      "path": "16"
    },
    "2008": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2009": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8103
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2010": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8103
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F3"
    },
    "2013": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8103
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2021": {
      "op": "SHL"
    },
    "2022": {
      "op": "SUB"
    },
    "2023": {
      "op": "NOT"
    },
    "2024": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8040,
        8103
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2025": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8040,
        8103
      ],
      "op": "AND",
      "path": "16"
    },
    "2026": {
      "op": "PUSH4",
      "value": "0xE3E7CB4F"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8040,
        8103
      ],
      "op": "EQ",
      "path": "16"
    },
    "2035": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8103
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2036": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8187
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2037": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8187
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x80E"
    },
    "2040": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8187
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2048": {
      "op": "SHL"
    },
    "2049": {
      "op": "SUB"
    },
    "2050": {
      "op": "NOT"
    },
    "2051": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8119,
        8187
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8119,
        8187
      ],
      "op": "AND",
      "path": "16"
    },
    "2053": {
      "op": "PUSH4",
      "value": "0x9A600EEB"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8119,
        8187
      ],
      "op": "EQ",
      "path": "16"
    },
    "2062": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7899,
        8187
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2063": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7882,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2064": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7882,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x83A"
    },
    "2067": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7882,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8219,
        8237
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 6,
      "value": "0x0"
    },
    "2102": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8212,
        8237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "2105": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8212,
        8237
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2106": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7882,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "op": "SUB"
    },
    "2115": {
      "op": "NOT"
    },
    "2116": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8320
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8320
      ],
      "op": "AND",
      "path": "16"
    },
    "2118": {
      "op": "PUSH4",
      "value": "0x1FF7AEFD"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8320
      ],
      "op": "EQ",
      "path": "16"
    },
    "2127": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8320
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2128": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8393
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x869"
    },
    "2131": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8393
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "SUB"
    },
    "2141": {
      "op": "NOT"
    },
    "2142": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8336,
        8393
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8336,
        8393
      ],
      "op": "AND",
      "path": "16"
    },
    "2144": {
      "op": "PUSH4",
      "value": "0xE816469D"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2151": {
      "op": "SHL"
    },
    "2152": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8336,
        8393
      ],
      "op": "EQ",
      "path": "16"
    },
    "2153": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8393
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2154": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8469
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2155": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8469
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x884"
    },
    "2158": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8469
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "op": "SUB"
    },
    "2168": {
      "op": "NOT"
    },
    "2169": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8409,
        8469
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8409,
        8469
      ],
      "op": "AND",
      "path": "16"
    },
    "2171": {
      "op": "PUSH4",
      "value": "0xFB281D9"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8409,
        8469
      ],
      "op": "EQ",
      "path": "16"
    },
    "2180": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8469
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2181": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8553
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2182": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8553
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89F"
    },
    "2185": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8553
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "op": "SUB"
    },
    "2195": {
      "op": "NOT"
    },
    "2196": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8485,
        8553
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8485,
        8553
      ],
      "op": "AND",
      "path": "16"
    },
    "2198": {
      "op": "PUSH4",
      "value": "0xFA37E395"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8485,
        8553
      ],
      "op": "EQ",
      "path": "16"
    },
    "2207": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8271,
        8553
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2208": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8254,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8254,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CB"
    },
    "2212": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8254,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8585,
        8600
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 7,
      "value": "0x0"
    },
    "2247": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8578,
        8600
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "2250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8578,
        8600
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8254,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "op": "NOT"
    },
    "2261": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8674
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8674
      ],
      "op": "AND",
      "path": "16"
    },
    "2263": {
      "op": "PUSH4",
      "value": "0x8C9E4465"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8674
      ],
      "op": "EQ",
      "path": "16"
    },
    "2272": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8674
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2273": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8738
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FA"
    },
    "2276": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8738
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "SUB"
    },
    "2286": {
      "op": "NOT"
    },
    "2287": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8690,
        8738
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2288": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8690,
        8738
      ],
      "op": "AND",
      "path": "16"
    },
    "2289": {
      "op": "PUSH4",
      "value": "0x15BD0A31"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8690,
        8738
      ],
      "op": "EQ",
      "path": "16"
    },
    "2298": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8738
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2299": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8807
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2300": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x915"
    },
    "2303": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8807
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "op": "SUB"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8754,
        8807
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2315": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8754,
        8807
      ],
      "op": "AND",
      "path": "16"
    },
    "2316": {
      "op": "PUSH4",
      "value": "0x54CCEAF7"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8754,
        8807
      ],
      "op": "EQ",
      "path": "16"
    },
    "2325": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8807
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2326": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2327": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x930"
    },
    "2330": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "op": "NOT"
    },
    "2341": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8823,
        8872
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2342": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8823,
        8872
      ],
      "op": "AND",
      "path": "16"
    },
    "2343": {
      "op": "PUSH4",
      "value": "0x5B389C55"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2350": {
      "op": "SHL"
    },
    "2351": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8823,
        8872
      ],
      "op": "EQ",
      "path": "16"
    },
    "2352": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2353": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8940
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2354": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8940
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94B"
    },
    "2357": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8940
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "op": "NOT"
    },
    "2368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8888,
        8940
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8888,
        8940
      ],
      "op": "AND",
      "path": "16"
    },
    "2370": {
      "op": "PUSH4",
      "value": "0x6B6EF5CD"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8888,
        8940
      ],
      "op": "EQ",
      "path": "16"
    },
    "2379": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        8940
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2380": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9014
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2381": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9014
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x966"
    },
    "2384": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9014
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "op": "SUB"
    },
    "2394": {
      "op": "NOT"
    },
    "2395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8956,
        9014
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8956,
        9014
      ],
      "op": "AND",
      "path": "16"
    },
    "2397": {
      "op": "PUSH4",
      "value": "0x291AFDF3"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8956,
        9014
      ],
      "op": "EQ",
      "path": "16"
    },
    "2406": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9014
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2407": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9091
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9091
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x981"
    },
    "2411": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9091
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "SUB"
    },
    "2421": {
      "op": "NOT"
    },
    "2422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9030,
        9091
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9030,
        9091
      ],
      "op": "AND",
      "path": "16"
    },
    "2424": {
      "op": "PUSH4",
      "value": "0x341305AB"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9030,
        9091
      ],
      "op": "EQ",
      "path": "16"
    },
    "2433": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9091
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9162
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9162
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x99C"
    },
    "2438": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9162
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "op": "NOT"
    },
    "2449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9107,
        9162
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9107,
        9162
      ],
      "op": "AND",
      "path": "16"
    },
    "2451": {
      "op": "PUSH4",
      "value": "0xEE01436B"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9107,
        9162
      ],
      "op": "EQ",
      "path": "16"
    },
    "2460": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9162
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9237
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B7"
    },
    "2465": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9237
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "NOT"
    },
    "2476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9178,
        9237
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9178,
        9237
      ],
      "op": "AND",
      "path": "16"
    },
    "2478": {
      "op": "PUSH4",
      "value": "0x2F02337"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9178,
        9237
      ],
      "op": "EQ",
      "path": "16"
    },
    "2487": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9237
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2488": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2489": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9D2"
    },
    "2492": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9313
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "op": "NOT"
    },
    "2503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9253,
        9313
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9253,
        9313
      ],
      "op": "AND",
      "path": "16"
    },
    "2505": {
      "op": "PUSH4",
      "value": "0x50E4F223"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9253,
        9313
      ],
      "op": "EQ",
      "path": "16"
    },
    "2514": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9313
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2515": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9391
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2516": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9EC"
    },
    "2519": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9391
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "op": "NOT"
    },
    "2530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9329,
        9391
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9329,
        9391
      ],
      "op": "AND",
      "path": "16"
    },
    "2532": {
      "op": "PUSH3",
      "value": "0xD64429"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9329,
        9391
      ],
      "op": "EQ",
      "path": "16"
    },
    "2540": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9391
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2541": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9447
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2542": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9447
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA07"
    },
    "2545": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9447
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "op": "SUB"
    },
    "2555": {
      "op": "NOT"
    },
    "2556": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9407,
        9447
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9407,
        9447
      ],
      "op": "AND",
      "path": "16"
    },
    "2558": {
      "op": "PUSH4",
      "value": "0x295E6B7F"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9407,
        9447
      ],
      "op": "EQ",
      "path": "16"
    },
    "2567": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9447
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9506
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA22"
    },
    "2572": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9506
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "op": "NOT"
    },
    "2583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9463,
        9506
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9463,
        9506
      ],
      "op": "AND",
      "path": "16"
    },
    "2585": {
      "op": "PUSH4",
      "value": "0xDE1EB9A3"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9463,
        9506
      ],
      "op": "EQ",
      "path": "16"
    },
    "2594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9506
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9568
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA3D"
    },
    "2599": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9568
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "SUB"
    },
    "2609": {
      "op": "NOT"
    },
    "2610": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9522,
        9568
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9522,
        9568
      ],
      "op": "AND",
      "path": "16"
    },
    "2612": {
      "op": "PUSH4",
      "value": "0x33A8ABBB"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9522,
        9568
      ],
      "op": "EQ",
      "path": "16"
    },
    "2621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9568
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9631
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9631
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA58"
    },
    "2626": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9631
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "SUB"
    },
    "2636": {
      "op": "NOT"
    },
    "2637": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9584,
        9631
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9584,
        9631
      ],
      "op": "AND",
      "path": "16"
    },
    "2639": {
      "op": "PUSH4",
      "value": "0x28536D5F"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9584,
        9631
      ],
      "op": "EQ",
      "path": "16"
    },
    "2648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9631
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9689
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA73"
    },
    "2653": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9689
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "op": "NOT"
    },
    "2664": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9647,
        9689
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9647,
        9689
      ],
      "op": "AND",
      "path": "16"
    },
    "2666": {
      "op": "PUSH4",
      "value": "0x31572281"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9647,
        9689
      ],
      "op": "EQ",
      "path": "16"
    },
    "2675": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9757
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2677": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9757
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA8E"
    },
    "2680": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9757
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "op": "NOT"
    },
    "2691": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9705,
        9757
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2692": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9705,
        9757
      ],
      "op": "AND",
      "path": "16"
    },
    "2693": {
      "op": "PUSH4",
      "value": "0x6C346C09"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9705,
        9757
      ],
      "op": "EQ",
      "path": "16"
    },
    "2702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8634,
        9757
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8617,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2704": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8617,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xABA"
    },
    "2707": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8617,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9789,
        9801
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 8,
      "value": "0x0"
    },
    "2742": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9782,
        9801
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "2745": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9782,
        9801
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2746": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8617,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "op": "NOT"
    },
    "2756": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9882
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9882
      ],
      "op": "AND",
      "path": "16"
    },
    "2758": {
      "op": "PUSH4",
      "value": "0x3438193"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9882
      ],
      "op": "EQ",
      "path": "16"
    },
    "2767": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9882
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2768": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE9"
    },
    "2771": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9948
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2779": {
      "op": "SHL"
    },
    "2780": {
      "op": "SUB"
    },
    "2781": {
      "op": "NOT"
    },
    "2782": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9898,
        9948
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9898,
        9948
      ],
      "op": "AND",
      "path": "16"
    },
    "2784": {
      "op": "PUSH4",
      "value": "0x5DB6EAC7"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9898,
        9948
      ],
      "op": "EQ",
      "path": "16"
    },
    "2793": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9835,
        9948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2794": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9818,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9818,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB15"
    },
    "2798": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9818,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9980,
        9997
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 9,
      "value": "0x0"
    },
    "2833": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9973,
        9997
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "2836": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9973,
        9997
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9818,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "SUB"
    },
    "2846": {
      "op": "NOT"
    },
    "2847": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10078
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2848": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10078
      ],
      "op": "AND",
      "path": "16"
    },
    "2849": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10078
      ],
      "op": "EQ",
      "path": "16"
    },
    "2858": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10078
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2859": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB44"
    },
    "2862": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10144
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "SUB"
    },
    "2872": {
      "op": "NOT"
    },
    "2873": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10094,
        10144
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2874": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10094,
        10144
      ],
      "op": "AND",
      "path": "16"
    },
    "2875": {
      "op": "PUSH4",
      "value": "0xE31051A1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10094,
        10144
      ],
      "op": "EQ",
      "path": "16"
    },
    "2884": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2885": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2886": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB5F"
    },
    "2889": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2897": {
      "op": "SHL"
    },
    "2898": {
      "op": "SUB"
    },
    "2899": {
      "op": "NOT"
    },
    "2900": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10160,
        10210
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2901": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10160,
        10210
      ],
      "op": "AND",
      "path": "16"
    },
    "2902": {
      "op": "PUSH4",
      "value": "0xA11A4293"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10160,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "2911": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2912": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10276
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2913": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10276
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "2916": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10276
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2924": {
      "op": "SHL"
    },
    "2925": {
      "op": "SUB"
    },
    "2926": {
      "op": "NOT"
    },
    "2927": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10226,
        10276
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2928": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10226,
        10276
      ],
      "op": "AND",
      "path": "16"
    },
    "2929": {
      "op": "PUSH4",
      "value": "0x5284765"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2936": {
      "op": "SHL"
    },
    "2937": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10226,
        10276
      ],
      "op": "EQ",
      "path": "16"
    },
    "2938": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10276
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2939": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10340
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2940": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10340
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB95"
    },
    "2943": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10340
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "op": "SUB"
    },
    "2953": {
      "op": "NOT"
    },
    "2954": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10292,
        10340
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2955": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10292,
        10340
      ],
      "op": "AND",
      "path": "16"
    },
    "2956": {
      "op": "PUSH4",
      "value": "0x315CB2B9"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10292,
        10340
      ],
      "op": "EQ",
      "path": "16"
    },
    "2965": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10340
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2966": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10408
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2967": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB0"
    },
    "2970": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10408
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "op": "NOT"
    },
    "2981": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10356,
        10408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2982": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10356,
        10408
      ],
      "op": "AND",
      "path": "16"
    },
    "2983": {
      "op": "PUSH4",
      "value": "0x2C90B94D"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10356,
        10408
      ],
      "op": "EQ",
      "path": "16"
    },
    "2992": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2993": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10473
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2994": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10473
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBCB"
    },
    "2997": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10473
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "op": "NOT"
    },
    "3008": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10424,
        10473
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3009": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10424,
        10473
      ],
      "op": "AND",
      "path": "16"
    },
    "3010": {
      "op": "PUSH4",
      "value": "0x9CE3C19"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10424,
        10473
      ],
      "op": "EQ",
      "path": "16"
    },
    "3019": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10473
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3020": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10551
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3021": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBE6"
    },
    "3024": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10551
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "op": "SUB"
    },
    "3034": {
      "op": "NOT"
    },
    "3035": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10489,
        10551
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3036": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10489,
        10551
      ],
      "op": "AND",
      "path": "16"
    },
    "3037": {
      "op": "PUSH4",
      "value": "0x54EBDE29"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10489,
        10551
      ],
      "op": "EQ",
      "path": "16"
    },
    "3046": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3047": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3048": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC01"
    },
    "3051": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10628
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3052": {
      "op": "POP"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "op": "SUB"
    },
    "3061": {
      "op": "NOT"
    },
    "3062": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10567,
        10628
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3063": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10567,
        10628
      ],
      "op": "AND",
      "path": "16"
    },
    "3064": {
      "op": "PUSH4",
      "value": "0x98DCBC23"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10567,
        10628
      ],
      "op": "EQ",
      "path": "16"
    },
    "3073": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10628
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3074": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3075": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC1C"
    },
    "3078": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10702
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3079": {
      "op": "POP"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "op": "NOT"
    },
    "3089": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10644,
        10702
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3090": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10644,
        10702
      ],
      "op": "AND",
      "path": "16"
    },
    "3091": {
      "op": "PUSH4",
      "value": "0x33EABD1D"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10644,
        10702
      ],
      "op": "EQ",
      "path": "16"
    },
    "3100": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3101": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3102": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC37"
    },
    "3105": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3106": {
      "op": "POP"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "op": "NOT"
    },
    "3116": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10718,
        10783
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10718,
        10783
      ],
      "op": "AND",
      "path": "16"
    },
    "3118": {
      "op": "PUSH4",
      "value": "0x413F2C5F"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10718,
        10783
      ],
      "op": "EQ",
      "path": "16"
    },
    "3127": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3128": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10865
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3129": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC52"
    },
    "3132": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10865
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "op": "NOT"
    },
    "3143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10799,
        10865
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3144": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10799,
        10865
      ],
      "op": "AND",
      "path": "16"
    },
    "3145": {
      "op": "PUSH4",
      "value": "0xD0DA867"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10799,
        10865
      ],
      "op": "EQ",
      "path": "16"
    },
    "3154": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10865
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3155": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10944
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3156": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10944
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC6D"
    },
    "3159": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10944
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3160": {
      "op": "POP"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "op": "NOT"
    },
    "3170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10881,
        10944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10881,
        10944
      ],
      "op": "AND",
      "path": "16"
    },
    "3172": {
      "op": "PUSH4",
      "value": "0x353ABC5D"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10881,
        10944
      ],
      "op": "EQ",
      "path": "16"
    },
    "3181": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        10944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3182": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11027
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3183": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11027
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC88"
    },
    "3186": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11027
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "op": "SUB"
    },
    "3196": {
      "op": "NOT"
    },
    "3197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10960,
        11027
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10960,
        11027
      ],
      "op": "AND",
      "path": "16"
    },
    "3199": {
      "op": "PUSH4",
      "value": "0xFA17B5F1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10960,
        11027
      ],
      "op": "EQ",
      "path": "16"
    },
    "3208": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11027
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11092
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3210": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11092
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA3"
    },
    "3213": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11092
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "op": "SUB"
    },
    "3223": {
      "op": "NOT"
    },
    "3224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11043,
        11092
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11043,
        11092
      ],
      "op": "AND",
      "path": "16"
    },
    "3226": {
      "op": "PUSH4",
      "value": "0x113AA8B1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3233": {
      "op": "SHL"
    },
    "3234": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11043,
        11092
      ],
      "op": "EQ",
      "path": "16"
    },
    "3235": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11092
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3236": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11147
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3237": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11147
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBE"
    },
    "3240": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11147
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "op": "NOT"
    },
    "3251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11108,
        11147
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11108,
        11147
      ],
      "op": "AND",
      "path": "16"
    },
    "3253": {
      "op": "PUSH4",
      "value": "0x1B2CE7F3"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11108,
        11147
      ],
      "op": "EQ",
      "path": "16"
    },
    "3262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11147
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3263": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11209
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3264": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11209
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD9"
    },
    "3267": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11209
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "op": "NOT"
    },
    "3278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11163,
        11209
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11163,
        11209
      ],
      "op": "AND",
      "path": "16"
    },
    "3280": {
      "op": "PUSH4",
      "value": "0x278F7943"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11163,
        11209
      ],
      "op": "EQ",
      "path": "16"
    },
    "3289": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10031,
        11209
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3290": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10014,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3291": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10014,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD05"
    },
    "3294": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10014,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11241,
        11251
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 10,
      "value": "0x0"
    },
    "3329": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11234,
        11251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "3332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11234,
        11251
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3333": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10014,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "op": "NOT"
    },
    "3343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11338
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3344": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11338
      ],
      "op": "AND",
      "path": "16"
    },
    "3345": {
      "op": "PUSH4",
      "value": "0x7D6DBFF7"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3352": {
      "op": "SHL"
    },
    "3353": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11338
      ],
      "op": "EQ",
      "path": "16"
    },
    "3354": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11338
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3355": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD34"
    },
    "3358": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11412
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3366": {
      "op": "SHL"
    },
    "3367": {
      "op": "SUB"
    },
    "3368": {
      "op": "NOT"
    },
    "3369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11354,
        11412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3370": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11354,
        11412
      ],
      "op": "AND",
      "path": "16"
    },
    "3371": {
      "op": "PUSH4",
      "value": "0x6D7A00EB"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3378": {
      "op": "SHL"
    },
    "3379": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11354,
        11412
      ],
      "op": "EQ",
      "path": "16"
    },
    "3380": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11412
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3381": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11479
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3382": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11479
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD4F"
    },
    "3385": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11479
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "op": "NOT"
    },
    "3396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11428,
        11479
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3397": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11428,
        11479
      ],
      "op": "AND",
      "path": "16"
    },
    "3398": {
      "op": "PUSH4",
      "value": "0x7F23D4F9"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11428,
        11479
      ],
      "op": "EQ",
      "path": "16"
    },
    "3407": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11479
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11544
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3409": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD6A"
    },
    "3412": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11544
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11495,
        11544
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3424": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11495,
        11544
      ],
      "op": "AND",
      "path": "16"
    },
    "3425": {
      "op": "PUSH4",
      "value": "0x239CEC8F"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11495,
        11544
      ],
      "op": "EQ",
      "path": "16"
    },
    "3434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11544
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3436": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD85"
    },
    "3439": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11614
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3447": {
      "op": "SHL"
    },
    "3448": {
      "op": "SUB"
    },
    "3449": {
      "op": "NOT"
    },
    "3450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11560,
        11614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3451": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11560,
        11614
      ],
      "op": "AND",
      "path": "16"
    },
    "3452": {
      "op": "PUSH4",
      "value": "0x12ADC47B"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11560,
        11614
      ],
      "op": "EQ",
      "path": "16"
    },
    "3461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11285,
        11614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11268,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3463": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11268,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB1"
    },
    "3466": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11268,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3467": {
      "op": "POP"
    },
    "3468": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11646,
        11654
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 11,
      "value": "0x0"
    },
    "3501": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11639,
        11654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "3504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11639,
        11654
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3505": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11268,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "op": "SUB"
    },
    "3514": {
      "op": "NOT"
    },
    "3515": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11747
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3516": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11747
      ],
      "op": "AND",
      "path": "16"
    },
    "3517": {
      "op": "PUSH4",
      "value": "0x6A09A2A3"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11747
      ],
      "op": "EQ",
      "path": "16"
    },
    "3526": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11747
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3527": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11829
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE0"
    },
    "3530": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11829
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "op": "NOT"
    },
    "3541": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        11829
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3542": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        11829
      ],
      "op": "AND",
      "path": "16"
    },
    "3543": {
      "op": "PUSH4",
      "value": "0x8355E895"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        11829
      ],
      "op": "EQ",
      "path": "16"
    },
    "3552": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11829
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3553": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11911
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3554": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11911
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDFB"
    },
    "3557": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11911
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "op": "NOT"
    },
    "3568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11845,
        11911
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11845,
        11911
      ],
      "op": "AND",
      "path": "16"
    },
    "3570": {
      "op": "PUSH4",
      "value": "0x94614DF"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11845,
        11911
      ],
      "op": "EQ",
      "path": "16"
    },
    "3579": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11911
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11992
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3581": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11992
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE16"
    },
    "3584": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11992
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3592": {
      "op": "SHL"
    },
    "3593": {
      "op": "SUB"
    },
    "3594": {
      "op": "NOT"
    },
    "3595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11927,
        11992
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11927,
        11992
      ],
      "op": "AND",
      "path": "16"
    },
    "3597": {
      "op": "PUSH4",
      "value": "0x4BEB6D97"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11927,
        11992
      ],
      "op": "EQ",
      "path": "16"
    },
    "3606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        11992
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3607": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3608": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12065
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE31"
    },
    "3611": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12065
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "op": "SUB"
    },
    "3621": {
      "op": "NOT"
    },
    "3622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12008,
        12065
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12008,
        12065
      ],
      "op": "AND",
      "path": "16"
    },
    "3624": {
      "op": "PUSH4",
      "value": "0xC52C43E1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12008,
        12065
      ],
      "op": "EQ",
      "path": "16"
    },
    "3633": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12065
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3634": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3635": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4C"
    },
    "3638": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12132
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "NOT"
    },
    "3649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12081,
        12132
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12081,
        12132
      ],
      "op": "AND",
      "path": "16"
    },
    "3651": {
      "op": "PUSH4",
      "value": "0x5953C77B"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12081,
        12132
      ],
      "op": "EQ",
      "path": "16"
    },
    "3660": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3661": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3662": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE67"
    },
    "3665": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3673": {
      "op": "SHL"
    },
    "3674": {
      "op": "SUB"
    },
    "3675": {
      "op": "NOT"
    },
    "3676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12148,
        12208
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3677": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12148,
        12208
      ],
      "op": "AND",
      "path": "16"
    },
    "3678": {
      "op": "PUSH4",
      "value": "0x1F0750C1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3685": {
      "op": "SHL"
    },
    "3686": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12148,
        12208
      ],
      "op": "EQ",
      "path": "16"
    },
    "3687": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3688": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3689": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE82"
    },
    "3692": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3693": {
      "op": "POP"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "NOT"
    },
    "3703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12224,
        12288
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3704": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12224,
        12288
      ],
      "op": "AND",
      "path": "16"
    },
    "3705": {
      "op": "PUSH4",
      "value": "0xBAC9E8B1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12224,
        12288
      ],
      "op": "EQ",
      "path": "16"
    },
    "3714": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3715": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12364
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3716": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12364
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE9D"
    },
    "3719": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12364
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "op": "SUB"
    },
    "3729": {
      "op": "NOT"
    },
    "3730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12304,
        12364
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3731": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12304,
        12364
      ],
      "op": "AND",
      "path": "16"
    },
    "3732": {
      "op": "PUSH4",
      "value": "0xAAAE47B5"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3739": {
      "op": "SHL"
    },
    "3740": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12304,
        12364
      ],
      "op": "EQ",
      "path": "16"
    },
    "3741": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12364
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3742": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12444
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3743": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB8"
    },
    "3746": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "op": "SUB"
    },
    "3756": {
      "op": "NOT"
    },
    "3757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12380,
        12444
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3758": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12380,
        12444
      ],
      "op": "AND",
      "path": "16"
    },
    "3759": {
      "op": "PUSH4",
      "value": "0x416A1587"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3766": {
      "op": "SHL"
    },
    "3767": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12380,
        12444
      ],
      "op": "EQ",
      "path": "16"
    },
    "3768": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3769": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12525
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3770": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12525
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xED3"
    },
    "3773": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12525
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3781": {
      "op": "SHL"
    },
    "3782": {
      "op": "SUB"
    },
    "3783": {
      "op": "NOT"
    },
    "3784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12460,
        12525
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3785": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12460,
        12525
      ],
      "op": "AND",
      "path": "16"
    },
    "3786": {
      "op": "PUSH4",
      "value": "0x1BAEFC5D"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12460,
        12525
      ],
      "op": "EQ",
      "path": "16"
    },
    "3795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11688,
        12525
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3796": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11671,
        12755
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3797": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11671,
        12755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEFF"
    },
    "3800": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11671,
        12755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12557,
        12574
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 12,
      "value": "0x0"
    },
    "3835": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12550,
        12574
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF22"
    },
    "3838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12550,
        12574
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3839": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11671,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12739,
        12744
      ],
      "op": "PUSH32",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3874": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11671,
        12755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3875": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3876": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3877": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4965,
        12761
      ],
      "op": "POP",
      "path": "16"
    },
    "3878": {
      "fn": "Router.getRouterImplementation",
      "jump": "o",
      "offset": [
        4965,
        12761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3879": {
      "fn": "Router._delegate",
      "offset": [
        12941,
        13911
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3880": {
      "fn": "Router._delegate",
      "offset": [
        13326,
        13340
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "3881": {
      "fn": "Router._delegate",
      "offset": [
        13323,
        13324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3883": {
      "fn": "Router._delegate",
      "offset": [
        13320,
        13321
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3884": {
      "fn": "Router._delegate",
      "offset": [
        13307,
        13341
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "3885": {
      "fn": "Router._delegate",
      "offset": [
        13540,
        13541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3887": {
      "fn": "Router._delegate",
      "offset": [
        13537,
        13538
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3888": {
      "fn": "Router._delegate",
      "offset": [
        13521,
        13535
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "3889": {
      "fn": "Router._delegate",
      "offset": [
        13518,
        13519
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3891": {
      "fn": "Router._delegate",
      "offset": [
        13502,
        13516
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3892": {
      "fn": "Router._delegate",
      "offset": [
        13495,
        13500
      ],
      "op": "GAS",
      "path": "16"
    },
    "3893": {
      "fn": "Router._delegate",
      "offset": [
        13482,
        13542
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "3894": {
      "fn": "Router._delegate",
      "offset": [
        13616,
        13632
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3895": {
      "fn": "Router._delegate",
      "offset": [
        13613,
        13614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3897": {
      "fn": "Router._delegate",
      "offset": [
        13610,
        13611
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3898": {
      "fn": "Router._delegate",
      "offset": [
        13595,
        13633
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3899": {
      "fn": "Router._delegate",
      "offset": [
        13654,
        13660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3900": {
      "fn": "Router._delegate",
      "offset": [
        13729,
        13803
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3901": {
      "fn": "Router._delegate",
      "offset": [
        13729,
        13803
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3902": {
      "fn": "Router._delegate",
      "offset": [
        13729,
        13803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF46"
    },
    "3905": {
      "fn": "Router._delegate",
      "offset": [
        13729,
        13803
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3906": {
      "fn": "Router._delegate",
      "offset": [
        13860,
        13876
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3907": {
      "fn": "Router._delegate",
      "offset": [
        13857,
        13858
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3909": {
      "fn": "Router._delegate",
      "offset": [
        13850,
        13877
      ],
      "op": "RETURN",
      "path": "16"
    },
    "3910": {
      "fn": "Router._delegate",
      "offset": [
        13729,
        13803
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3911": {
      "fn": "Router._delegate",
      "offset": [
        13768,
        13784
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3912": {
      "fn": "Router._delegate",
      "offset": [
        13765,
        13766
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3914": {
      "fn": "Router._delegate",
      "offset": [
        13758,
        13785
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3915": {
      "offset": [
        1427,
        1457
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3916": {
      "fn": "Router._delegate",
      "offset": [
        1427,
        1457
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3949": {
      "fn": "Router._delegate",
      "offset": [
        1427,
        1457
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3950": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1427,
        1457
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3951": {
      "offset": [
        1386,
        1421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3952": {
      "fn": "Router._delegate",
      "offset": [
        1386,
        1421
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3985": {
      "fn": "Router._delegate",
      "offset": [
        1386,
        1421
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3986": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1386,
        1421
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3987": {
      "offset": [
        1511,
        1550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3988": {
      "fn": "Router._delegate",
      "offset": [
        1511,
        1550
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4021": {
      "fn": "Router._delegate",
      "offset": [
        1511,
        1550
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4022": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1511,
        1550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4023": {
      "offset": [
        1731,
        1771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4024": {
      "fn": "Router._delegate",
      "offset": [
        1731,
        1771
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4057": {
      "fn": "Router._delegate",
      "offset": [
        1731,
        1771
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4058": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1731,
        1771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4059": {
      "offset": [
        1060,
        1088
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4060": {
      "fn": "Router._delegate",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x2"
    },
    "4062": {
      "fn": "Router._delegate",
      "offset": [
        1060,
        1088
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4069": {
      "op": "SHL"
    },
    "4070": {
      "op": "SUB"
    },
    "4071": {
      "offset": [
        1060,
        1088
      ],
      "op": "AND",
      "path": "49"
    },
    "4072": {
      "fn": "Router._delegate",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4073": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1060,
        1088
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4074": {
      "offset": [
        1682,
        1725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4075": {
      "fn": "Router._delegate",
      "offset": [
        1682,
        1725
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4108": {
      "fn": "Router._delegate",
      "offset": [
        1682,
        1725
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4109": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1682,
        1725
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4110": {
      "offset": [
        1644,
        1676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4111": {
      "fn": "Router._delegate",
      "offset": [
        1644,
        1676
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4144": {
      "fn": "Router._delegate",
      "offset": [
        1644,
        1676
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4145": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1644,
        1676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4146": {
      "offset": [
        1812,
        1845
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4147": {
      "fn": "Router._delegate",
      "offset": [
        1812,
        1845
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4180": {
      "fn": "Router._delegate",
      "offset": [
        1812,
        1845
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4181": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1812,
        1845
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4182": {
      "offset": [
        1599,
        1638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4183": {
      "fn": "Router._delegate",
      "offset": [
        1599,
        1638
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4216": {
      "fn": "Router._delegate",
      "offset": [
        1599,
        1638
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4217": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1599,
        1638
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4218": {
      "offset": [
        1556,
        1593
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4219": {
      "fn": "Router._delegate",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4252": {
      "fn": "Router._delegate",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4253": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1556,
        1593
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4254": {
      "offset": [
        1851,
        1893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4255": {
      "fn": "Router._delegate",
      "offset": [
        1851,
        1893
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4288": {
      "fn": "Router._delegate",
      "offset": [
        1851,
        1893
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4289": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1851,
        1893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4290": {
      "offset": [
        943,
        969
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4291": {
      "fn": "Router._delegate",
      "offset": [
        943,
        969
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "4293": {
      "fn": "Router._delegate",
      "offset": [
        943,
        969
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "offset": [
        943,
        969
      ],
      "op": "AND",
      "path": "49"
    },
    "4303": {
      "fn": "Router._delegate",
      "offset": [
        943,
        969
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4304": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        943,
        969
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4305": {
      "offset": [
        832,
        852
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4306": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "4308": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "4309": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "PUSH5",
      "path": "49",
      "value": "0x100000000"
    },
    "4315": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4316": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "DIV",
      "path": "49"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4323": {
      "op": "SHL"
    },
    "4324": {
      "op": "SUB"
    },
    "4325": {
      "offset": [
        832,
        852
      ],
      "op": "AND",
      "path": "49"
    },
    "4326": {
      "fn": "Router._delegate",
      "offset": [
        832,
        852
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4327": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        832,
        852
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4328": {
      "offset": [
        1777,
        1806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4329": {
      "fn": "Router._delegate",
      "offset": [
        1777,
        1806
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4362": {
      "fn": "Router._delegate",
      "offset": [
        1777,
        1806
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4363": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1777,
        1806
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4364": {
      "offset": [
        1899,
        1944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4365": {
      "fn": "Router._delegate",
      "offset": [
        1899,
        1944
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4398": {
      "fn": "Router._delegate",
      "offset": [
        1899,
        1944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4399": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1899,
        1944
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4400": {
      "fn": "Router.initialize",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4401": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3545
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 14
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "fn": "Router.initialize",
      "offset": [
        3549,
        3557
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4443": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3557
      ],
      "op": "AND",
      "path": "16"
    },
    "4444": {
      "branch": 118,
      "fn": "Router.initialize",
      "offset": [
        3535,
        3557
      ],
      "op": "EQ",
      "path": "16"
    },
    "4445": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3576
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4446": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3576
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4447": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3576
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1172"
    },
    "4450": {
      "branch": 118,
      "fn": "Router.initialize",
      "offset": [
        3535,
        3576
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4454": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4455": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "4460": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4461": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "DIV",
      "path": "16"
    },
    "4462": {
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4464": {
      "branch": 119,
      "fn": "Router.initialize",
      "offset": [
        3562,
        3576
      ],
      "op": "AND",
      "path": "16"
    },
    "4465": {
      "fn": "Router.initialize",
      "offset": [
        3561,
        3576
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4466": {
      "fn": "Router.initialize",
      "offset": [
        3535,
        3576
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4467": {
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x117B"
    },
    "4470": {
      "branch": 119,
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4471": {
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4473": {
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4474": {
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4475": {
      "fn": "Router.initialize",
      "offset": [
        3527,
        3577
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4476": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3716
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x0"
    },
    "4478": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4479": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4480": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4490": {
      "op": "SHL"
    },
    "4491": {
      "op": "SUB"
    },
    "4492": {
      "op": "NOT"
    },
    "4493": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "AND",
      "path": "16"
    },
    "4494": {
      "fn": "Router.initialize",
      "offset": [
        3719,
        3729
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4495": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "4501": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "MUL",
      "path": "16"
    },
    "4502": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "OR",
      "path": "16"
    },
    "4503": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4504": {
      "fn": "Router.initialize",
      "offset": [
        3711,
        3729
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4505": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4507": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4508": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4509": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "4511": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4512": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "ADD",
      "path": "16"
    },
    "4513": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4514": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4521": {
      "op": "SHL"
    },
    "4522": {
      "op": "SUB"
    },
    "4523": {
      "fn": "Router.initialize",
      "offset": [
        4100,
        4104
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4556": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4557": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "AND",
      "path": "16"
    },
    "4558": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4559": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4560": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4562": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4563": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "ADD",
      "path": "16"
    },
    "4564": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4565": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4566": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4567": {
      "fn": "Router.initialize",
      "offset": [
        3939,
        3949
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4600": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        3963
      ],
      "op": "AND",
      "path": "16"
    },
    "4601": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        3963
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4602": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4609": {
      "op": "SHL"
    },
    "4610": {
      "fn": "Router.initialize",
      "offset": [
        4025,
        4065
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4611": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4612": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4613": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "ADD",
      "path": "16"
    },
    "4614": {
      "fn": "Router.initialize",
      "offset": [
        4113,
        4127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4616": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4617": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4618": {
      "offset": [
        223,
        224
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "4620": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4622": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4623": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4624": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "ADD",
      "path": "16"
    },
    "4625": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4626": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4627": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4628": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4631": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4633": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4634": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4635": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "ADD",
      "path": "16"
    },
    "4636": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4637": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4638": {
      "fn": "Router.initialize",
      "offset": [
        4087,
        4162
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4639": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4640": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4641": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "4643": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4644": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "ADD",
      "path": "16"
    },
    "4645": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4646": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4647": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4648": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4649": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4650": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4651": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4652": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "ADD",
      "path": "16"
    },
    "4653": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4654": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4655": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4656": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "ADD",
      "path": "16"
    },
    "4657": {
      "fn": "Router.initialize",
      "offset": [
        4266,
        4281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "4659": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4660": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4661": {
      "offset": [
        674,
        676
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x12"
    },
    "4663": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4665": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4666": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "ADD",
      "path": "16"
    },
    "4667": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4670": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4672": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4673": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4674": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "ADD",
      "path": "16"
    },
    "4675": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4676": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4677": {
      "fn": "Router.initialize",
      "offset": [
        4234,
        4315
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4678": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4679": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4680": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1261"
    },
    "4683": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4684": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4685": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4686": {
      "op": "SWAP1"
    },
    "4687": {
      "op": "DUP2"
    },
    "4688": {
      "op": "SWAP1"
    },
    "4689": {
      "fn": "Router.initialize",
      "offset": [
        4396,
        4399
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x85"
    },
    "4691": {
      "fn": "Router.initialize",
      "offset": [
        4396,
        4399
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4692": {
      "fn": "Router.initialize",
      "offset": [
        4456,
        4458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4B"
    },
    "4694": {
      "fn": "Router.initialize",
      "offset": [
        4456,
        4458
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4695": {
      "fn": "Router.initialize",
      "offset": [
        4496,
        4499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6C"
    },
    "4697": {
      "fn": "Router.initialize",
      "offset": [
        4496,
        4499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4698": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4700": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "ADD",
      "path": "16"
    },
    "4701": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A9"
    },
    "4704": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3981,
        4545
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4705": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4706": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4708": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4709": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4712": {
      "op": "NOT"
    },
    "4713": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4714": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4715": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SUB",
      "path": "16"
    },
    "4716": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "ADD",
      "path": "16"
    },
    "4717": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4718": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4719": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4720": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4721": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4722": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4724": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4725": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "ADD",
      "path": "16"
    },
    "4726": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4727": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4734": {
      "op": "SHL"
    },
    "4735": {
      "op": "SUB"
    },
    "4736": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "AND",
      "path": "16"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4743": {
      "op": "SHL"
    },
    "4744": {
      "op": "SUB"
    },
    "4745": {
      "op": "NOT"
    },
    "4746": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4747": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4748": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "AND",
      "path": "16"
    },
    "4749": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4750": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4751": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4752": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "OR",
      "path": "16"
    },
    "4753": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4754": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4755": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4756": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4757": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4758": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x129F"
    },
    "4761": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4762": {
      "fn": "Router.initialize",
      "offset": [
        3981,
        4545
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4763": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x145C"
    },
    "4766": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4767": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4768": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4770": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4772": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4773": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4774": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4775": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SUB",
      "path": "16"
    },
    "4776": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4777": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4778": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "GAS",
      "path": "16"
    },
    "4779": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "4780": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4781": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4782": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4783": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4784": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4785": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4787": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4788": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "EQ",
      "path": "16"
    },
    "4789": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12DA"
    },
    "4792": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4793": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4795": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4796": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4797": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4798": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4800": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "NOT",
      "path": "16"
    },
    "4801": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4803": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4804": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "ADD",
      "path": "16"
    },
    "4805": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "AND",
      "path": "16"
    },
    "4806": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4807": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "ADD",
      "path": "16"
    },
    "4808": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4810": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4811": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4812": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4813": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4814": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4815": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4817": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4819": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4820": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "ADD",
      "path": "16"
    },
    "4821": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4822": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12DF"
    },
    "4825": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4826": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4827": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4829": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4830": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4831": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4832": {
      "fn": "Router.initialize",
      "offset": [
        3931,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4833": {
      "fn": "Router.initialize",
      "offset": [
        3901,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4834": {
      "fn": "Router.initialize",
      "offset": [
        3901,
        4559
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4835": {
      "fn": "Router.initialize",
      "offset": [
        3901,
        4559
      ],
      "op": "POP",
      "path": "16"
    },
    "4836": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        4577,
        4583
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 16
    },
    "4837": {
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12ED"
    },
    "4840": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4841": {
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4843": {
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4844": {
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4845": {
      "fn": "Router.initialize",
      "offset": [
        4569,
        4584
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4600
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x0"
    },
    "4849": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4850": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4860": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4861": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "AND",
      "path": "16"
    },
    "4862": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "4868": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "MUL",
      "path": "16"
    },
    "4869": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4879": {
      "op": "SHL"
    },
    "4880": {
      "op": "SUB"
    },
    "4881": {
      "op": "NOT"
    },
    "4882": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4883": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4884": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "AND",
      "path": "16"
    },
    "4885": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "OR",
      "path": "16"
    },
    "4886": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4887": {
      "fn": "Router.initialize",
      "offset": [
        4595,
        4609
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4890": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 18
    },
    "4891": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4892": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4893": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4894": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "AND",
      "path": "16"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "op": "NOT"
    },
    "4904": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4905": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4906": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "AND",
      "path": "16"
    },
    "4907": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "OR",
      "path": "16"
    },
    "4908": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4909": {
      "fn": "Router.initialize",
      "offset": [
        4693,
        4719
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4910": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4742
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x2"
    },
    "4912": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4913": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4914": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4915": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4916": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4917": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "AND",
      "path": "16"
    },
    "4918": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4919": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "AND",
      "path": "16"
    },
    "4920": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "OR",
      "path": "16"
    },
    "4921": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4922": {
      "fn": "Router.initialize",
      "offset": [
        4729,
        4759
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4923": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        3373,
        4799
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4924": {
      "offset": [
        1950,
        1987
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4925": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4958": {
      "fn": "Router.initialize",
      "offset": [
        1950,
        1987
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4959": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1950,
        1987
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4960": {
      "offset": [
        1463,
        1505
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4961": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "4994": {
      "fn": "Router.initialize",
      "offset": [
        1463,
        1505
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4995": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1463,
        1505
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4996": {
      "op": "JUMPDEST"
    },
    "4997": {
      "op": "DUP1"
    },
    "4998": {
      "op": "CALLDATALOAD"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "SUB"
    },
    "5007": {
      "op": "DUP2"
    },
    "5008": {
      "op": "AND"
    },
    "5009": {
      "op": "DUP2"
    },
    "5010": {
      "op": "EQ"
    },
    "5011": {
      "op": "PUSH2",
      "value": "0xF22"
    },
    "5014": {
      "op": "JUMPI"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5017": {
      "op": "DUP1"
    },
    "5018": {
      "op": "REVERT"
    },
    "5019": {
      "op": "JUMPDEST"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5022": {
      "op": "DUP1"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5027": {
      "op": "DUP5"
    },
    "5028": {
      "op": "DUP7"
    },
    "5029": {
      "op": "SUB"
    },
    "5030": {
      "op": "SLT"
    },
    "5031": {
      "op": "ISZERO"
    },
    "5032": {
      "op": "PUSH2",
      "value": "0x13AF"
    },
    "5035": {
      "op": "JUMPI"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "DUP4"
    },
    "5038": {
      "op": "REVERT"
    },
    "5039": {
      "op": "JUMPDEST"
    },
    "5040": {
      "op": "PUSH2",
      "value": "0x13B8"
    },
    "5043": {
      "op": "DUP5"
    },
    "5044": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "5047": {
      "jump": "i",
      "op": "JUMP"
    },
    "5048": {
      "op": "JUMPDEST"
    },
    "5049": {
      "op": "SWAP3"
    },
    "5050": {
      "op": "POP"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5056": {
      "op": "DUP6"
    },
    "5057": {
      "op": "ADD"
    },
    "5058": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "5061": {
      "jump": "i",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "SWAP2"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "PUSH2",
      "value": "0x13D4"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5070": {
      "op": "DUP6"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "PUSH2",
      "value": "0x1384"
    },
    "5075": {
      "jump": "i",
      "op": "JUMP"
    },
    "5076": {
      "op": "JUMPDEST"
    },
    "5077": {
      "op": "SWAP1"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "op": "SWAP3"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "op": "SWAP3"
    },
    "5082": {
      "op": "POP"
    },
    "5083": {
      "op": "SWAP3"
    },
    "5084": {
      "jump": "o",
      "op": "JUMP"
    },
    "5085": {
      "op": "JUMPDEST"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5090": {
      "op": "DUP3"
    },
    "5091": {
      "op": "DUP5"
    },
    "5092": {
      "op": "SUB"
    },
    "5093": {
      "op": "SLT"
    },
    "5094": {
      "op": "ISZERO"
    },
    "5095": {
      "op": "PUSH2",
      "value": "0x13EE"
    },
    "5098": {
      "op": "JUMPI"
    },
    "5099": {
      "op": "DUP1"
    },
    "5100": {
      "op": "DUP2"
    },
    "5101": {
      "op": "REVERT"
    },
    "5102": {
      "op": "JUMPDEST"
    },
    "5103": {
      "op": "DUP2"
    },
    "5104": {
      "op": "CALLDATALOAD"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "op": "NOT"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "AND"
    },
    "5116": {
      "op": "DUP2"
    },
    "5117": {
      "op": "EQ"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x1405"
    },
    "5121": {
      "op": "JUMPI"
    },
    "5122": {
      "op": "DUP2"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "REVERT"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "SWAP4"
    },
    "5127": {
      "op": "SWAP3"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "POP"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "jump": "o",
      "op": "JUMP"
    },
    "5132": {
      "op": "JUMPDEST"
    },
    "5133": {
      "op": "DUP1"
    },
    "5134": {
      "op": "MLOAD"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "SUB"
    },
    "5143": {
      "op": "AND"
    },
    "5144": {
      "op": "DUP3"
    },
    "5145": {
      "op": "MSTORE"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5148": {
      "op": "DUP1"
    },
    "5149": {
      "op": "DUP3"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "op": "MLOAD"
    },
    "5152": {
      "op": "ISZERO"
    },
    "5153": {
      "op": "ISZERO"
    },
    "5154": {
      "op": "SWAP1"
    },
    "5155": {
      "op": "DUP4"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5160": {
      "op": "DUP2"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "MLOAD"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5165": {
      "op": "DUP2"
    },
    "5166": {
      "op": "LT"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x1434"
    },
    "5170": {
      "op": "JUMPI"
    },
    "5171": {
      "op": "INVALID"
    },
    "5172": {
      "op": "JUMPDEST"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5175": {
      "op": "DUP4"
    },
    "5176": {
      "op": "ADD"
    },
    "5177": {
      "op": "MSTORE"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5180": {
      "op": "DUP2"
    },
    "5181": {
      "op": "DUP2"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "op": "MLOAD"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5186": {
      "op": "AND"
    },
    "5187": {
      "op": "SWAP1"
    },
    "5188": {
      "op": "DUP4"
    },
    "5189": {
      "op": "ADD"
    },
    "5190": {
      "op": "MSTORE"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5193": {
      "op": "SWAP1"
    },
    "5194": {
      "op": "DUP2"
    },
    "5195": {
      "op": "ADD"
    },
    "5196": {
      "op": "MLOAD"
    },
    "5197": {
      "op": "PUSH9",
      "value": "0xFFFFFFFFFFFFFFFFFF"
    },
    "5207": {
      "op": "AND"
    },
    "5208": {
      "op": "SWAP2"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "MSTORE"
    },
    "5211": {
      "jump": "o",
      "op": "JUMP"
    },
    "5212": {
      "op": "JUMPDEST"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5215": {
      "op": "DUP3"
    },
    "5216": {
      "op": "MLOAD"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "JUMPDEST"
    },
    "5219": {
      "op": "DUP2"
    },
    "5220": {
      "op": "DUP2"
    },
    "5221": {
      "op": "LT"
    },
    "5222": {
      "op": "ISZERO"
    },
    "5223": {
      "op": "PUSH2",
      "value": "0x147C"
    },
    "5226": {
      "op": "JUMPI"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5229": {
      "op": "DUP2"
    },
    "5230": {
      "op": "DUP7"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "op": "DUP2"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "MLOAD"
    },
    "5235": {
      "op": "DUP6"
    },
    "5236": {
      "op": "DUP4"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "MSTORE"
    },
    "5239": {
      "op": "ADD"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x1462"
    },
    "5243": {
      "op": "JUMP"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "DUP2"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "GT"
    },
    "5248": {
      "op": "ISZERO"
    },
    "5249": {
      "op": "PUSH2",
      "value": "0x148A"
    },
    "5252": {
      "op": "JUMPI"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "DUP3"
    },
    "5255": {
      "op": "DUP6"
    },
    "5256": {
      "op": "ADD"
    },
    "5257": {
      "op": "MSTORE"
    },
    "5258": {
      "op": "JUMPDEST"
    },
    "5259": {
      "op": "POP"
    },
    "5260": {
      "op": "SWAP2"
    },
    "5261": {
      "op": "SWAP1"
    },
    "5262": {
      "op": "SWAP2"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "op": "SWAP3"
    },
    "5265": {
      "op": "SWAP2"
    },
    "5266": {
      "op": "POP"
    },
    "5267": {
      "op": "POP"
    },
    "5268": {
      "jump": "o",
      "op": "JUMP"
    },
    "5269": {
      "op": "JUMPDEST"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5276": {
      "op": "SHL"
    },
    "5277": {
      "op": "SUB"
    },
    "5278": {
      "op": "SWAP2"
    },
    "5279": {
      "op": "SWAP1"
    },
    "5280": {
      "op": "SWAP2"
    },
    "5281": {
      "op": "AND"
    },
    "5282": {
      "op": "DUP2"
    },
    "5283": {
      "op": "MSTORE"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "SWAP1"
    },
    "5288": {
      "jump": "o",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "5293": {
      "op": "DUP2"
    },
    "5294": {
      "op": "ADD"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "DUP11"
    },
    "5300": {
      "op": "PUSH2",
      "value": "0x140C"
    },
    "5303": {
      "jump": "i",
      "op": "JUMP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5310": {
      "op": "DUP4"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "DUP10"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x140C"
    },
    "5316": {
      "jump": "i",
      "op": "JUMP"
    },
    "5317": {
      "op": "JUMPDEST"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5324": {
      "op": "SHL"
    },
    "5325": {
      "op": "SUB"
    },
    "5326": {
      "op": "SWAP7"
    },
    "5327": {
      "op": "SWAP1"
    },
    "5328": {
      "op": "SWAP7"
    },
    "5329": {
      "op": "AND"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5333": {
      "op": "DUP3"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "op": "MSTORE"
    },
    "5336": {
      "op": "SWAP4"
    },
    "5337": {
      "op": "ISZERO"
    },
    "5338": {
      "op": "ISZERO"
    },
    "5339": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "5342": {
      "op": "DUP6"
    },
    "5343": {
      "op": "ADD"
    },
    "5344": {
      "op": "MSTORE"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5347": {
      "op": "SWAP3"
    },
    "5348": {
      "op": "DUP4"
    },
    "5349": {
      "op": "AND"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "5353": {
      "op": "DUP6"
    },
    "5354": {
      "op": "ADD"
    },
    "5355": {
      "op": "MSTORE"
    },
    "5356": {
      "op": "SWAP1"
    },
    "5357": {
      "op": "DUP3"
    },
    "5358": {
      "op": "AND"
    },
    "5359": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "5362": {
      "op": "DUP5"
    },
    "5363": {
      "op": "ADD"
    },
    "5364": {
      "op": "MSTORE"
    },
    "5365": {
      "op": "AND"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "5369": {
      "op": "SWAP1"
    },
    "5370": {
      "op": "SWAP2"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "MSTORE"
    },
    "5373": {
      "op": "SWAP3"
    },
    "5374": {
      "op": "SWAP2"
    },
    "5375": {
      "op": "POP"
    },
    "5376": {
      "op": "POP"
    },
    "5377": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3d24c95568b08e6aac568197318109c9a9709013",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"./actions/nTokenMintAction.sol\";\nimport \"../global/StorageLayoutV1.sol\";\nimport \"../global/Types.sol\";\nimport {nTokenERC20} from \"../../interfaces/notional/nTokenERC20.sol\";\nimport \"../../interfaces/notional/NotionalProxy.sol\";\nimport {IVaultAction, IVaultAccountAction} from \"../../interfaces/notional/IVaultController.sol\";\nimport {nERC1155Interface} from \"../../interfaces/notional/nERC1155Interface.sol\";\nimport {NotionalGovernance} from \"../../interfaces/notional/NotionalGovernance.sol\";\nimport {NotionalCalculations} from \"../../interfaces/notional/NotionalCalculations.sol\";\n\n/**\n * @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n * will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n * contracts.\n *\n * This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n * allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n * new Router with the new hardcoded addresses will then be deployed and upgraded into place.\n */\ncontract Router is StorageLayoutV1 {\n    // These contract addresses cannot be changed once set by the constructor\n    address public immutable GOVERNANCE;\n    address public immutable VIEWS;\n    address public immutable INITIALIZE_MARKET;\n    address public immutable NTOKEN_ACTIONS;\n    address public immutable BATCH_ACTION;\n    address public immutable ACCOUNT_ACTION;\n    address public immutable ERC1155;\n    address public immutable LIQUIDATE_CURRENCY;\n    address public immutable LIQUIDATE_FCASH;\n    address public immutable cETH;\n    address public immutable TREASURY;\n    address public immutable CALCULATION_VIEWS;\n    address public immutable VAULT_ACCOUNT_ACTION;\n    address public immutable VAULT_ACTION;\n    address private immutable DEPLOYER;\n\n    struct DeployedContracts {\n        address governance;\n        address views;\n        address initializeMarket;\n        address nTokenActions;\n        address batchAction;\n        address accountAction;\n        address erc1155;\n        address liquidateCurrency;\n        address liquidatefCash;\n        address cETH;\n        address treasury;\n        address calculationViews;\n        address vaultAccountAction;\n        address vaultAction;\n    }\n\n    constructor(\n        DeployedContracts memory contracts\n    ) {\n        GOVERNANCE = contracts.governance;\n        VIEWS = contracts.views;\n        INITIALIZE_MARKET = contracts.initializeMarket;\n        NTOKEN_ACTIONS = contracts.nTokenActions;\n        BATCH_ACTION = contracts.batchAction;\n        ACCOUNT_ACTION = contracts.accountAction;\n        ERC1155 = contracts.erc1155;\n        LIQUIDATE_CURRENCY = contracts.liquidateCurrency;\n        LIQUIDATE_FCASH = contracts.liquidatefCash;\n        cETH = contracts.cETH;\n        TREASURY = contracts.treasury;\n        CALCULATION_VIEWS = contracts.calculationViews;\n        VAULT_ACCOUNT_ACTION = contracts.vaultAccountAction;\n        VAULT_ACTION = contracts.vaultAction;\n\n        DEPLOYER = msg.sender;\n        // This will lock everyone from calling initialize on the implementation contract\n        hasInitialized = true;\n    }\n\n    function initialize(address owner_, address pauseRouter_, address pauseGuardian_) public {\n        // Check that only the deployer can initialize\n        require(msg.sender == DEPLOYER && !hasInitialized);\n\n        // Allow list currency to be called by this contract for the purposes of\n        // initializing ETH as a currency\n        owner = msg.sender;\n        // List ETH as currency id == 1, NOTE: return value is ignored here\n\n        // FIXME: on non-mainnet deployments we should be using WETH instead here...\n        (bool status, ) =\n            address(GOVERNANCE).delegatecall(\n                abi.encodeWithSelector(\n                    NotionalGovernance.listCurrency.selector,\n                    TokenStorage(cETH, false, TokenType.cETH, Constants.CETH_DECIMAL_PLACES, 0),\n                    // No underlying set for cETH\n                    TokenStorage(address(0), false, TokenType.Ether, Constants.ETH_DECIMAL_PLACES, 0),\n                    address(0),\n                    false,\n                    133, // Initial settings of 133% buffer\n                    75,  // 75% haircut\n                    108  // 8% liquidation discount\n                )\n            );\n        require(status);\n\n        owner = owner_;\n        // The pause guardian may downgrade the router to the pauseRouter\n        pauseRouter = pauseRouter_;\n        pauseGuardian = pauseGuardian_;\n\n        hasInitialized == true;\n    }\n\n    /// @notice Returns the implementation contract for the method signature\n    /// @param sig method signature to call\n    /// @return implementation address\n    function getRouterImplementation(bytes4 sig) public view returns (address) {\n        if (\n            sig == NotionalProxy.batchBalanceAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeActionWithCallback.selector ||\n            sig == NotionalProxy.batchLend.selector\n        ) {\n            return BATCH_ACTION;\n        } else if (\n            sig == IVaultAccountAction.enterVault.selector ||\n            sig == IVaultAccountAction.rollVaultPosition.selector ||\n            sig == IVaultAccountAction.exitVault.selector ||\n            sig == IVaultAccountAction.deleverageAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccountDebtShares.selector ||\n            sig == IVaultAccountAction.getVaultAccountCollateralRatio.selector\n        ) {\n            return VAULT_ACCOUNT_ACTION;\n        } else if (\n            sig == NotionalProxy.depositUnderlyingToken.selector ||\n            sig == NotionalProxy.depositAssetToken.selector ||\n            sig == NotionalProxy.withdraw.selector ||\n            sig == NotionalProxy.settleAccount.selector ||\n            sig == NotionalProxy.nTokenRedeem.selector ||\n            sig == NotionalProxy.enableBitmapCurrency.selector\n        ) {\n            return ACCOUNT_ACTION;\n        } else if (\n            sig == nERC1155Interface.supportsInterface.selector ||\n            sig == nERC1155Interface.balanceOf.selector ||\n            sig == nERC1155Interface.balanceOfBatch.selector ||\n            sig == nERC1155Interface.signedBalanceOf.selector ||\n            sig == nERC1155Interface.signedBalanceOfBatch.selector ||\n            sig == nERC1155Interface.safeTransferFrom.selector ||\n            sig == nERC1155Interface.safeBatchTransferFrom.selector ||\n            sig == nERC1155Interface.decodeToAssets.selector ||\n            sig == nERC1155Interface.encodeToId.selector ||\n            sig == nERC1155Interface.setApprovalForAll.selector ||\n            sig == nERC1155Interface.isApprovedForAll.selector\n        ) {\n            return ERC1155;\n        } else if (\n            sig == nTokenERC20.nTokenTotalSupply.selector ||\n            sig == nTokenERC20.nTokenTransferAllowance.selector ||\n            sig == nTokenERC20.nTokenBalanceOf.selector ||\n            sig == nTokenERC20.nTokenTransferApprove.selector ||\n            sig == nTokenERC20.nTokenTransfer.selector ||\n            sig == nTokenERC20.nTokenTransferFrom.selector ||\n            sig == nTokenERC20.nTokenTransferApproveAll.selector ||\n            sig == nTokenERC20.nTokenClaimIncentives.selector ||\n            sig == nTokenERC20.nTokenPresentValueAssetDenominated.selector ||\n            sig == nTokenERC20.nTokenPresentValueUnderlyingDenominated.selector\n        ) {\n            return NTOKEN_ACTIONS;\n        } else if (\n            sig == NotionalProxy.liquidateLocalCurrency.selector ||\n            sig == NotionalProxy.liquidateCollateralCurrency.selector ||\n            sig == NotionalProxy.calculateLocalCurrencyLiquidation.selector ||\n            sig == NotionalProxy.calculateCollateralCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_CURRENCY;\n        } else if (\n            sig == NotionalProxy.liquidatefCashLocal.selector ||\n            sig == NotionalProxy.liquidatefCashCrossCurrency.selector ||\n            sig == NotionalProxy.calculatefCashLocalLiquidation.selector ||\n            sig == NotionalProxy.calculatefCashCrossCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_FCASH;\n        } else if (\n            sig == IVaultAction.updateVault.selector ||\n            sig == IVaultAction.setVaultPauseStatus.selector ||\n            sig == IVaultAction.setVaultDeleverageStatus.selector ||\n            sig == IVaultAction.setMaxBorrowCapacity.selector ||\n            sig == IVaultAction.reduceMaxBorrowCapacity.selector ||\n            sig == IVaultAction.updateSecondaryBorrowCapacity.selector ||\n            sig == IVaultAction.depositVaultCashToStrategyTokens.selector ||\n            sig == IVaultAction.redeemStrategyTokensToCash.selector ||\n            sig == IVaultAction.borrowSecondaryCurrencyToVault.selector ||\n            sig == IVaultAction.repaySecondaryCurrencyFromVault.selector ||\n            sig == IVaultAction.initiateSecondaryBorrowSettlement.selector ||\n            sig == IVaultAction.settleVault.selector ||\n            sig == IVaultAction.getVaultConfig.selector ||\n            sig == IVaultAction.getBorrowCapacity.selector ||\n            sig == IVaultAction.getSecondaryBorrow.selector ||\n            sig == IVaultAction.getVaultState.selector ||\n            sig == IVaultAction.getCashRequiredToSettle.selector\n        ) {\n            return VAULT_ACTION;\n        } else if (\n            sig == NotionalProxy.initializeMarkets.selector ||\n            sig == NotionalProxy.sweepCashIntoMarkets.selector\n        ) {\n            return INITIALIZE_MARKET;\n        } else if (\n            sig == NotionalGovernance.listCurrency.selector ||\n            sig == NotionalGovernance.enableCashGroup.selector ||\n            sig == NotionalGovernance.updateCashGroup.selector ||\n            sig == NotionalGovernance.updateAssetRate.selector ||\n            sig == NotionalGovernance.updateETHRate.selector ||\n            sig == NotionalGovernance.transferOwnership.selector ||\n            sig == NotionalGovernance.claimOwnership.selector ||\n            sig == NotionalGovernance.updateIncentiveEmissionRate.selector ||\n            sig == NotionalGovernance.updateMaxCollateralBalance.selector ||\n            sig == NotionalGovernance.updateDepositParameters.selector ||\n            sig == NotionalGovernance.updateInitializationParameters.selector ||\n            sig == NotionalGovernance.updateTokenCollateralParameters.selector ||\n            sig == NotionalGovernance.updateGlobalTransferOperator.selector ||\n            sig == NotionalGovernance.updateAuthorizedCallbackContract.selector ||\n            sig == NotionalGovernance.setLendingPool.selector ||\n            sig == NotionalProxy.upgradeTo.selector ||\n            sig == NotionalProxy.upgradeToAndCall.selector\n        ) {\n            return GOVERNANCE;\n        } else if (\n            sig == NotionalTreasury.claimCOMPAndTransfer.selector ||\n            sig == NotionalTreasury.transferReserveToTreasury.selector ||\n            sig == NotionalTreasury.setTreasuryManager.selector ||\n            sig == NotionalTreasury.setReserveBuffer.selector ||\n            sig == NotionalTreasury.setReserveCashBalance.selector\n        ) {\n            return TREASURY;\n        } else if (\n            sig == NotionalCalculations.calculateNTokensToMint.selector ||\n            sig == NotionalCalculations.getfCashAmountGivenCashAmount.selector ||\n            sig == NotionalCalculations.getCashAmountGivenfCashAmount.selector ||\n            sig == NotionalCalculations.nTokenGetClaimableIncentives.selector ||\n            sig == NotionalCalculations.getPresentfCashValue.selector ||\n            sig == NotionalCalculations.getMarketIndex.selector ||\n            sig == NotionalCalculations.getfCashLendFromDeposit.selector ||\n            sig == NotionalCalculations.getfCashBorrowFromPrincipal.selector ||\n            sig == NotionalCalculations.getDepositFromfCashLend.selector ||\n            sig == NotionalCalculations.getPrincipalFromfCashBorrow.selector ||\n            sig == NotionalCalculations.convertCashBalanceToExternal.selector\n        ) {\n            return CALCULATION_VIEWS;\n        } else {\n            // If not found then delegate to views. This will revert if there is no method on\n            // the view contract\n            return VIEWS;\n        }\n    }\n\n    /// @dev Delegates the current call to `implementation`.\n    /// This function does not return to its internal call site, it will return directly to the external caller.\n    function _delegate(address implementation) private {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n                // delegatecall returns 0 on error.\n                case 0 {\n                    revert(0, returndatasize())\n                }\n                default {\n                    return(0, returndatasize())\n                }\n        }\n    }\n\n    fallback() external payable {\n        _delegate(getRouterImplementation(msg.sig));\n    }\n\n    // NOTE: receive() is overridden in \"nProxy\" to allow for eth transfers to succeed\n}\n",
  "sourceMap": "1267:12828:16:-:0;;;2487:880;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2572:20;;-1:-1:-1;;;;;;2559:33:16;;;;;;;;;;2610:15;;;;2602:23;;;;;;;;2655:26;;;;2635:46;;;;;;;;2708:23;;;;2691:40;;;;;;;;2756:21;;;;2741:36;;;;;;;;2804:23;;;;2787:40;;;;;;;;2847:17;;;;2837:27;;;;;;;;2895;;;;2874:48;;;;;;;;2950:24;;;;2932:42;;;;;;;;2991:14;;;;2984:21;;;;;;;;3026:18;;;;3015:29;;;;;;3074:26;;;;3054:46;;;;;;3133:28;;;3110:51;;;;;;3186:21;;;;3171:36;;;;;;;3229:10;3218:21;;;;2572:20;3339:21;;-1:-1:-1;;3339:21:16;;;;;1267:12828;;14:179:137;95:13;;-1:-1:-1;;;;;137:31:137;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1578::-;;334:3;378:2;366:9;357:7;353:23;349:32;346:2;;;399:6;391;384:22;346:2;430:18;445:2;430:18;:::i;:::-;417:31;;471:42;503:9;471:42;:::i;:::-;464:5;457:57;546:51;593:2;582:9;578:18;546:51;:::i;:::-;541:2;534:5;530:14;523:75;630:51;677:2;666:9;662:18;630:51;:::i;:::-;625:2;618:5;614:14;607:75;714:51;761:2;750:9;746:18;714:51;:::i;:::-;709:2;702:5;698:14;691:75;799:52;846:3;835:9;831:19;799:52;:::i;:::-;793:3;786:5;782:15;775:77;885:52;932:3;921:9;917:19;885:52;:::i;:::-;879:3;872:5;868:15;861:77;971:52;1018:3;1007:9;1003:19;971:52;:::i;:::-;965:3;958:5;954:15;947:77;1057:52;1104:3;1093:9;1089:19;1057:52;:::i;:::-;1051:3;1044:5;1040:15;1033:77;1129:3;1164:51;1211:2;1200:9;1196:18;1164:51;:::i;:::-;1148:14;;;1141:75;1235:3;1270:51;1302:18;;;1270:51;:::i;:::-;1254:14;;;1247:75;1341:3;1376:51;1408:18;;;1376:51;:::i;:::-;1360:14;;;1353:75;1447:3;1482:51;1514:18;;;1482:51;:::i;:::-;1466:14;;;1459:75;1553:3;1588:51;1620:18;;;1588:51;:::i;:::-;1572:14;;;1565:75;1659:3;1694:51;1726:18;;;1694:51;:::i;:::-;1678:14;;;1671:75;1682:5;314:1462;-1:-1:-1;;;314:1462:137:o;1781:242::-;1851:2;1845:9;1881:17;;;-1:-1:-1;;;;;1913:34:137;;1949:22;;;1910:62;1907:2;;;1975:9;1907:2;2002;1995:22;1825:198;;-1:-1:-1;1825:198:137:o;:::-;1267:12828:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/external/Router.sol",
  "type": "contract"
}