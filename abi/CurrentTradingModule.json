[
  {
    "inputs": [
      { "internalType": "contract NotionalProxy", "name": "notional_", "type": "address" },
      { "internalType": "contract ITradingModule", "name": "proxy_", "type": "address" }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  { "inputs": [], "name": "ERC20Error", "type": "error" },
  { "inputs": [], "name": "InsufficientPermissions", "type": "error" },
  { "inputs": [], "name": "InvalidTrade", "type": "error" },
  {
    "inputs": [
      { "internalType": "uint256", "name": "minAmountOut", "type": "uint256" },
      { "internalType": "uint256", "name": "amountReceived", "type": "uint256" }
    ],
    "name": "PostValidationExactIn",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "exactAmountOut", "type": "uint256" },
      { "internalType": "uint256", "name": "amountReceived", "type": "uint256" }
    ],
    "name": "PostValidationExactOut",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "maxAmountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "preTradeSellBalance", "type": "uint256" }
    ],
    "name": "PreValidationExactIn",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "maxAmountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "preTradeSellBalance", "type": "uint256" }
    ],
    "name": "PreValidationExactOut",
    "type": "error"
  },
  { "inputs": [], "name": "SellTokenEqualsBuyToken", "type": "error" },
  {
    "inputs": [{ "internalType": "bytes", "name": "returnData", "type": "bytes" }],
    "name": "TradeExecution",
    "type": "error"
  },
  { "inputs": [], "name": "UnknownDEX", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "previousAdmin", "type": "address" },
      { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
    ],
    "name": "AdminChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": true, "internalType": "address", "name": "beacon", "type": "address" }],
    "name": "BeaconUpgraded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "uint8", "name": "version", "type": "uint8" }],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "uint32", "name": "currentValue", "type": "uint32" },
      { "indexed": false, "internalType": "uint32", "name": "newValue", "type": "uint32" }
    ],
    "name": "MaxOracleFreshnessUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "token", "type": "address" },
      { "indexed": false, "internalType": "address", "name": "oracle", "type": "address" }
    ],
    "name": "PriceOracleUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "sender", "type": "address" },
      { "indexed": false, "internalType": "address", "name": "token", "type": "address" },
      {
        "components": [
          { "internalType": "bool", "name": "allowSell", "type": "bool" },
          { "internalType": "uint32", "name": "dexFlags", "type": "uint32" },
          { "internalType": "uint32", "name": "tradeTypeFlags", "type": "uint32" }
        ],
        "indexed": false,
        "internalType": "struct ITradingModule.TokenPermissions",
        "name": "permissions",
        "type": "tuple"
      }
    ],
    "name": "TokenPermissionsUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "sellToken", "type": "address" },
      { "indexed": true, "internalType": "address", "name": "buyToken", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "sellAmount", "type": "uint256" },
      { "indexed": false, "internalType": "uint256", "name": "buyAmount", "type": "uint256" }
    ],
    "name": "TradeExecuted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": true, "internalType": "address", "name": "implementation", "type": "address" }],
    "name": "Upgraded",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "NOTIONAL",
    "outputs": [{ "internalType": "contract NotionalProxy", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "from", "type": "address" },
      { "internalType": "uint16", "name": "dexId", "type": "uint16" },
      {
        "components": [
          { "internalType": "enum TradeType", "name": "tradeType", "type": "uint8" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "uint256", "name": "limit", "type": "uint256" },
          { "internalType": "uint256", "name": "deadline", "type": "uint256" },
          { "internalType": "bytes", "name": "exchangeData", "type": "bytes" }
        ],
        "internalType": "struct Trade",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "canExecuteTrade",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "dexId", "type": "uint16" },
      {
        "components": [
          { "internalType": "enum TradeType", "name": "tradeType", "type": "uint8" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "uint256", "name": "limit", "type": "uint256" },
          { "internalType": "uint256", "name": "deadline", "type": "uint256" },
          { "internalType": "bytes", "name": "exchangeData", "type": "bytes" }
        ],
        "internalType": "struct Trade",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "executeTrade",
    "outputs": [
      { "internalType": "uint256", "name": "amountSold", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBought", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "dexId", "type": "uint16" },
      {
        "components": [
          { "internalType": "enum TradeType", "name": "tradeType", "type": "uint8" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "uint256", "name": "limit", "type": "uint256" },
          { "internalType": "uint256", "name": "deadline", "type": "uint256" },
          { "internalType": "bytes", "name": "exchangeData", "type": "bytes" }
        ],
        "internalType": "struct Trade",
        "name": "trade",
        "type": "tuple"
      },
      { "internalType": "uint32", "name": "dynamicSlippageLimit", "type": "uint32" }
    ],
    "name": "executeTradeWithDynamicSlippage",
    "outputs": [
      { "internalType": "uint256", "name": "amountSold", "type": "uint256" },
      { "internalType": "uint256", "name": "amountBought", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "dexId", "type": "uint16" },
      { "internalType": "address", "name": "from", "type": "address" },
      {
        "components": [
          { "internalType": "enum TradeType", "name": "tradeType", "type": "uint8" },
          { "internalType": "address", "name": "sellToken", "type": "address" },
          { "internalType": "address", "name": "buyToken", "type": "address" },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "uint256", "name": "limit", "type": "uint256" },
          { "internalType": "uint256", "name": "deadline", "type": "uint256" },
          { "internalType": "bytes", "name": "exchangeData", "type": "bytes" }
        ],
        "internalType": "struct Trade",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "getExecutionData",
    "outputs": [
      { "internalType": "address", "name": "spender", "type": "address" },
      { "internalType": "address", "name": "target", "type": "address" },
      { "internalType": "uint256", "name": "msgValue", "type": "uint256" },
      { "internalType": "bytes", "name": "executionCallData", "type": "bytes" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "enum TradeType", "name": "tradeType", "type": "uint8" },
      { "internalType": "address", "name": "sellToken", "type": "address" },
      { "internalType": "address", "name": "buyToken", "type": "address" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" },
      { "internalType": "uint32", "name": "slippageLimit", "type": "uint32" }
    ],
    "name": "getLimitAmount",
    "outputs": [{ "internalType": "uint256", "name": "limitAmount", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "baseToken", "type": "address" },
      { "internalType": "address", "name": "quoteToken", "type": "address" }
    ],
    "name": "getOraclePrice",
    "outputs": [
      { "internalType": "int256", "name": "answer", "type": "int256" },
      { "internalType": "int256", "name": "decimals", "type": "int256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint32", "name": "maxOracleFreshnessInSeconds_", "type": "uint32" }],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxOracleFreshnessInSeconds",
    "outputs": [{ "internalType": "uint32", "name": "", "type": "uint32" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "name": "priceOracles",
    "outputs": [
      { "internalType": "contract AggregatorV2V3Interface", "name": "oracle", "type": "address" },
      { "internalType": "uint8", "name": "rateDecimals", "type": "uint8" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proxiableUUID",
    "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint32", "name": "newMaxOracleFreshnessInSeconds", "type": "uint32" }],
    "name": "setMaxOracleFreshness",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "contract AggregatorV2V3Interface", "name": "oracle", "type": "address" }
    ],
    "name": "setPriceOracle",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "sender", "type": "address" },
      { "internalType": "address", "name": "token", "type": "address" },
      {
        "components": [
          { "internalType": "bool", "name": "allowSell", "type": "bool" },
          { "internalType": "uint32", "name": "dexFlags", "type": "uint32" },
          { "internalType": "uint32", "name": "tradeTypeFlags", "type": "uint32" }
        ],
        "internalType": "struct ITradingModule.TokenPermissions",
        "name": "permissions",
        "type": "tuple"
      }
    ],
    "name": "setTokenPermissions",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "", "type": "address" },
      { "internalType": "address", "name": "", "type": "address" }
    ],
    "name": "tokenWhitelist",
    "outputs": [
      { "internalType": "bool", "name": "allowSell", "type": "bool" },
      { "internalType": "uint32", "name": "dexFlags", "type": "uint32" },
      { "internalType": "uint32", "name": "tradeTypeFlags", "type": "uint32" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "newImplementation", "type": "address" }],
    "name": "upgradeTo",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "newImplementation", "type": "address" },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "name": "upgradeToAndCall",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]
